/*
 * Author       : wapope7431_asuflex
 * Generated on : 10-May-2023 14:45:43
 * Version      : 1.0
 */
 application "Fleet Hub"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "Asia/Kolkata"
 	time format = "24-hr"
 	section Dashboard
	{
				 page Dashboard_Mobile 
	 	 { 
 	 	 displayname = "Dashboard"

 	 	 icon = "" 

 	 	 hide =  true
	 	 Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel elementName=\"Panel\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'left'\n\t\tvAlign = 'middle'\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tcolor = '#000000'\n\tsize = '16px'\n\tbold = 'true' \n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Vehicles'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n>\n\t<pc \n\t\tpadding = '0.8px'\n\tbgColor = '#EAEAEA'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#2C6A9B'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'Driver.ID is not null &amp;&amp; Vehicle_Status == &quot;Active&quot;'\n\t  value = 'thisapp.Add_Vehicle.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#2D2D2D'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Assigned'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc><pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#2C6A9B'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'Driver.ID is null &amp;&amp; Vehicle_Status == &quot;Active&quot;'\n\t  value = 'thisapp.Add_Vehicle.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#2D2D2D'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Unassigned'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'left'\n\t\tvAlign = 'middle'\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tcolor = '#000000'\n\tsize = '16px'\n\tbold = 'true' \n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Issues'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n>\n\t<pc \n\t\tpadding = '0.8px'\n\tbgColor = '#EAEAEA'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#2C6A9B'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'Status == &quot;Open&quot; &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot; &amp;&amp; Assignee.User_Status == &quot;Active&quot;'\n\t  value = 'thisapp.Add_Issue.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#2D2D2D'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Open'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc><pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#2C6A9B'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'Due_Date &lt; zoho.currentdate &amp;&amp; Status == &quot;Open&quot; &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot; &amp;&amp; Assignee.User_Status == &quot;Active&quot;'\n\t  value = 'thisapp.Add_Issue.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#2D2D2D'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'OverDue'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel elementName=\"Panel 2\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'left'\n\t\tvAlign = 'middle'\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tcolor = '#000000'\n\tsize = '16px'\n\tbold = 'true' \n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Service Reminders'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n>\n\t<pc \n\t\tpadding = '0.8px'\n\tbgColor = '#EAEAEA'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#2C6A9B'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = ','\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Reminder_For == &quot;Service&quot; &amp;&amp; Reminder_Date &lt; zoho.currentdate &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot;'\n\t  value = 'thisapp.Set_Reminder.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#2D2D2D'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'OverDue'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc><pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#2C6A9B'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = ','\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Reminder_For == &quot;Service&quot; &amp;&amp; Reminder_Date &gt; zoho.currentdate &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot;'\n\t  value = 'thisapp.Set_Reminder.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#2D2D2D'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Due Soon'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel elementName=\"Panel 3\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'left'\n\t\tvAlign = 'middle'\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tcolor = '#000000'\n\tsize = '16px'\n\tbold = 'true' \n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Renewal Reminders'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n>\n\t<pc \n\t\tpadding = '0.8px'\n\tbgColor = '#EAEAEA'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#2C6A9B'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = ','\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Reminder_For == &quot;Renewal&quot; &amp;&amp; Reminder_Date &lt; zoho.currentdate &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot;'\n\t  value = 'thisapp.Set_Reminder.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#2D2D2D'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'OverDue'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc><pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#2C6A9B'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = ','\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Reminder_For == &quot;Renewal&quot; &amp;&amp; Reminder_Date == zoho.currentdate &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot;'\n\t  value = 'thisapp.Set_Reminder.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#2D2D2D'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Due Soon'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel elementName=\"Panel 4\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'left'\n\t\tvAlign = 'middle'\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tcolor = '#000000'\n\tsize = '16px'\n\tbold = 'true' \n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Vehicle Status'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n>\n\t<pc \n\t\tpadding = '0.8px'\n\tbgColor = '#EAEAEA'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#2C6A9B'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'Vehicle_Status == &quot;Active&quot;'\n\t  value = 'thisapp.Add_Vehicle.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#2D2D2D'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Active'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc><pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#2C6A9B'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'Vehicle_Status == &quot;Archived&quot;'\n\t  value = 'thisapp.Add_Vehicle.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#2D2D2D'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Archived'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel elementName=\"Panel 5\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'left'\n\t\tvAlign = 'middle'\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tcolor = '#000000'\n\tsize = '16px'\n\tbold = 'true' \n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'User Status'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n>\n\t<pc \n\t\tpadding = '0.8px'\n\tbgColor = '#EAEAEA'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#2C6A9B'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'User_Status == &quot;Active&quot;'\n\t  value = 'thisapp.Add_User.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#2D2D2D'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Active'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc><pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#2C6A9B'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'User_Status == &quot;Archieved&quot;'\n\t  value = 'thisapp.Add_User.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#2D2D2D'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Archived'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet1' elementName=\"HTML Snippet\"\n bgColor=\"\" \n>\n\t<![CDATA[htmlpage html_snippet1()\ndisplayname = &quot;html_snippet&quot;\ncontent\n&lt;%{\n\t%&gt;\n&lt;style&gt;\n.commentsContainer{\n\t\t\t  height:600px;\n\t\t\t  float:left;\n\t\t\t  overflow:hidden;\n\t\t\t  position:relative;\n\t\t\t  \n\t\t\t  }\n\t\t\t  .commentStyle::-webkit-scrollbar {\n\t\t\t    width: 3px;\n\t\t\t}\n\t\t\t.commentStyle::-webkit-scrollbar-track {\n\t\t\t    -webkit-box-shadow: inset 0 0 6px transparent;\n\t\t\t}\n\t\t\t \n\t\t\t.commentStyle::-webkit-scrollbar-thumb {\n\t\t\t  background-color: #d3d3d3;\n\t\t\t  visibility:hidden;\n\t\t\t}\n\t\t\t \n\t\t\t.commentStyle:hover::-webkit-scrollbar-thumb {\n\t\t\t  background-color: #d3d3d3;\n\t\t\t  visibility:visible;\n\t\t\t}\n\t\t\t .borderStyles{\n\t\t\t  \n\t\t\t  box-sizing: border-box;\n\t\t\t  margin: 0 auto;\n\t\t\t  }\n\t\t\t  .headerStyle{\n\t\t\t  padding: 10px 10px;\n\t\t\t  border-bottom: 1px solid #d3d9db;\n\t\t\t  color: #242b2e;\n\t\t\t  font-size: 14px;\n\t\t\t  font-weight: bold;\n\t\t\t  }\n\t\t\t  .imgDiv{\n\t\t\t\t  float:left;\n\t\t\t\t  border-radius:100%;\n\t\t\t\t  border:1px solid #ececec;\n\t\t\t\t  box-shadow: 2px 1px 4px #ececec;\n\t\t\t\t  z-index:4;\n\t\t\t\t  overflow:hidden;\n\t\t\t\t  }\n\t\t\t\t  .iconic_img{\n\t\t\t\t\t  width:45px;\n\t\t\t\t\t  height:45px;\n\t\t\t\t\t  text-align:center;\n\t\t\t\t\t  vertical-align: -webkit-baseline-middle;\n\t\t\t\t\t  }\n\t\t\t  .commentDetails{\n\t\t\t\t\t  float:left;\n\t\t\t\t\t  width:calc(100% - 50px);\n\t\t\t\t\t  box-sizing:border-box;\n\t\t\t\t\t  padding-left: 15px;\n\t\t\t\t  }\n\t\t\t\t  .commentStyle{\n\t\t\t\t\t  list-style: none;\n\t\t\t\t\t  padding: 0px;\n\t\t\t\t\t  margin: 0;\n\t\t\t\t\t  height: 89%;\n\t\t\t    \t  overflow: auto;\n\t\t\t\t\t  }\n\t\t\t\t  .commentStyle li{\n\t\t\t\t\t  margin: auto;\n\t\t\t    \t  padding: 13px;\n\t\t\t    \t  border-bottom: 1px solid #eee;\n\t\t\t    \t  min-height: 75px;\n\t\t\t    \t  box-sizing: border-box;\n\t\t\t    \t  display: inline-block; \n\t\t\t\t\t  width:100%;\n\t\t\t\t\t  }\n\t\t\t\t.context_style{\n\t\t\t\t\tfont-size: 11.5px;\n\t\t\t    \tword-wrap: break-word;\n\t\t\t    \twidth: 100%;\n\t\t\t    \tclear: both;\n\t\t\t    \tline-height: 1.4;\n\t\t\t    \tdisplay: -webkit-box;\n\t\t\t    \t-webkit-line-clamp: 2;\n\t\t\t    \t-webkit-box-orient: vertical;\n\t\t\t    \toverflow: hidden;\n\t\t\t    \ttext-overflow: ellipsis;\n\t\t\t    \tpadding-top: 5px;\n\t\t\t\t\t}\n\t\t\t\t.view_all_text{\n\t\t\t\t\tposition: absolute;\n\t\t\t    \tbottom: 0;\n\t\t\t    \tdisplay: inline-block;\n\t\t\t    \tleft: 45%;\n\t\t\t    \tpadding-bottom: 7px;\n\t\t\t\t}\n&lt;\/style&gt;\n &lt;div class=&quot;commentsContainer borderStyles&quot; style=&quot;box-shadow: none;&quot;&gt;\n\t\t\t  &lt;div class=&quot;headerStyle&quot;&gt;Recent Comments&lt;\/div&gt;\n&lt;%\n\tserviceEntries = Service_Entry[Comments != &quot;&quot; &amp;&amp; Comments is not null &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot;] sort by Modified_Time desc range from 1 to 10;\n\tif(serviceEntries.count() &gt; 0)\n\t{\n\t\t%&gt;\n&lt;ul class=&quot;commentStyle&quot; &gt;\n&lt;%\n\t\tfor each  eachEntry in serviceEntries\n\t\t{\n\t\t\tuserImg = &quot;&lt;img class=&apos;iconic_img&apos; src=&apos;https:\/\/contacts.zoho.com\/file?fs=thumb&amp;ID=65476310&apos;&gt;&lt;\/img&gt;&quot;;\n\t\t\tif(eachEntry.Submitted_By != null)\n\t\t\t{\n\t\t\t\tuserDetails = Add_User[ID == eachEntry.Submitted_By];\n\t\t\t\tuserName = userDetails.Name1;\n\t\t\t\tif(userDetails.Profile_Image != &quot;&quot; &amp;&amp; userDetails.Profile_Image != null)\n\t\t\t\t{\n\t\t\t\t\tuserImg = userDetails.Profile_Image;\n\t\t\t\t\tuserImg = userImg.replaceFirst(&quot;&lt;img&quot;,&quot;&lt;img class=&apos;iconic_img&apos;&quot;);\n\t\t\t\t\tuserImg = userImg.replaceFirst(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName&quot;,zoho.appuri + &quot;Users\/Profile_Image&quot;);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tuserName = eachEntry.Added_User;\n\t\t\t}\n\t\t\t%&gt;\n&lt;li&gt;\n\t\t\t  \t\t&lt;div class=&quot;imgDiv&quot;&gt;\n\t\t\t\t\t&lt;%=userImg%&gt;\n\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t  \t&lt;div class=&quot;commentDetails&quot;&gt;\n\t\t\t\t\t&lt;div&gt; &lt;span style=&quot;float:left;font-weight:bold;font-size:12px;&quot;&gt; &lt;%=userName%&gt; &lt;\/span&gt;&lt;span style=&quot;float:left;color: #394347;margin-left: 5px;margin-top: 1.5px;font-size:11px;&quot;&gt;Commented On&lt;\/span&gt;&lt;span&gt;&lt;a href=&quot;#Report:All_Service_Entries?Service_ID=&lt;%=eachEntry.Service_ID%&gt;&quot; target=&quot;_blank&quot; style=&quot;float:left;font-weight:bold;font-size:12px;margin-left:5px;&quot;&gt;#&lt;%=eachEntry.Service_ID%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;span style=&quot;float: right;font-size: 9px;margin-top: 2px;&quot; title=&quot;&lt;%=eachEntry.Added_Time%&gt;&quot;&gt;&lt;%=thisapp.PageData.timeCalc(eachEntry.Added_Time)%&gt;&lt;\/span&gt; &lt;\/div&gt;\n\t\t\t\t\t&lt;div class=&quot;context_style&quot;&gt;&lt;%=eachEntry.Comments%&gt;&lt;\/div&gt;\n\t\t\t\t\t&lt;\/div&gt;\n\t\t\t  &lt;\/li&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/ul&gt;\n\t\t\t  &lt;div class=&quot;view_all_text&quot;&gt;&lt;span&gt; &lt;a style=&quot;font-size:12px;&quot; href=&quot;#Report:All_Service_Entries&quot; target=&quot;_blank&quot;&gt; view all &lt;\/a&gt;&lt;\/span&gt;&lt;\/div&gt;\n&lt;%\n\t}\n\telse\n\t{\n\t\t%&gt;\n&lt;div style=&quot;width: 100%;height: calc(100% - 55px);display: inline-flex;align-items: center;&quot;&gt;&lt;span style=&quot;text-align: center;width: 100%;font-size: x-large;color: gainsboro;&quot;&gt;No comments available&lt;\/span&gt;&lt;\/div&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Dashboard 
	 	 { 
 	 	 displayname = "Dashboard"

 	 	 icon = "" 
	 	 Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"style\":\"padding-right:0px;padding-top:0px;padding-bottom:0px;padding-left:0px;\",\"design\":\"fluid\",\"displayType\":\"plain\"}}'\n\t\t\n\t\t\n\t\t\ttabletDeviceConfig='{\"layout\":{\"design\":\"onebyone\",\"displayType\":\"plain\",\"forcedOrientation\":false}}'\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Dashboard1' elementName=\"HTML Snippet\"\n bgColor=\"\" \n>\n\t<![CDATA[htmlpage Dashboard1()\ncontent\n&lt;%{\n\tadminCount = Add_User[Email == zoho.adminuserid].count();\n\tif(adminCount == 0)\n\t{\n\t\tthisapp.ManageUser.addAdmin();\n\t}\n\tvehiclesCount = Add_Vehicle[ID != 0].count();\n\tif(vehiclesCount == 0)\n\t{\n\t\topenUrl(&quot;#Form:Add_Vehicle&quot;,&quot;popup window&quot;);\n\t}\n\topenIssues = Add_Issue[Status == &quot;Open&quot; &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot; &amp;&amp; Assignee.User_Status == &quot;Active&quot;].count();\n\toverdueIssues = Add_Issue[Due_Date &lt; zoho.currentdate &amp;&amp; Status == &quot;Open&quot; &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot; &amp;&amp; Assignee.User_Status == &quot;Active&quot;].count();\n\toverdueServiceReminder = Set_Reminder[Reminder_For == &quot;Service&quot; &amp;&amp; Reminder_Date &lt; zoho.currentdate &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot;].count();\n\tdueSoonServiceReminder = Set_Reminder[Reminder_For == &quot;Service&quot; &amp;&amp; Reminder_Date &gt; zoho.currentdate &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot;].count();\n\tactiveVehicle = Add_Vehicle[Vehicle_Status == &quot;Active&quot;].count();\n\tarchivedVehicle = Add_Vehicle[Vehicle_Status == &quot;Archived&quot;].count();\n\tassignedVehicles = Add_Vehicle[Driver is not null &amp;&amp; Vehicle_Status == &quot;Active&quot;].count();\n\tunassignedVehicles = Add_Vehicle[Driver is null &amp;&amp; Vehicle_Status == &quot;Active&quot;].count();\n\toverdueRenewalReminder = Set_Reminder[Reminder_For == &quot;Renewal&quot; &amp;&amp; Reminder_Date &lt; zoho.currentdate &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot;].count();\n\tdueSoonRenewalReminder = Set_Reminder[Reminder_For == &quot;Renewal&quot; &amp;&amp; Reminder_Date &gt; zoho.currentdate &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot;].count();\n\tactiveUser = Add_User[User_Status == &quot;Active&quot;].count();\n\tarchivedUser = Add_User[User_Status == &quot;Archived&quot;].count();\n\t%&gt;\n&lt;style&gt;\n\t\t\t  .mainContainer{\n\t\t\t  width:100%;\n\t\t\t  height:100vh;\n\t\t\t  margin: 0 auto;\n\t\t\t  padding:15px;\n\t\t\t  box-sizing: border-box;\n\t\t\t  min-height:600px;\n\t\t\t  min-width:850px;\n\t\t\t  }\n\t\t\t  .widgetContainer{\n\t\t\t  width:calc(27.5% - 15px);\n\t\t\t  height:100%;\n\t\t\t  float:left;\n\t\t\t  }\n\t\t\t  .commentsContainer{\n\t\t\t  width:45%;\n\t\t\t  height:100%;\n\t\t\t  float:left;\n\t\t\t  overflow:hidden;\n\t\t\t  position:relative;\n\t\t\t  \n\t\t\t  }\n\t\t\t  .commentStyle::-webkit-scrollbar {\n\t\t\t    width: 3px;\n\t\t\t}\n\t\t\t \n\t\t\t.commentStyle::-webkit-scrollbar-track {\n\t\t\t    -webkit-box-shadow: inset 0 0 6px transparent;\n\t\t\t}\n\t\t\t \n\t\t\t.commentStyle::-webkit-scrollbar-thumb {\n\t\t\t  background-color: #d3d3d3;\n\t\t\t  visibility:hidden;\n\t\t\t}\n\t\t\t \n\t\t\t.commentStyle:hover::-webkit-scrollbar-thumb {\n\t\t\t  background-color: #d3d3d3;\n\t\t\t  visibility:visible;\n\t\t\t}\n\t\t\t  .numberWidget{\n\t\t\t   width: calc(100% - 2px);\n\t\t\t   height: calc(33% - 8px);\n\t\t\t  }\n\t\t\t  .borderStyles{\n\t\t\t  border: 1px solid #d3d9db;\n\t\t\t  box-shadow: 3px 3px 3px #eee;\n\t\t\t  box-sizing: border-box;\n\t\t\t  margin: 0 auto;\n\t\t\t  }\n\t\t\t  .headerStyle{\n\t\t\t  padding: 10px 10px;\n\t\t\t  border-bottom: 1px solid #d3d9db;\n\t\t\t  color: #242b2e;\n\t\t\t  font-size: 14px;\n\t\t\t  font-weight: bold;\n\t\t\t  }\n\t\t\t  .widgetBody{\n\t\t\t  width:50%;\n\t\t\t  float:left;\n\t\t\t  text-align: center;\n\t\t\t  padding:10% 0;\n\t\t\t  }\n\t\t\t  .widgetNumber{\n\t\t\t  font-size: 35px;\n\t\t\t  }\n\t\t\t  .widgetText{\n\t\t\t  font-size: 14px;\n\t\t\t  font-weight: bold;\n\t\t\t  color: #65666D;\n\t\t\t  }\n\t\t\t  .imgDiv{\n\t\t\t\t  float:left;\n\t\t\t\t  border-radius:100%;\n\t\t\t\t  border:1px solid #ececec;\n\t\t\t\t  box-shadow: 2px 1px 4px #ececec;\n\t\t\t\t  z-index:4;\n\t\t\t\t  overflow:hidden;\n\t\t\t\t  }\n\t\t\t\t  .iconic_img{\n\t\t\t\t\t  width:45px;\n\t\t\t\t\t  height:45px;\n\t\t\t\t\t  text-align:center;\n\t\t\t\t\t  vertical-align: -webkit-baseline-middle;\n\t\t\t\t\t  }\n\t\t\t  .commentDetails{\n\t\t\t\t\t  float:left;\n\t\t\t\t\t  width:calc(100% - 50px);\n\t\t\t\t\t  box-sizing:border-box;\n\t\t\t\t\t  padding-left: 15px;\n\t\t\t\t  }\n\t\t\t\t  .commentStyle{\n\t\t\t\t\t  list-style: none;\n\t\t\t\t\t  padding: 0px;\n\t\t\t\t\t  margin: 0;\n\t\t\t\t\t  height: 89%;\n\t\t\t    \t  overflow: auto;\n\t\t\t\t\t  }\n\t\t\t\t  .commentStyle li{\n\t\t\t\t\t  margin: auto;\n\t\t\t    \t  padding: 13px;\n\t\t\t    \t  border-bottom: 1px solid #eee;\n\t\t\t    \t  min-height: 75px;\n\t\t\t    \t  box-sizing: border-box;\n\t\t\t    \t  display: inline-block; \n\t\t\t\t\t  width:100%;\n\t\t\t\t\t  }\n\t\t\t\t.context_style{\n\t\t\t\t\tfont-size: 11.5px;\n\t\t\t    \tword-wrap: break-word;\n\t\t\t    \twidth: 100%;\n\t\t\t    \tclear: both;\n\t\t\t    \tline-height: 1.4;\n\t\t\t    \tdisplay: -webkit-box;\n\t\t\t    \t-webkit-line-clamp: 2;\n\t\t\t    \t-webkit-box-orient: vertical;\n\t\t\t    \toverflow: hidden;\n\t\t\t    \ttext-overflow: ellipsis;\n\t\t\t    \tpadding-top: 5px;\n\t\t\t\t\t}\n\t\t\t\t.view_all_text{\n\t\t\t\t\tposition: absolute;\n\t\t\t    \tbottom: 0;\n\t\t\t    \tdisplay: inline-block;\n\t\t\t    \tleft: 45%;\n\t\t\t    \tpadding-bottom: 7px;\n\t\t\t\t}\n\t\t\t\t.widgetWrapper{\n\t\t\t\t width: 100%;\n\t\t\t    height: calc(100% - 55px);\n\t\t\t    margin: auto;\n\t\t\t    display: inline-flex;\n\t\t\t    align-items: center;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t  &lt;\/style&gt;\n\t\t\t  &lt;div class=&quot;mainContainer&quot;&gt;\n\t\t\t  &lt;div class=&quot;widgetContainer&quot; style=&quot;margin-right:15px;&quot;&gt;\n\t\t\t  &lt;div class=&quot;numberWidget borderStyles&quot;&gt;\n\t\t\t  &lt;div class=&quot;headerStyle&quot;&gt;Issues&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetWrapper&quot;&gt;\n\t\t\t  &lt;div class=&quot;widgetBody&quot;&gt;&lt;span class=&quot;widgetNumber&quot;&gt;&lt;a href=&quot;#Report:All_Issues?Status=Open&amp;&amp;Vehicle.Vehicle_Status=Active&amp;&amp;Assignee.User_Status=Active&quot; target=&quot;_blank&quot;&gt;&lt;%=openIssues%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;br&gt;&lt;span class=&quot;widgetText&quot;&gt;Open&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetBody&quot;&gt;&lt;span class=&quot;widgetNumber&quot;&gt;&lt;a href=&quot;#Report:All_Issues?Due_Date=&lt;%=zoho.currentdate%&gt;&amp;&amp;Status=Open&amp;&amp;Vehicle.Vehicle_Status=Active&amp;&amp;Assignee.User_Status=Active&amp;&amp;Due_Date_op=20&quot; target=&quot;_blank&quot;&gt;&lt;%=overdueIssues%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;br&gt;&lt;span class=&quot;widgetText&quot;&gt;OverDue&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;numberWidget borderStyles&quot; style=&quot;margin-top:15px;&quot;&gt;\n\t\t\t  &lt;div class=&quot;headerStyle&quot;&gt;Service Reminders&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetWrapper&quot;&gt;\n\t\t\t  &lt;div class=&quot;widgetBody&quot;&gt;&lt;span class=&quot;widgetNumber&quot;&gt;&lt;a href=&quot;#Report:Service_Reminders?Reminder_For=Service&amp;Reminder_Date=&lt;%=zoho.currentdate%&gt;&amp;Vehicle.Vehicle_Status=Active&amp;Reminder_Date_op=20&quot; target=&quot;_blank&quot;&gt;&lt;%=overdueServiceReminder%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;br&gt;&lt;span class=&quot;widgetText&quot;&gt;OverDue&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetBody&quot;&gt;&lt;span class=&quot;widgetNumber&quot;&gt;&lt;a href=&quot;#Report:Service_Reminders?Reminder_For=Service&amp;Reminder_Date=&lt;%=zoho.currentdate%&gt;&amp;Vehicle.Vehicle_Status=Active&amp;Reminder_Date_op=21&quot; target=&quot;_blank&quot;&gt;&lt;%=dueSoonServiceReminder%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;br&gt;&lt;span class=&quot;widgetText&quot;&gt;Due Soon&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;numberWidget borderStyles&quot; style=&quot;margin-top:15px;&quot;&gt;\n\t\t\t  &lt;div class=&quot;headerStyle&quot;&gt;Vehicle Status&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetWrapper&quot;&gt;\n\t\t\t  &lt;div class=&quot;widgetBody&quot;&gt;&lt;span class=&quot;widgetNumber&quot;&gt;&lt;a href=&quot;#Report:Vehicles?Vehicle_Status=Active&quot; target=&quot;_blank&quot;&gt;&lt;%=activeVehicle%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;br&gt;&lt;span class=&quot;widgetText&quot;&gt;Active&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetBody&quot;&gt;&lt;span class=&quot;widgetNumber&quot;&gt;&lt;a href=&quot;#Report:Vehicles?Vehicle_Status=Archived&quot; target=&quot;_blank&quot;&gt;&lt;%=archivedVehicle%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;br&gt;&lt;span class=&quot;widgetText&quot;&gt;Archived&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;commentsContainer borderStyles&quot; style=&quot;box-shadow: none;&quot;&gt;\n\t\t\t  &lt;div class=&quot;headerStyle&quot;&gt;Recent Comments&lt;\/div&gt;\n&lt;%\n\tserviceEntries = Service_Entry[Comments != &quot;&quot; &amp;&amp; Comments is not null &amp;&amp; Vehicle.Vehicle_Status == &quot;Active&quot;] sort by Modified_Time desc range from 1 to 10;\n\tif(serviceEntries.count() &gt; 0)\n\t{\n\t\t%&gt;\n&lt;ul class=&quot;commentStyle&quot; &gt;\n&lt;%\n\t\tfor each  eachEntry in serviceEntries\n\t\t{\n\t\t\tuserImg = &quot;&lt;img class=&apos;iconic_img&apos; src=&apos;https:\/\/contacts.zoho.com\/file?fs=thumb&amp;ID=65476310&apos;&gt;&lt;\/img&gt;&quot;;\n\t\t\tif(eachEntry.Submitted_By != null)\n\t\t\t{\n\t\t\t\tuserDetails = Add_User[ID == eachEntry.Submitted_By];\n\t\t\t\tuserName = userDetails.Name1;\n\t\t\t\tif(userDetails.Profile_Image != &quot;&quot; &amp;&amp; userDetails.Profile_Image != null)\n\t\t\t\t{\n\t\t\t\t\tuserImg = userDetails.Profile_Image;\n\t\t\t\t\tuserImg = userImg.replaceFirst(&quot;&lt;img&quot;,&quot;&lt;img class=&apos;iconic_img&apos;&quot;);\n\t\t\t\t\tuserImg = userImg.replaceFirst(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName&quot;,zoho.appuri + &quot;Users\/Profile_Image&quot;);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tuserName = eachEntry.Added_User;\n\t\t\t}\n\t\t\t%&gt;\n&lt;li&gt;\n\t\t\t  \t\t&lt;div class=&quot;imgDiv&quot;&gt;\n\t\t\t\t\t&lt;%=userImg%&gt;\n\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t  \t&lt;div class=&quot;commentDetails&quot;&gt;\n\t\t\t\t\t&lt;div&gt; &lt;span style=&quot;float:left;font-weight:bold;font-size:12px;&quot;&gt; &lt;%=userName%&gt; &lt;\/span&gt;&lt;span style=&quot;float:left;color: #394347;margin-left: 5px;margin-top: 1.5px;font-size:11px;&quot;&gt;Commented On&lt;\/span&gt;&lt;span&gt;&lt;a href=&quot;#Report:All_Service_Entries?Service_ID=&lt;%=eachEntry.Service_ID%&gt;&quot; target=&quot;_blank&quot; style=&quot;float:left;font-weight:bold;font-size:12px;margin-left:5px;&quot;&gt;#&lt;%=eachEntry.Service_ID%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;span style=&quot;float: right;font-size: 9px;margin-top: 2px;&quot; title=&quot;&lt;%=eachEntry.Added_Time%&gt;&quot;&gt;&lt;%=thisapp.PageData.timeCalc(eachEntry.Added_Time)%&gt;&lt;\/span&gt; &lt;\/div&gt;\n\t\t\t\t\t&lt;div class=&quot;context_style&quot;&gt;&lt;%=eachEntry.Comments%&gt;&lt;\/div&gt;\n\t\t\t\t\t&lt;\/div&gt;\n\t\t\t  &lt;\/li&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/ul&gt;\n\t\t\t  &lt;div class=&quot;view_all_text&quot;&gt;&lt;span&gt; &lt;a style=&quot;font-size:12px;&quot; href=&quot;#Report:All_Service_Entries&quot; target=&quot;_blank&quot;&gt; view all &lt;\/a&gt;&lt;\/span&gt;&lt;\/div&gt;\n&lt;%\n\t}\n\telse\n\t{\n\t\t%&gt;\n&lt;div style=&quot;width: 100%;height: calc(100% - 55px);display: inline-flex;align-items: center;&quot;&gt;&lt;span style=&quot;text-align: center;width: 100%;font-size: x-large;color: gainsboro;&quot;&gt;No comments available&lt;\/span&gt;&lt;\/div&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetContainer&quot; style=&quot;margin-left:15px;&quot;&gt;\n\t\t\t  &lt;div class=&quot;numberWidget borderStyles&quot;&gt;\n\t\t\t  &lt;div class=&quot;headerStyle&quot;&gt;Vehicles&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetWrapper&quot;&gt;\n\t\t\t  &lt;div class=&quot;widgetBody&quot;&gt;&lt;span class=&quot;widgetNumber&quot;&gt;&lt;a href=&quot;#Report:Vehicles?Vehicle_Status=Active&amp;&amp;Driver_op=30&quot; target=&quot;_blank&quot;&gt;&lt;%=assignedVehicles%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;br&gt;&lt;span class=&quot;widgetText&quot;&gt;Assigned&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetBody&quot;&gt;&lt;span class=&quot;widgetNumber&quot;&gt;&lt;a href=&quot;#Report:Vehicles?Vehicle_Status=Active&amp;&amp;Driver_op=29&quot; target=&quot;_blank&quot;&gt;&lt;%=unassignedVehicles%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;br&gt;&lt;span class=&quot;widgetText&quot;&gt;Unassigned&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;numberWidget borderStyles&quot; style=&quot;margin-top:15px;&quot;&gt;\n\t\t\t  &lt;div class=&quot;headerStyle&quot;&gt;Renewal Reminders&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetWrapper&quot;&gt;\n\t\t\t  &lt;div class=&quot;widgetBody&quot;&gt;&lt;span class=&quot;widgetNumber&quot;&gt;&lt;a href=&quot;#Report:Renewal_Reminders?Reminder_For=Renewal&amp;Reminder_Date=&lt;%=zoho.currentdate%&gt;&amp;Vehicle.Vehicle_Status=Active&amp;Reminder_Date_op=20&quot; target=&quot;_blank&quot;&gt;&lt;%=overdueRenewalReminder%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;br&gt;&lt;span class=&quot;widgetText&quot;&gt;OverDue&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetBody&quot;&gt;&lt;span class=&quot;widgetNumber&quot;&gt;&lt;a href=&quot;#Report:Renewal_Reminders?Reminder_For=Renewal&amp;Reminder_Date=&lt;%=zoho.currentdate%&gt;&amp;Vehicle.Vehicle_Status=Active&amp;Reminder_Date_op=21&quot; target=&quot;_blank&quot;&gt;&lt;%=dueSoonRenewalReminder%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;br&gt;&lt;span class=&quot;widgetText&quot;&gt;Due Soon&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;numberWidget borderStyles&quot; style=&quot;margin-top:15px;&quot;&gt;\n\t\t\t  &lt;div class=&quot;headerStyle&quot;&gt;User Status&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetWrapper&quot;&gt;\n\t\t\t  &lt;div class=&quot;widgetBody&quot;&gt;&lt;span class=&quot;widgetNumber&quot;&gt;&lt;a href=&quot;#Report:Users?User_Status=Active&quot; target=&quot;_blank&quot;&gt;&lt;%=activeUser%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;br&gt;&lt;span class=&quot;widgetText&quot;&gt;Active&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;div class=&quot;widgetBody&quot;&gt;&lt;span class=&quot;widgetNumber&quot;&gt;&lt;a href=&quot;#Report:Users?User_Status=Archived&quot; target=&quot;_blank&quot;&gt;&lt;%=archivedUser%&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;br&gt;&lt;span class=&quot;widgetText&quot;&gt;Archived&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Vehicles
	{
		form Add_Vehicle
		{
			displayname = "Add Vehicle"
			success message = "New Vehicle Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Vehicle_Type
			(
				type = picklist	
				displayname = "Vehicle Type"
				values  = Add_Vehicle_Type.ID
    			displayformat = [Type]
				allow new entries = true
				[
					displayname = "Add New Type"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Vehicle_Name
			(
    			type = text
				displayname = "Vehicle Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Make_Model
			(
    			type = text
				displayname = "Make/Model"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Year_of_Manufacture
			(
				type = number
				displayname = "Year of Manufacture"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Color
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Vehicle_Image
			(
    			type = image
				displayname = "Vehicle Image"
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Vehicle_Group
			(
				type = picklist	
				displayname = "Vehicle Group"
				values  = Add_Vehicle_Group.ID
    			displayformat = [Group]
				allow new entries = true
				[
					displayname = "Add New Group"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Driver
			(
				type = picklist	
				values  = Add_User.ID
    			bidirectional = Driver_For
    			displayformat = [Name1.first_name + Name1.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Vehicle_Status
			(
				type = picklist
				displayname = "Vehicle Status"
				values = {"Active","Archived"}
				initial value = "Active"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Users
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Registration_Number
			(
    			type = text
				displayname = "Registration Number"
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have unique Engine_Number
			(
    			type = text
				displayname = "Engine Number"
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have unique Chassis_Number
			(
    			type = text
				displayname = "Chassis Number"
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Fuel_Type
			(
				type = picklist
				displayname = "Fuel Type"
				values = {"Diesel","Gasoline","Propane","Compressed Natural Gas (CNG)"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			Fuel_Measurement_In
			(
				type = picklist
				displayname = "Fuel Measurement In"
				values = {"Gallons (US)","Gallons (UK)","Liters"}
	 			row = 1
	 			column = 2   
				width = 206px
			)
			must have Track_Usage_As
			(
				type = picklist
				displayname = "Track Usage As"
				values = {"KiloMeters","Miles","Hours"}
	 			row = 1
	 			column = 2   
				width = 206px
			)
			Secondary_Auxilary_Meter
			(
				type = radiobuttons
				displayname = "Secondary/Auxilary Meter"
				values = {"Yes","No"}
				initial value = "No"
				layout = 2
	 			row = 1
	 			column = 2   
				width = medium
			)
			Secondary_Meter_Unit
			(
				type = picklist
				displayname = "Secondary Meter Unit"
				values = {"Kilometers","Miles","Hours"}
	 			row = 1
	 			column = 2   
				width = 206px
			)
			Owner
			(
				type = picklist	
				values  = Add_User.ID
    			bidirectional = Owned_Vehicles
    			displayformat = [Name1.first_name + Name1.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 2   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Assignment_History
		{
			displayName = "Assignment History"
			show all rows from Assign_Driver    
			(
				Ending_Odometer as "Ending Odometer"
				Comments
				Vehicle
				Starting_Odometer as "Starting Odometer"
				Start_Date as "Start Date"
				End_Date as "End Date"
				Assignment_Status as "Assignment Status"
				Driver
			)
			group by
			(
				Vehicle ascending
			)
			sort by
			(
				Assignment_Status ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Vehicle
							Driver
							Start_Date as "Start Date"
							Starting_Odometer as "Starting Odometer"
							End_Date as "End Date"
							Ending_Odometer as "Ending Odometer"
							Assignment_Status as "Assignment Status"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Vehicle
							Driver
							Start_Date as "Start Date"
							Starting_Odometer as "Starting Odometer"
							End_Date as "End Date"
							Ending_Odometer as "Ending Odometer"
							Assignment_Status as "Assignment Status"
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary My_Vehicles
		{
			displayName = "My Vehicles"
			show all rows from Add_Vehicle  [Driver.Email == zoho.loginuserid || Owner.Email == zoho.loginuserid]  
			(
				Engine_Number as "Engine Number"
				Chassis_Number as "Chassis Number"
				Vehicle_Group as "Vehicle Group"
				Vehicle_Image as "Vehicle Image"
				Year_of_Manufacture as "Year of Manufacture"
				Color
				Fuel_Type as "Fuel Type"
				Fuel_Measurement_In as "Fuel Measurement In"
				Track_Usage_As as "Track Usage As"
				Secondary_Auxilary_Meter as "Secondary/Auxilary Meter"
				Secondary_Meter_Unit as "Secondary Meter Unit"
				Vehicle_Status as "Vehicle Status"
				Make_Model as "Make/Model"
				Owner
				Driver
				Vehicle_Type as "Vehicle Type"
				Registration_Number as "Registration Number"
				Vehicle_Name as "Vehicle Name"
			)
			filters
			(
				Track_Usage_As
				Fuel_Type
			)
			options
			(
				display rows = 1
				display records per row = 2
			)
			conditional formatting
			(
				"Active Vehicle"
				{
				condition = (Vehicle_Status == "Active")
				fields = [Vehicle_Status]
				format = "color:#45c95f;background-color:#ffffff;"
				}
				"Archived Vehicle"
				{
				condition = (Vehicle_Status == "Archived")
				fields = [Vehicle_Status]
				format = "color:#f03939;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Vehicle_Type as "Vehicle Type"
							Vehicle_Name as "Vehicle Name"
							Registration_Number as "Registration Number"
							Driver
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Vehicle_Type as "Vehicle Type"
							Vehicle_Name as "Vehicle Name"
							Make_Model as "Make/Model"
							Year_of_Manufacture as "Year of Manufacture"
							Color
							Vehicle_Image as "Vehicle Image"
							Vehicle_Group as "Vehicle Group"
							Registration_Number as "Registration Number"
							Engine_Number as "Engine Number"
							Chassis_Number as "Chassis Number"
							Fuel_Type as "Fuel Type"
							Fuel_Measurement_In as "Fuel Measurement In"
							Track_Usage_As as "Track Usage As"
							Secondary_Auxilary_Meter as "Secondary/Auxilary Meter"
							Secondary_Meter_Unit as "Secondary Meter Unit"
							Vehicle_Status as "Vehicle Status"
							Driver
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Vehicles
		{
			displayName = "Vehicles"
			show all rows from Add_Vehicle    
			(
				Vehicle_Image as "Vehicle Image"
				Engine_Number as "Engine Number"
				custom action "Assign /Unassign"
				(
	  			workflow = Assign_Unassign
				show action in view header = true
				execute action for collection of records
				column header = "Assign /Unassign"
				success message = ""
				condition = (Vehicle_Status == "Active")
				)
				Chassis_Number as "Chassis Number"
				Vehicle_Group as "Vehicle Group"
				Vehicle_Status as "Vehicle Status"
				Year_of_Manufacture as "Year of Manufacture"
				Color
				Fuel_Type as "Fuel Type"
				Fuel_Measurement_In as "Fuel Measurement In"
				Track_Usage_As as "Track Usage As"
				Secondary_Auxilary_Meter as "Secondary/Auxilary Meter"
				Secondary_Meter_Unit as "Secondary Meter Unit"
				Make_Model as "Make/Model"
				Owner
				Driver
				Vehicle_Type as "Vehicle Type"
				Registration_Number as "Registration Number"
				Vehicle_Name as "Vehicle Name"
			)
			filters
			(
				Fuel_Type
				Track_Usage_As
			)
			group by
			(
				Vehicle_Status ascending
			)
			custom actions
			(
				"Archive"
				(
	  			workflow = Archive
				show action in view header = true
				show action in edit record menu = true
				execute action for collection of records
				success message = ""
				condition = (Vehicle_Status == "Active")
				)
				"Restore"
				(
	  			workflow = Restore
				show action in view header = true
				show action in edit record menu = true
				execute action for collection of records
				success message = ""
				condition = (Vehicle_Status == "Archived")
				)
			)
			conditional formatting
			(
				"Archived Vehicle"
				{
				condition = (Vehicle_Status == "Archived")
				fields = [Vehicle_Status]
				format = "color:#e64d3b;background-color:#ffffff;"
				}
				"Active Vehicle"
				{
				condition = (Vehicle_Status == "Active")
				fields = [Vehicle_Status]
				format = "color:#19bc9f;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Assign /Unassign"
							Vehicle_Type as "Vehicle Type"
							Vehicle_Name as "Vehicle Name"
							Registration_Number as "Registration Number"
							Driver
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								"Archive"
								"Restore"
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								"Archive"
								"Restore"
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Vehicle_Type as "Vehicle Type"
							Vehicle_Name as "Vehicle Name"
							Make_Model as "Make/Model"
							Year_of_Manufacture as "Year of Manufacture"
							Color
							Vehicle_Image as "Vehicle Image"
							Vehicle_Group as "Vehicle Group"
							Registration_Number as "Registration Number"
							Engine_Number as "Engine Number"
							Chassis_Number as "Chassis Number"
							Fuel_Type as "Fuel Type"
							Fuel_Measurement_In as "Fuel Measurement In"
							Track_Usage_As as "Track Usage As"
							Secondary_Auxilary_Meter as "Secondary/Auxilary Meter"
							Secondary_Meter_Unit as "Secondary Meter Unit"
							Vehicle_Status as "Vehicle Status"
							Driver
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Assign /Unassign"
			 			"Assign /Unassign" as "Archive"
			 			"Assign /Unassign" as "Restore"
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Issues
	{
		form Add_Issue
		{
			displayname = "Add Issue"
			success message = "Issue Reported Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Issue_ID
			(
    			type = autonumber
				displayname = "Issue ID"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Vehicle
			(
				type = picklist	
				values  = Add_Vehicle[Vehicle_Status == "Active"].ID
    			displayformat = [Registration_Number + " - " + Vehicle_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Title
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			File_upload
			(
    			type = upload file
				displayname = "File upload"
				browse = local_drive
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Priority
			(
				type = picklist
				values = {"Low","Medium","High"}
				initial value = "Medium"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Due_Date
			(
    			type = date
				displayname = "Due Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Assignee
			(
				type = picklist	
				values  = Add_User[User_Type != "Owner" && User_Status == "Active"].ID
    			displayformat = [User_ID + " - " + Name1.first_name + " " + Name1.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"Open","Resolved"}
				initial value = "Open"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Service_ID
			(
				type = picklist	
				displayname = "Service ID"
				values  = Service_Entry.ID
    			bidirectional = Resolved_Issues
    			displayformat = [Service_ID]
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Issues
		{
			displayName = "Issues"
			show all rows from Add_Issue  [Vehicle.Vehicle_Status == "Active" && Assignee.Email == zoho.loginuserid || Vehicle.Users.contains(zoho.loginuserid)]  
			(
				Description
				File_upload as "File upload"
				Assignee
				Service_ID as "Service Entry"
				Priority
				Vehicle
				Status
				Due_Date as "Due Date"
				Title
				Issue_ID as "Issue ID"
			)
			filters
			(
				Status
			)
			group by
			(
				Priority ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Issue_ID as "Issue ID"
							Vehicle
							Title
							Due_Date as "Due Date"
							Assignee
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Issue_ID as "Issue ID"
							Vehicle
							Title
							Description
							File_upload as "File upload"
							Priority
							Due_Date as "Due Date"
							Assignee
							Status
							Service_ID as "Service Entry"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Service_Entry
	{
		displayname= "Service Entry"
		form Service_Entry
		{
			displayname = "Service Entry"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Service_ID
			(
    			type = autonumber
				displayname = "Service ID"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Vehicle
			(
				type = picklist	
				values  = Add_Vehicle.ID
    			displayformat = [Registration_Number + " - " + Vehicle_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Serviced_On
			(
    			type = date
				displayname = "Serviced On"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Odometer
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Completed_Services
			(
				type = list	
				displayname = "Completed Services"
				values  = Add_Service_Task.ID
    			displayformat = [Task_Title]
				allow new entries = true
				[
					displayname = "Add Service Task"
				]
				searchable = true
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Resolved_Issues
			(
				type = list	
				displayname = "Resolved Issues"
				values  = Add_Issue[Vehicle == input.Vehicle && Status == "Open"].ID
    			bidirectional = Service_ID
    			displayformat = [Issue_ID + " - " + Title]
				searchable = true
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Vendor
			(
				type = picklist	
				values  = Add_Vendor[Vendor_Type == "Service"].ID
    			displayformat = [Vendor_Name]
				allow new entries = true
				[
					displayname = "Add New Vendor"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Comments
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Invoice_Details
			(
    			type = plaintext
				value = "<a><font size=\"4\">Invoice Details</font></a>"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Labor
			(
				type = INR
				initial value = 0.00
	 			row = 1
	 			column = 2   
				width = medium
			)
			Parts
			(
				type = INR
				initial value = 0.00
	 			row = 1
	 			column = 2   
				width = medium
			)
			Tax
			(
    			type = percentage
				initial value = 0.00%
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Total
			(
				type = INR
				initial value = 0.00
	 			row = 1
	 			column = 2   
				width = medium
			)
			Invoice_Number
			(
    			type = text
				displayname = "Invoice Number"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Invoice
			(
    			type = upload file
				browse = local_drive
	 			row = 1
	 			column = 2   
				width = medium
			)
			Submitted_By
			(
				type = picklist	
				displayname = "Submitted By"
				values  = Add_User.ID
    			displayformat = [User_ID + " - " + Email]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 2   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Service_Entries
		{
			displayName = "Service Entries"
			show all rows from Service_Entry  [Vehicle.Vehicle_Status == "Active" && Vehicle.Users.contains(zoho.loginuserid)]  
			(
				Comments
				Resolved_Issues as "Resolved Issues"
				Completed_Services as "Completed Services"
				Labor
				Parts
				Tax
				Invoice_Number as "Invoice Number"
				Invoice
				Vendor
				Total
				Odometer
				Vehicle
				Serviced_On as "Serviced On"
				Service_ID as "Service ID"
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Service_ID as "Service ID"
							Vehicle
							Serviced_On as "Serviced On"
							Odometer
							Completed_Services as "Completed Services"
							Total
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Service_ID as "Service ID"
							Vehicle
							Serviced_On as "Serviced On"
							Odometer
							Completed_Services as "Completed Services"
							Resolved_Issues as "Resolved Issues"
							Vendor
							Comments
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Invoice Details"
						fields
						(
							Labor
							Parts
							Tax
							Total
							Invoice_Number as "Invoice Number"
							Invoice
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Fuel_Entry
	{
		displayname= "Fuel Entry"
		form Fuel_Entry
		{
			displayname = "Fuel Entry"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Vehicle
			(
				type = picklist	
				values  = Add_Vehicle.ID
    			displayformat = [Registration_Number + " - " + Vehicle_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Date_field
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Odometer
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
			Partial_Fuel_Up
			(
				type = radiobuttons
				displayname = "Partial Fuel Up"
				values = {"Yes","No"}
				initial value = "No"
				layout = 2
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Price_Unit
			(
				type = number
				displayname = "Price/Unit"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Vendor
			(
				type = picklist	
				values  = Add_Vendor[Vendor_Type == "Fuel"].ID
    			displayformat = [Vendor_Name]
				allow new entries = true
				[
					displayname = "Add New Vendor"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Invoice_Number
			(
    			type = text
				displayname = "Invoice Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Invoice
			(
    			type = upload file
				browse = local_drive
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Fuel_Entries
		{
			displayName = "Fuel Entries"
			show all rows from Fuel_Entry  [Vehicle.Vehicle_Status == "Active" && Vehicle.Users.contains(zoho.loginuserid)]  
			(
				Partial_Fuel_Up as "Partial Fuel Up"
				Invoice_Number as "Invoice Number"
				Invoice
				Vendor
				Date_field as "Date"
				Vehicle
				Odometer
				Price_Unit as "Price/Unit"
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Vehicle
							Date_field as "Date"
							Odometer
							Partial_Fuel_Up as "Partial Fuel Up"
							Price_Unit as "Price/Unit"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Vehicle
							Date_field as "Date"
							Odometer
							Partial_Fuel_Up as "Partial Fuel Up"
							Price_Unit as "Price/Unit"
							Vendor
							Invoice_Number as "Invoice Number"
							Invoice
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Reminders
	{
		form Set_Reminder
		{
			displayname = "Set Reminder"
			success message = "New Reminder Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Reminder_For
			(
				type = radiobuttons
				displayname = "Reminder For"
				values = {"Service","Renewal"}
				initial value = "Service"
				layout = 2
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Vehicle
			(
				type = picklist	
				values  = Add_Vehicle.ID
    			displayformat = [Registration_Number + " - " + Vehicle_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Service_Task_s
			(
				type = list	
				displayname = "Service Task(s)"
				values  = Add_Service_Task.ID
    			displayformat = [Task_Title]
				allow new entries = true
				[
					displayname = "Add New Service Task"
				]
				searchable = true
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Renewal_Type
			(
				type = picklist
				displayname = "Renewal Type"
				values = {"Emission Test","Inspection","Insurance","Registration"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Notes
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Recipient_Emails
			(
				type = list	
				displayname = "Recipient Emails"
				values  = Add_User[User_Status == "Active" && User_Type != "Owner"].ID
    			displayformat = [Email]
				searchable = true
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Reminder_Date
			(
    			type = datetime
				displayname = "Reminder Date"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Service_Reminders
		{
			displayName = "Service Reminders"
			show all rows from Set_Reminder  [Reminder_For == "Service" && Recipient_Emails.Email == zoho.loginuserid || Added_User == zoho.loginuser]  
			(
				Vehicle
				Service_Task_s as "Service Task(s)"
				Notes
				Recipient_Emails as "Recipient Emails"
				Reminder_Date as "Reminder Date"
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Vehicle
							Recipient_Emails as "Recipient Emails"
							Reminder_Date as "Reminder Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Vehicle
							Service_Task_s as "Service Task(s)"
							Notes
							Recipient_Emails as "Recipient Emails"
							Reminder_Date as "Reminder Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Renewal_Reminders
		{
			displayName = "Renewal Reminders"
			show all rows from Set_Reminder  [Reminder_For == "Renewal" && Recipient_Emails.Email == zoho.loginuserid || Added_User == zoho.loginuser]  
			(
				Vehicle
				Renewal_Type as "Renewal Type"
				Notes
				Recipient_Emails as "Recipient Emails"
				Reminder_Date as "Reminder Date"
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Vehicle
							Recipient_Emails as "Recipient Emails"
							Reminder_Date as "Reminder Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Vehicle
							Renewal_Type as "Renewal Type"
							Notes
							Recipient_Emails as "Recipient Emails"
							Reminder_Date as "Reminder Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Contacts
	{
		custom Users
		{
			displayName = "Users"
			show all rows from Add_User    
			(
				Name1  as "Name"
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Address 
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
				Date_of_Birth as "Date of Birth"
				User_Type as "User Type"
				Owned_Vehicles as "Owned Vehicles"
				Driver_For as "Driver For"
				License_Number as "License Number"
				License_Class as "License Class"
				License_State_Province_Region as "License State/Province/Region"
				User_Status as "User Status"
				Phone_Number as "Phone Number"
				Email
				Profile_Image as "Profile Image"
				User_ID as "User ID"
			)
			group by
			(
				User_Type ascending
			)
			custom actions
			(
				"Archive"
				(
	  			workflow = Archive1
				show action in view header = true
				show action in edit record menu = true
				execute action for collection of records
				success message = ""
				condition = (User_Status == "Active" && User_Type != "Administrator")
				)
				"Restore"
				(
	  			workflow = Restore2
				show action in view header = true
				show action in edit record menu = true
				execute action for collection of records
				condition = (User_Status == "Active" && User_Type != "Administrator")
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 20
		     			title = "Overview"
						fields
						(
							Profile_Image as "Profile Image"
							User_ID as "User ID"
							Name1 as "Name"
							Email
							Phone_Number as "Phone Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								"Archive"
								"Restore"
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								"Archive"
								"Restore"
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							User_ID as "User ID"
							Name1 as "Name"
							Date_of_Birth as "Date of Birth"
							Profile_Image as "Profile Image"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Contact Information"
						fields
						(
							Email
							Phone_Number as "Phone Number"
							Address
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "User Information"
						fields
						(
							User_Type as "User Type"
							User_Status as "User Status"
							Owned_Vehicles as "Owned Vehicles"
							Driver_For as "Driver For"
							License_Number as "License Number"
							License_Class as "License Class"
							License_State_Province_Region as "License State/Province/Region"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Archive"
			 			"Restore"
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom Vendors
		{
			displayName = "Vendors"
			show all rows from Add_Vendor    
			(
				Address 
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
				Contact_Person  as "Name"
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Website
				Vendor_Name as "Vendor Name"
				Phone_Number as "Phone Number"
				Email
				Vendor_Type as "Vendor Type"
			)
			quickview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
		     			title = "Overview"
						fields
						(
							Contact_Person as "Name"
							Address
							Email
							Phone_Number as "Phone Number"
							Vendor_Type as "Vendor Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Vendor_Name as "Vendor Name"
							Vendor_Type as "Vendor Type"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Contact Details"
						fields
						(
							Contact_Person as "Name"
							Phone_Number as "Phone Number"
							Email
							Website
							Address
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Records
	{
		list All_Issues
		{
			displayName = "All Issues"
			show all rows from Add_Issue    
			(
				Description
				File_upload as "File upload"
				Assignee
				Service_ID as "Service Entry"
				(
					view = All_Service_Entries
				)
				Priority
				Vehicle
				Status
				Due_Date as "Due Date"
				Title
				Issue_ID as "Issue ID"
			)
			filters
			(
				Status
			)
			group by
			(
				Priority ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Issue_ID as "Issue ID"
							Vehicle
							Title
							Due_Date as "Due Date"
							Assignee
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Issue_ID as "Issue ID"
							Vehicle
							Title
							Description
							File_upload as "File upload"
							Priority
							Due_Date as "Due Date"
							Assignee
							Status
							Service_ID as "Service Entry"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Service_Entries
		{
			displayName = "All Service Entries"
			show all rows from Service_Entry    
			(
				Submitted_By as "Submitted By"
				(
					view = Users
				)
				Comments
				Completed_Services as "Completed Services"
				Resolved_Issues as "Resolved Issues"
				Labor
				Parts
				Tax
				Invoice_Number as "Invoice Number"
				Invoice
				Vendor
				Total
				Odometer
				Vehicle
				Serviced_On as "Serviced On"
				Service_ID as "Service ID"
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Service_ID as "Service ID"
							Vehicle
							Serviced_On as "Serviced On"
							Odometer
							Completed_Services as "Completed Services"
							Total
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Service_ID as "Service ID"
							Vehicle
							Serviced_On as "Serviced On"
							Odometer
							Completed_Services as "Completed Services"
							Resolved_Issues as "Resolved Issues"
							Vendor
							Comments
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Invoice Details"
						fields
						(
							Labor
							Parts
							Tax
							Total
							Invoice_Number as "Invoice Number"
							Invoice
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Fuel_Entries
		{
			displayName = "All Fuel Entries"
			show all rows from Fuel_Entry    
			(
				Date_field as "Date"
				Vehicle
				Odometer
				Partial_Fuel_Up as "Partial Fuel Up"
				Price_Unit as "Price/Unit"
				Invoice_Number as "Invoice Number"
				Invoice
				Vendor
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Vehicle
							Date_field as "Date"
							Odometer
							Partial_Fuel_Up as "Partial Fuel Up"
							Price_Unit as "Price/Unit"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Vehicle
							Date_field as "Date"
							Odometer
							Partial_Fuel_Up as "Partial Fuel Up"
							Price_Unit as "Price/Unit"
							Vendor
							Invoice_Number as "Invoice Number"
							Invoice
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Reminders
		{
			displayName = "All Reminders"
			show all rows from Set_Reminder    
			(
				Service_Task_s as "Service Task(s)"
				Renewal_Type as "Renewal Type"
				Notes
				Recipient_Emails as "Recipient Emails"
				Vehicle
				Reminder_For as "Reminder For"
				Reminder_Date as "Reminder Date"
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Vehicle
							Reminder_For as "Reminder For"
							Recipient_Emails as "Recipient Emails"
							Reminder_Date as "Reminder Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Vehicle
							Reminder_For as "Reminder For"
							Service_Task_s as "Service Task(s)"
							Renewal_Type as "Renewal Type"
							Notes
							Recipient_Emails as "Recipient Emails"
							Reminder_Date as "Reminder Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Reports
	{
		pivotchart Service_Costs
		{ 
			displayname = "Service Costs"
			legend = RIGHT
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1535715227093_Service_Entry
				show all rows from Service_Entry
				(
			Comments 
			Vendor 
			Parts 
			Labor 
			Total 
			Tax 
			Invoice 
			Invoice_Number  as "Invoice Number"
			Submitted_By  as "Submitted By"
			Vehicle 
			Service_ID  as "Service ID"
			Odometer 
			Serviced_On  as "Serviced On"
				)
		}
		pivotchart Fuel_Costs
		{ 
			displayname = "Fuel Costs"
			legend = RIGHT
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1535714836396_Fuel_Entry
				show all rows from Fuel_Entry
				(
			Partial_Fuel_Up  as "Partial Fuel Up"
			Odometer 
			Vendor 
			Price_Unit  as "Price/Unit"
			Invoice 
			Invoice_Number  as "Invoice Number"
			Date_field  as "Date"
			Vehicle 
				)
		}
	}
	section Settings
	{
		list Vehicle_Types
		{
			displayName = "Vehicle Types"
			show all rows from Add_Vehicle_Type    
			(
				Type
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Type
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Type
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Vehicle_Groups
		{
			displayName = "Vehicle Groups"
			show all rows from Add_Vehicle_Group    
			(
				Group
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Group
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Group
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Service_Tasks
		{
			displayName = "Service Tasks"
			show all rows from Add_Service_Task    
			(
				Task_Title as "Task Title"
				Description
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Task_Title as "Task Title"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Task_Title as "Task Title"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Hidden
	{
		hide = true
		form Add_Service_Task
		{
			displayname = "Add Service Task"
			success message = "Service Task Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Task_Title
			(
    			type = text
				displayname = "Task Title"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_User
		{
			displayname = "Add User"
			success message = "New User Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			General_Information
			(
    			type = plaintext
				value = "<a><font size=\"4\">General Information</font></a>"
	 			row = 1
	 			column = 1   
				width = medium
			)
			User_ID
			(
    			type = autonumber
				displayname = "User ID"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Name1
			(
    			type = name
				displayname = "Name"
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_of_Birth
			(
    			type = date
				displayname = "Date of Birth"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Profile_Image
			(
    			type = image
				displayname = "Profile Image"
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contact_Information
			(
    			type = plaintext
				value = "<a><font size=\"4\">Contact Information</font></a>"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			User_Information
			(
    			type = plaintext
				value = "<a><font size=\"4\">User Information</font></a>"
	 			row = 1
	 			column = 2   
				width = medium
			)
			User_Type
			(
				type = radiobuttons
				displayname = "User Type"
				values = {"Administrator","Driver","Owner","Both"}
				initial value = "Driver"
				layout = 3
	 			row = 1
	 			column = 2   
				width = medium
			)
			Owned_Vehicles
			(
				type = list	
				displayname = "Owned Vehicles"
				values  = Add_Vehicle[Owner is null && Vehicle_Status == "Active"].ID
    			bidirectional = Owner
    			displayformat = [Vehicle_Name]
				allow new entries = true
				[
					displayname = "Add New Vehicle"
				]
				height = 60px
	 			row = 1
	 			column = 2   
				width = medium
			)
			Driver_For
			(
				type = picklist	
				displayname = "Driver For"
				values  = Add_Vehicle[Vehicle_Status == "Active" && Driver is null].ID
    			bidirectional = Driver
    			displayformat = [Vehicle_Name]
				allow new entries = true
				[
					displayname = "Add New Vehicle"
				]
	 			row = 1
	 			column = 2   
				width = medium
			)
			License_Number
			(
    			type = text
				displayname = "License Number"
	 			row = 1
	 			column = 2   
				width = medium
			)
			License_Class
			(
    			type = text
				displayname = "License Class"
	 			row = 1
	 			column = 2   
				width = medium
			)
			License_State_Province_Region
			(
    			type = text
				displayname = "License State/Province/Region"
	 			row = 1
	 			column = 2   
				width = medium
			)
			User_Status
			(
				type = picklist
				displayname = "User Status"
				values = {"Active","Archieved"}
				initial value = "Active"
	 			row = 1
	 			column = 2   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Vendor
		{
			displayname = "Add Vendor"
			success message = "Vendor Details Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Vendor_Name
			(
    			type = text
				displayname = "Vendor Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Vendor_Type
			(
				type = picklist
				displayname = "Vendor Type"
				values = {"Fuel","Service"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contact_Person
			(
    			type = name
				displayname = "Contact Person"
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			Website
			(
    			type = url
				enable  linkname
	 			row = 1
	 			column = 1   
				width = medium
			)
			Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Vehicle_Group
		{
			displayname = "Add Vehicle Group"
			success message = "Vehicle Group Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Group
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Vehicle_Type
		{
			displayname = "Add Vehicle Type"
			success message = "Vehicle Type Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Type
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Assign_Driver
		{
			displayname = "Assign Driver"
			success message = "Driver Assigned Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Vehicle
			(
				type = picklist	
				values  = Add_Vehicle[Driver is null && Vehicle_Status == "Active"].ID
    			displayformat = [Registration_Number + " - " + Vehicle_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Driver
			(
				type = picklist	
				values  = Add_User[User_Type == "Driver" && Driver_For is null && User_Status == "Active"].ID
    			displayformat = [User_ID + " - " + Name1.first_name + Name1.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Start_Date
			(
    			type = date
				displayname = "Start Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Starting_Odometer
			(
				type = number
				displayname = "Starting Odometer"
	 			row = 1
	 			column = 1   
				width = medium
			)
			End_Date
			(
    			type = date
				displayname = "End Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Ending_Odometer
			(
				type = number
				displayname = "Ending Odometer"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Comments
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assignment_Status
			(
				type = picklist
				displayname = "Assignment Status"
				values = {"Active","Inactive"}
				initial value = "Active"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Unassign_Driver
		{
			displayname = "Unassign Driver"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Vehicle
			(
				type = picklist	
				values  = Add_Vehicle.ID
    			displayformat = [Registration_Number + " - " + Vehicle_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have End_Date
			(
    			type = date
				displayname = "End Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Ending_Odometer
			(
				type = number
				displayname = "Ending Odometer"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Comment
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				Submit
				(
   					type = submit
   					displayname = "Submit"
				)
				Reset
				(
   					type = reset
   					displayname = "Reset"
				)
			}
		}
	}
		 functions
		 {
			 Deluge
			 {
				 void CustomAction.archiveUser(Add_User userDetails)
         {
         	userDetails.User_Status="Archived";
         	if(userDetails.Driver_For != null)
         	{
         		assignedVehicle = Assign_Driver[Vehicle == userDetails.Driver_For && Assignment_Status == "Active"];
         		//Updating the assignment status to maintain assignment history 
         		assignedVehicle.Assignment_Status="Inactive";
         		assignedVehicle.End_Date=zoho.currentdate;
         		//Removing the access for previously assigned vehicles
         		thisapp.ManageUser.removeUser(userDetails.Driver_For,userDetails.Email);
         		userDetails.Driver_For=null;
         	}
         	//Here user related issues and reminders will be automatically assign to administrator
         	adminRecID = Add_User[Email == zoho.adminuserid].ID;
         	for each  eachAssignedIssue in Add_Issue[Assignee == userDetails.ID]
         	{
         		eachAssignedIssue.Assignee=adminRecID;
         	}
         	for each  eachReminder in Set_Reminder[Recipient_Emails == userDetails.ID]
         	{
         		recipientList = eachReminder.Recipient_Emails;
         		recipientList.remove(userDetails.ID);
         		recipientList.add(adminRecID);
         		eachReminder.Recipient_Emails=recipientList.distinct();
         	}
         }
				 void CustomAction.archiveVehicle(Add_Vehicle vehicleDetails)
         {
         	vehicleDetails.Vehicle_Status="Archived";
         	if(vehicleDetails.Driver != null)
         	{
         		userDetails = Add_User[ID == vehicleDetails.Driver];
         		//Removing the access for previously assigned vehicles
         		thisapp.ManageUser.removeUser(vehicleDetails.ID,userDetails.Email);
         		vehicleDetails.Driver=null;
         		//Updating the assignment status to maintain assignment history 
         		assignedVehicle = Assign_Driver[Vehicle == vehicleDetails.ID && Assignment_Status == "Active"];
         		assignedVehicle.Assignment_Status="Inactive";
         		assignedVehicle.End_Date=zoho.currentdate;
         	}
         }
				 void CustomAction.driverAssignments(Add_Vehicle vehicleDetails)
         {
         	if(vehicleDetails.Driver == null)
         	{
         		openUrl("#Form:Assign_Driver?Vehicle=" + vehicleDetails.ID,"Popup window");
         	}
         	else
         	{
         		openUrl("#Form:Unassign_Driver?Vehicle=" + vehicleDetails.ID,"Popup window");
         	}
         }
				 void CustomAction.restoreUser(Add_User userDetails)
         {
         	userDetails.User_Status="Active";
         }
				 void CustomAction.restoreVehicle(Add_Vehicle vehicleDetails)
         {
         	vehicleDetails.Vehicle_Status="Active";
         }
				 void Deletion.deleteRelatedData(int vehicleID)
         {
         	delete from Assign_Driver[Vehicle == input.vehicleID];
         	delete from Add_Issue[Vehicle == input.vehicleID];
         	delete from Service_Entry[Vehicle == input.vehicleID];
         	delete from Fuel_Entry[Vehicle == input.vehicleID];
         	delete from Set_Reminder[Vehicle == input.vehicleID];
         }
				 void ManageUser.addAdmin()
         {
         	insert into Add_User
         	[
         		Email=zoho.adminuserid
         		User_Type="Administrator"
         		Name1.first_name=zoho.adminuser
         		Added_User=zoho.adminuser
         		User_Status="Active"
         	]
         }
				 void ManageUser.addUser(int vehicleID, string emailID)
         {
         	vehicleRec = Add_Vehicle[ID == input.vehicleID];
         	vehicleRec.Users=vehicleRec.Users + emailID + ",";
         }
				 void ManageUser.removeUser(int vehicleID, string emailID)
         {
         	vehicleRec = Add_Vehicle[ID == input.vehicleID];
         	usersEmail = vehicleRec.Users;
         	emailStr = emailID + ",";
         	vehicleRec.Users=usersEmail.removeFirstOccurence(emailStr);
         }
				 string PageData.timeCalc(date addTime)
         {
         	secCal = (((zoho.currenttime - addTime)) / 1000).toLong();
         	/*
         																			12 * 30 * 24 * 60 * 60  =>  31104000 => year
         																		    30 * 24 * 60 * 60       =>  2592000  => month
         																			7  * 24 * 60 * 60		=>	604800   => Weeks
         																		    24 * 60 * 60            =>  86400    => day
         																		    60 * 60             	=>  3600     => hour
         																		    60                  	=>  60       => minute
         																			*/
         	timeCalMap = {"1":31104000,"2":2592000,"3":604800,"4":86400,"5":3600,"6":60};
         	timeCalStr = {"1":"year(s)","2":"month(s)","3":"week(s)","4":"day(s)","5":"hour(s)","6":"minute(s)"};
         	timeCalKeys = timeCalMap.keys().sort();
         	for each  eachkey in timeCalKeys
         	{
         		val = floor(secCal / timeCalMap.get(eachkey).toLong());
         		if(val >= 1)
         		{
         			return val + " " + timeCalStr.get(eachkey) + " ago ";
         		}
         	}
         	return "0 " + timeCalStr.get("6") + " ago ";
         }
				 void uinames.addUser()
         {
         	resp = getUrl("https://uinames.com/api/?amount=25&region=united states&ext").toJSONList();
         	cnt = 0;
         	for each  eachresp in resp
         	{
         		indexVal = 0;
         		testmap = eachresp.toMap();
         		n = testmap.get("name");
         		sn = testmap.get("surname");
         		num = testmap.get("phone").toString().remove("(").remove(")").remove(" ").trim();
         		email = testmap.get("email");
         		reg = testmap.get("region");
         		gen = testmap.get("gender");
         		birthdayMap = testmap.get("birthday").toMap();
         		// New Method
         		dmyFormat = birthdayMap.get("dmy").toDate();
         		AddressList = {"4141 Hacienda Drive Zoho Corporation, Pleasanton, Alameda County, California, 94588, United States","Poe Road, Elmore Desert Ranch, Imperial County, California, 84013, United States"," Lake Road, Point Comfort, Davis County, Utah, 54902, United States","Rec Road 262, Point Comfort, Kane County, Utah, 84013, United States","Ruin Park Road, ABC Road, San Juan County, Utah, 84013, United States","Lake Road, Point Comfort, Winnebago County, Wisconsin, 54902, United States","Dwight D. Eisenhower Highway, Mills Junction, Tooele County, Utah, 84013, United States","Cedar Street Bullis Park, Queen Annes, Montgomery County, Maryland, 20910, United States","2200 40th Street Northwest, Glover Park, Washington, District of Columbia, 20007, United States","6932 Essex Avenue, Springfield, Fairfax County, Virginia, 22150, United States","434 23rd Place Northeast, Kingman Park, Washington, District of Columbia, 20002, United States","Carroll Street Northwest Capital Bikeshare, Takoma, Washington, District of Columbia, 20012, United States","G Street Northwest First Congregational Church, Downtown, Washington, District of Columbia, 20005, United States","Mac Arthur Boulevard, Overlook, Montgomery County, Maryland, 20816, United States","5993 10th Place, Chillum Heights, Prince George's County, Maryland, 20782, United States","Leesburg Pike Vitamin Shoppe, Bailey s Crossroads, Fairfax County, Virginia, 22041, United States","2979 Wyth Road, Black Hawk County, Iowa, 50703, United States","6134 Longfellow Street, Springbrook Terrace, Prince George's County, Maryland, 20737, United States","2534 2940 South, Canyon Rim, Salt Lake County, Utah, 84109, United States","374 Wheeler Street, Neosho, Newton, Missouri, 64850, United States","Eje 114, San Luis Potosí, San Luis Potosi, 78421, Mexico","Willow Bend Drive, Ellis County, Texas, 75154, United States","3024 North Street, Fulton County, Georgia, 30344, United States","Pan American Freeway, Pajarito, Bernalillo County, New Mexico, 87022, United States","166 Ridgewood Drive, Norwood, Norfolk County, Massachusetts, 02062, United States","245 Bristol Street, Brownsville, New York City, New York, 11212, United States","Fort Davis Drive SE, Washington, District of Columbia, 20019, United States","620 Michigan Avenue Northeast Mary's Garden, University Heights, Washington, District of Columbia, 20018, United States","343 9th Street, Colonial Beach, Westmoreland County, Virginia, 22443, United States","Citadel Drive Toys R Us, El Paso County, Colorado, 80909, United States","Triangle Expressway, Green Level, Wake County, North Carolina, 27523, United States","500 Ross Street BNY Mellon Client Service Center, Downtown, Allegheny County, Pennsylvania, 15219, United States"};
         		//Old Method
         		/*
         															 dmyFormat = birthdayMap.get("dmy");
         															getDatestr = dmyFormat.subString(0,2);
         															  getMonthstr = dmyFormat.subString(3,5);
         															  getYearstr = dmyFormat.subString(6,dmyFormat.length());
         															  monthMap = {"01":"Jan","02":"Feb","03":"Mar","04":"Apr","05":"May","06":"Jun","07":"Jul","08":"Aug","09":"Sep","10":"Oct","11":"Nov","12":"Dec"};
         															  setMonth = monthMap.get(getMonthstr);
         															  steDate = (getDatestr + "-"+setMonth+"-"+getYearstr);
         															  info steDate.toDate();*/
         		pic = testmap.get("photo");
         		//   mdyFormat = birthdayMap.get("mdy");
         		//   rawFormat = birthdayMap.get("raw");
         		if(gen == "male")
         		{
         			gen = "Male";
         		}
         		else
         		{
         			gen = "Female";
         		}
         		userStatus = "Active";
         		if(cnt % 3 == 0)
         		{
         			userStatus = "Archieved";
         			Usertype = "Both";
         		}
         		else if(cnt % 2 == 0)
         		{
         			Usertype = "Owner";
         		}
         		else
         		{
         			Usertype = "Driver";
         		}
         		if(cnt >= AddressList.size())
         		{
         			indexVal = cnt % AddressList.size();
         		}
         		else
         		{
         			indexVal = cnt;
         		}
         		curAddress = AddressList.get(indexVal);
         		try 
         		{
         			var = insert into Add_User
         			[
         				Added_User=zoho.loginuser
         				Name1.first_name=n.toString()
         				Name1.last_name=sn.toString()
         				Date_of_Birth=dmyFormat
         				Profile_Image="<img src='" + pic + "'>"
         				Email=email
         				Phone_Number="+1" + num.toString()
         				Address.address_line_12=curAddress.toString()
         				User_Type=Usertype
         				User_Status=userStatus
         			];
         		}
         		catch (e)
         		{
         			info e;
         		}
         		cnt = cnt + 1;
         		// insert data comes here
         		/*   insert into Add_User
         															                 [
         															             Email = email
         															             Name = n + " " + sn
         															             Added_User = zoho.loginuser
         															                 ] */
         	}
         }
			 }
		 }




		workflow
		{
		form
		{
			Run_Scripts_On_Click_of_S as "Run Scripts - On Click of 'Submit' Button"
			{
				type =  form
				form = Unassign_Driver
				button = Submit
				on click
				{
					actions 
					{
					on click
					(
						//Updating the assignment status to maintain assignment history 
										assignedVehicle = Assign_Driver[Vehicle == input.Vehicle && Assignment_Status == "Active"];
										assignedVehicle.Assignment_Status="Inactive";
										assignedVehicle.End_Date=input.End_Date;
										assignedVehicle.Ending_Odometer=input.Ending_Odometer;
										assignedVehicle.Comments=input.Comment;
										//Removing the access for previously assigned vehicles
										vehicleRecord = Add_Vehicle[ID == input.Vehicle];
										thisapp.ManageUser.removeUser(input.Vehicle,vehicleRecord.Driver.Email);
										vehicleRecord.Driver=null;
										openUrl("#Script:page.refresh","same window");
					)
					}
				}
			}
			Run_Scripts_On_Always7 as "Run Scripts - On Always"
			{
				type =  form
				form = Assign_Driver
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Assignment_Status;
					}
				}

			}
			Run_Scripts_While_Adding_8 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Vehicle
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											openUrl("#Form:Add_User","same window");
						)
					}
				}

			}
			Run_Scripts_While_Deletin4 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Add_Vehicle
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											alert "All the data related to this vehicle has been deleted(service entries,fuel entries,etc..)!";
										thisapp.Deletion.deleteRelatedData(input.ID);
						)
					}
				}

			}
			Run_Scripts_On_Always8 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Vehicle
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Vehicle_Status,Owner,Driver,Users;
					}
					actions  (Secondary_Auxilary_Meter == "No")
					{
						hide Secondary_Meter_Unit;
					}
				}

			}
			Run_Scripts_While_Adding_9 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Issue
				record event = on add

				field rules
				{
					actions 
					{
						hide Service_ID;
					}
				}

			}
			Run_Scripts_While_Adding_10 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Issue
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(zoho.loginuserid != zoho.adminuserid)
										{
											//Assigning loggedin user's vehicle in 'Vehicle field'
											input.Vehicle = Add_Vehicle[Driver.Email == zoho.loginuserid].ID;
											disable Vehicle;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_11 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Issue
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Due_Date < zoho.currentdate)
										{
											alert "Please enter a valid future date!";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_12 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Issue
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											//Send notification mail to assignee regarding new issue
										sendmail
										[
											from :zoho.adminuserid
											to :input.Assignee.Email
											subject :"New Issue - " + input.Issue_ID
											message :"Hi,<div><br></div><div>New issue has been assigned to you.</div><div><br></div><div>Please find the details below,</div><div><br></div><div><table cellpadding=\"2\" cellspacing=\"2\" border=\"1\" style=\"width: 100%; font-size: 10pt;\"><tbody><tr><td>Issue ID</td><td>" + input.Issue_ID + "<br></td></tr><tr><td>Vehicle</td><td>" + input.Vehicle.Registration_Number + " -&nbsp;" + input.Vehicle.Vehicle_Name + "<br></td></tr><tr><td>Issue Title</td><td>" + input.Title + "<br></td></tr><tr><td>Reported On</td><td>" + input.Added_Time + "<br></td></tr><tr><td>Due Date</td><td>" + input.Due_Date + "<br></td></tr></tbody></table><br><br></div>"
										]
						)
					}
				}

			}
			Run_Scripts_While_Editing6 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Issue
				record event = on edit

				field rules
				{
					actions 
					{
						disable Vehicle;
					}
				}

			}
			Run_Scripts_While_Editing7 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Issue
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(old.Due_Date != input.Due_Date && input.Due_Date < zoho.currentdate)
										{
											alert "Please enter a valid date!";
											cancel submit;
										}
										if(old.Assignee != input.Assignee)
										{
											vehicleDetails = Add_Vehicle[ID == input.Vehicle];
											assigneeDetails = Add_User[ID == input.Assignee];
											//Send notification mail to assignee regarding new issue
											sendmail
											[
												from :zoho.adminuserid
												to :assigneeDetails.Email
												subject :"Issue Notification"
												message :"Hi,<div><br></div><div>New issue has been assigned to you.</div><div><br></div><div>Please find the details below,</div><div><br></div><div><table cellpadding=\"2\" cellspacing=\"2\" border=\"1\" style=\"width: 100%; font-size: 10pt;\"><tbody><tr><td>Isuue ID</td><td>" + input.Issue_ID + "<br></td></tr><tr><td>Vehicle</td><td>" + vehicleDetails.Registration_Number + " -&nbsp;" + vehicleDetails.Vehicle_Name + "<br></td></tr><tr><td>Issue Title</td><td>" + input.Title + "<br></td></tr><tr><td>Reported On</td><td>" + input.Added_Time + "<br></td></tr><tr><td>Due Date</td><td>" + input.Due_Date + "<br></td></tr></tbody></table><br><br></div>"
											]
										}
						)
					}
				}

			}
			Run_Scripts_On_Always9 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Issue
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Status;
					}
				}

			}
			Run_Scripts_On_Always10 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Issue
				record event = on add or edit

				on user input of Vehicle
				{
					actions 
					{
						custom deluge script
						(
											vehicleDetails = Add_Vehicle[ID == input.Vehicle];
										//Assigning respective driver in 'Assignee field'
										if(input.Vehicle != null && vehicleDetails.Driver != null)
										{
											input.Assignee = vehicleDetails.Driver;
											disable Assignee;
										}
										else if(input.Vehicle == null || vehicleDetails.Driver == null)
										{
											input.Assignee = null;
											enable Assignee;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_13 as "Run Scripts - While Adding a Record "
			{
				type =  form
				form = Service_Entry
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Resolved_Issues;
										if(zoho.loginuserid != zoho.adminuserid)
										{
											//Assigning loggedin user's vehicle in 'Vehicle field'
											vehicleRecord = Add_Vehicle[Driver.Email == zoho.loginuserid];
											input.Vehicle = vehicleRecord.ID;
											disable Vehicle;
											issuesList = Add_Issue[Vehicle == input.Vehicle && Status == "Open"].ID.getAll();
											if(issuesList.size() > 0)
											{
												input.Resolved_Issues:ui.add(issuesList);
											}
										}
										input.Submitted_By = Add_User[Email == zoho.loginuserid].ID;
						)
					}
				}

			}
			Run_Scripts_While_Adding_14 as "Run Scripts - While Adding a Record "
			{
				type =  form
				form = Service_Entry
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											//Updating the status of issue as 'Resolved'
										for each  eachIssue in input.Resolved_Issues
										{
											issueRecords = Add_Issue[ID == eachIssue.toLong()];
											issueRecords.Status="Resolved";
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing8 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Service_Entry
				record event = on edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											issueCount = Add_Issue[Vehicle == input.Vehicle && Status == "Open"].count();
										if(issueCount > 0)
										{
											show Resolved_Issues;
										}
										else
										{
											hide Resolved_Issues;
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing9 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Service_Entry
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											issueChanged = false;
										if(old.Resolved_Issues.size() == Resolved_Issues.size())
										{
											for each  oldResolvedIssues in old.Resolved_Issues
											{
												if(!Resolved_Issues.contains(oldResolvedIssues))
												{
													issueChanged = true;
												}
											}
										}
										else
										{
											issueChanged = true;
										}
										if(issueChanged)
										{
											for each  eachOldResolvedIssues in old.Resolved_Issues
											{
												//Reopening the issue if it is removed from "Resolved Issues" field
												issueRecords = Add_Issue[ID == eachOldResolvedIssues.toLong()];
												issueRecords.Status="Open";
											}
											for each  eachInputResolvedIssues in input.Resolved_Issues
											{
												//Updating the status of issue as 'Resolved'
												issueRecords = Add_Issue[ID == eachInputResolvedIssues.toLong()];
												issueRecords.Status="Resolved";
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin5 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Service_Entry
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											for each  eachResolvedIssues in input.Resolved_Issues
										{
											//Reopening the issue here
											issueRecords = Add_Issue[ID == eachResolvedIssues.toLong()];
											issueRecords.Status="Open";
										}
						)
					}
				}

			}
			Run_Scripts_On_Always11 as "Run Scripts - On Always"
			{
				type =  form
				form = Service_Entry
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Submitted_By;
					}
				}

			}
			Run_Scripts_On_Always12 as "Run Scripts - On Always"
			{
				type =  form
				form = Service_Entry
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Serviced_On > zoho.currentdate)
										{
											alert "Please enter a valid date.<br>Here future services are not allowed!";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always13 as "Run Scripts - On Always"
			{
				type =  form
				form = Service_Entry
				record event = on add or edit

				on user input of Total
				{
					actions 
					{
						custom deluge script
						(
											//Invoice total Calculations here
										totalAmount = input.Labor + input.Parts;
										taxAmount = totalAmount * input.Tax / 100;
										total = totalAmount + taxAmount;
										if(total != 0)
										{
											disable Total;
										}
										else
										{
											enable Total;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always14 as "Run Scripts - On Always"
			{
				type =  form
				form = Service_Entry
				record event = on add or edit

				on user input of Serviced_On
				{
					actions 
					{
						custom deluge script
						(
											if(input.Serviced_On > zoho.currentdate)
										{
											alert "Please enter a valid date..<br>Here future services are not allowed!";
										}
						)
					}
				}

			}
			Run_Scripts_On_Always15 as "Run Scripts - On Always"
			{
				type =  form
				form = Service_Entry
				record event = on add or edit

				on user input of Labor
				{
					actions 
					{
						custom deluge script
						(
											//Invoice total Calculations here
										if(input.Labor == null)
										{
											input.Labor = 0.0;
										}
										totalAmount = input.Labor + input.Parts;
										taxAmount = totalAmount * input.Tax / 100;
										input.Total = totalAmount + taxAmount;
						)
					}
				}

			}
			Run_Scripts_On_Always16 as "Run Scripts - On Always"
			{
				type =  form
				form = Service_Entry
				record event = on add or edit

				on user input of Parts
				{
					actions 
					{
						custom deluge script
						(
											//Invoice total Calculations here
										if(input.Parts == null)
										{
											input.Parts = 0.0;
										}
										totalAmount = input.Labor + input.Parts;
										taxAmount = totalAmount * input.Tax / 100;
										input.Total = totalAmount + taxAmount;
						)
					}
				}

			}
			Run_Scripts_On_Always17 as "Run Scripts - On Always"
			{
				type =  form
				form = Service_Entry
				record event = on add or edit

				on user input of Tax
				{
					actions 
					{
						custom deluge script
						(
											//Invoice total Calculations here
										if(input.Tax == null)
										{
											input.Tax = 0.0;
										}
										totalAmount = input.Labor + input.Parts;
										taxAmount = totalAmount * input.Tax / 100;
										input.Total = totalAmount + taxAmount;
						)
					}
				}

			}
			Run_Scripts_On_Always18 as "Run Scripts - On Always"
			{
				type =  form
				form = Service_Entry
				record event = on add or edit

				on user input of Vehicle
				{
					actions 
					{
						custom deluge script
						(
											issueCount = Add_Issue[Vehicle == input.Vehicle && Status == "Open"].count();
										if(issueCount > 0)
										{
											show Resolved_Issues;
										}
										else
										{
											hide Resolved_Issues;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_15 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Fuel_Entry
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(zoho.loginuserid != zoho.adminuserid)
										{
											//Assigning loggedin user's vehicle in 'Vehicle field'
											vehicleRecord = Add_Vehicle[Driver.Email == zoho.loginuserid];
											input.Vehicle = vehicleRecord.ID;
											disable Vehicle;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_16 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Fuel_Entry
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Date_field > zoho.currentdate)
										{
											alert "Please enter a valid date..<br>Here future entries are not allowed!";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing10 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Fuel_Entry
				record event = on edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(zoho.loginuserid != zoho.adminuserid)
										{
											disable Vehicle;
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing11 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Fuel_Entry
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Date_field > zoho.currentdate)
										{
											alert "Please enter a valid date..<br>Here future entries are not allowed!";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always19 as "Run Scripts - On Always"
			{
				type =  form
				form = Fuel_Entry
				record event = on add or edit

				on user input of Date_field
				{
					actions 
					{
						custom deluge script
						(
											if(input.Date_field > zoho.currentdate)
										{
											alert "Please enter a valid date..<br>Here future entries are not allowed!";
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_17 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Set_Reminder
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(zoho.loginuserid != zoho.adminuserid)
										{
											//Assigning loggedin user's vehicle in 'Vehicle field'
											vehicleRecord = Add_Vehicle[Driver.Email == zoho.loginuserid];
											input.Vehicle = vehicleRecord.ID;
											disable Vehicle;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_18 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Set_Reminder
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Reminder_Date < zoho.currentdate)
										{
											alert "Please enter a valid future date!";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing12 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Set_Reminder
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(old.Reminder_Date != input.Reminder_Date && input.Reminder_Date < zoho.currentdate)
										{
											alert "Please enter a valid date!";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always20 as "Run Scripts - On Always"
			{
				type =  form
				form = Set_Reminder
				record event = on add or edit

				field rules
				{
					actions  (Reminder_For == "Service")
					{
						hide Renewal_Type;
						show Service_Task_s;
					}
				}

			}
			Run_Scripts_On_Always21 as "Run Scripts - On Always"
			{
				type =  form
				form = Set_Reminder
				record event = on add or edit

				on user input of Vehicle
				{
					actions 
					{
						custom deluge script
						(
											if(input.Vehicle != null)
										{
											vehicles = List:String();
											vehicles.add(input.Vehicle);
											//Adding vehicle users as mail recipients(Initial selection)
											vehicleUsers = Add_User[Owned_Vehicles in vehicles || Driver_For == input.Vehicle || Email == zoho.adminuserid].ID.getAll();
											Recipient_Emails.select(vehicleUsers);
										}
										else
										{
											input.Recipient_Emails = null;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_19 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_User
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.User_Type:ui.add({"Driver","Owner","Both"});
										User_Type.select("Driver");
						)
					}
				}

			}
			Run_Scripts_While_Adding_20 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_User
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											//share the application with respective user and adding user email in vehicle users field to access the vehicle details
										if(input.User_Type = "Driver")
										{
											input.Owned_Vehicles = null;
											if(input.Driver_For != null)
											{
												thisapp.ManageUser.addUser(input.Driver_For,input.Email);
											}
											thisapp.permissions.assignUserInProfile(input.Email,"Driver");
										}
										else if(input.User_Type = "Owner")
										{
											input.Driver_For = null;
											input.License_Number = "";
											input.License_State_Province_Region = "";
											input.License_Class = "";
											for each  eachVehicle in input.Owned_Vehicles
											{
												thisapp.ManageUser.addUser(eachVehicle,input.Email);
											}
											thisapp.permissions.assignUserInProfile(input.Email,"Owner");
										}
										else
										{
											thisapp.ManageUser.addUser(input.Driver_For,input.Email);
											for each  eachVehicle in input.Owned_Vehicles
											{
												thisapp.ManageUser.addUser(eachVehicle,input.Email);
											}
											thisapp.permissions.assignUserInProfile(input.Email,"Driver");
										}
										if(input.Driver_For != null)
										{
											//Add a record in 'Assign Driver' form to maintaining the assignment status 
											insert into Assign_Driver
											[
												Added_User=zoho.loginuser
												Driver=input.ID
												Start_Date=zoho.currentdate
												Vehicle=input.Driver_For
												Assignment_Status="Active"
											]
										}
										//Send notification mail with link to access the application
										sendmail
										[
											from :zoho.adminuserid
											to :input.Email
											subject :"Invitation to access Fleet Hub"
											message :"Hi,<div><br></div><div>You have been successfully added as an user.</div><div><br></div><div>Click&nbsp;<a href=\"" + "https://app.zohocreator.in" + zoho.appuri + "\"" + " target=\"_blank\">here</a>&nbsp;to access \"Fleet Hub\"</div><div><br></div><div>Regards,</div><div>" + zoho.adminuser + "</div>"
										]
						)
					}
				}

			}
			Run_Scripts_While_Editing13 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_User
				record event = on edit

				field rules
				{
					actions  (Email == zoho.adminuserid)
					{
						disable Email;
					}
				}

			}
			Run_Scripts_While_Editing14 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_User
				record event = on edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.User_Type:ui.add({"Driver","Owner","Both"});
										User_Type.select(input.User_Type);
						)
					}
				}

			}
			Run_Scripts_While_Editing15 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_User
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											//Share the application with respective user and unshare the old privileges if the user type or user email id change
										if(old.Email != input.Email || old.User_Type != input.User_Type)
										{
											thisapp.permissions.deleteuser(old.Email);
											if(input.User_Type = "Driver")
											{
												input.Owned_Vehicles = null;
												thisapp.permissions.assignUserInProfile(input.Email,"Driver");
											}
											else if(input.User_Type = "Owner")
											{
												input.Driver_For = null;
												input.License_Number = "";
												input.License_State_Province_Region = "";
												input.License_Class = "";
												thisapp.permissions.assignUserInProfile(input.Email,"Owner");
											}
											else
											{
												thisapp.permissions.assignUserInProfile(input.Email,"Driver");
											}
										}
										if(old.Driver_For != input.Driver_For)
										{
											if(old.Driver_For != null)
											{
												//Updating the assignment status to maintain assignment history 
												assignedVehicle = Assign_Driver[Vehicle == old.Driver_For && Assignment_Status == "Active"];
												assignedVehicle.Assignment_Status="Inactive";
												assignedVehicle.End_Date=zoho.currentdate;
											}
											if(input.Driver_For != null)
											{
												//Add a record in 'Assign Driver' form to maintaining the assignment status 
												insert into Assign_Driver
												[
													Added_User=zoho.loginuser
													Driver=input.ID
													Start_Date=zoho.currentdate
													Vehicle=input.Driver_For
													Assignment_Status="Active"
												]
											}
										}
										//Adding user email in vehicle users field to access the vehicle details and removing the access for previously assigned vehicles
										if(old.Driver_For != input.Driver_For || old.Email != input.Email)
										{
											if(old.Driver_For != null)
											{
												thisapp.ManageUser.removeUser(old.Driver_For,old.Email);
											}
											if(input.Driver_For != null)
											{
												thisapp.ManageUser.addUser(input.Driver_For,input.Email);
											}
										}
										oldOwnedVehicles = List:Int();
										newOwnedVehicles = List:Int();
										commonVehicles = List:Int();
										if(old.Owned_Vehicles.size() != 0)
										{
											oldOwnedVehicles.addall(old.Owned_Vehicles);
										}
										if(Owned_Vehicles.size() != 0)
										{
											newOwnedVehicles.addall(input.Owned_Vehicles);
										}
										commonVehicles = oldOwnedVehicles.intersect(newOwnedVehicles);
										oldOwnedVehicles.removeall(commonVehicles);
										newOwnedVehicles.removeall(commonVehicles);
										for each  eachOldVehicle in oldOwnedVehicles
										{
											thisapp.ManageUser.removeUser(eachOldVehicle,old.Email);
										}
										for each  eachNewVehicle in newOwnedVehicles
										{
											thisapp.ManageUser.addUser(eachNewVehicle,input.Email);
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin6 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Add_User
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											//Here we are restricting to delete administrator's record
										if(input.Email == zoho.adminuserid)
										{
											alert "Sorry deletion is not possible for admin record";
											cancel delete;
										}
										else
										{
											//Unshare the privileges and removing the access for previously assigned vehicles
											thisapp.permissions.deleteuser(input.Email);
											if(input.Driver_For != null)
											{
												thisapp.ManageUser.removeUser(input.Driver_For,input.Email);
												//User related assignment histories will be deleted
												delete from Assign_Driver[Vehicle == input.Driver_For && Driver == input.ID && Assignment_Status == "Active"];
											}
											for each  eachVehicle in input.Owned_Vehicles
											{
												thisapp.ManageUser.removeUser(eachVehicle,input.Email);
											}
											//Here user related issues and reminders will be automatically assign to administrator
											adminRecID = Add_User[Email == zoho.adminuserid].ID;
											for each  eachAssignedIssue in Add_Issue[Assignee == input.ID]
											{
												eachAssignedIssue.Assignee=adminRecID;
											}
											for each  eachReminder in Set_Reminder[Recipient_Emails == input.ID]
											{
												recipientList = eachReminder.Recipient_Emails;
												recipientList.add(adminRecID);
												eachReminder.Recipient_Emails=recipientList.distinct();
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always22 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_User
				record event = on add or edit

				field rules
				{
					actions  (User_Type == "Owner")
					{
						hide License_Class,Driver_For,License_State_Province_Region,License_Number;
					}
					actions  (User_Type == "Driver")
					{
						hide Owned_Vehicles;
					}
					actions 
					{
						hide User_Status;
					}
				}

			}
			Run_Scripts_On_Always23 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_User
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Date_of_Birth > zoho.currentdate)
										{
											alert "Please enter a valid date!";
											cancel submit;
										}
										//Mandatory check for 'owned vehicle' field for owners 
										if(input.User_Type == "Owner" || input.User_Type == "Both" && Owned_Vehicles.size() == 0)
										{
											alert "Please select atleast one vehicle in 'owned vehicle' field!";
											cancel submit;
										}
										else if(input.User_Type == "Both" && Owned_Vehicles.size() > 0 && input.Driver_For == null)
										{
											//Mandatory check for 'Driver For' field for owners
											alert "Please select the vehicle in 'Driver For' field!";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always24 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_User
				record event = on add or edit

				on user input of Owned_Vehicles
				{
					actions 
					{
						custom deluge script
						(
											if(Owned_Vehicles.size() > 0)
										{
											//Here dynamically we are adding user owned vehicles to "Driver For" field choices
											unassignedVehicles = Add_Vehicle[ID in input.Owned_Vehicles && Driver is null].ID.getAll();
											input.Driver_For:ui.add(unassignedVehicles);
										}
						)
					}
				}

			}
			Run_Scripts_On_Always25 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_User
				record event = on add or edit

				on user input of Date_of_Birth
				{
					actions 
					{
						custom deluge script
						(
											if(input.Date_of_Birth > zoho.currentdate)
										{
											alert "Please enter a valid date!";
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_21 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Assign_Driver
				record event = on add

				field rules
				{
					actions  (Vehicle is not null)
					{
						disable Vehicle;
					}
					actions 
					{
						hide End_Date,Ending_Odometer;
						disable Start_Date;
					}
				}

			}
			Run_Scripts_While_Adding_22 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Assign_Driver
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Start_Date = zoho.currentdate;
						)
					}
				}

			}
			Run_Scripts_While_Adding_23 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Assign_Driver
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											//Updating the vehicle record with respective driver and adding driver email in vehicle users field to access the vehicle details
										vehicleRecord = Add_Vehicle[ID == input.Vehicle];
										vehicleRecord.Driver=input.Driver;
										thisapp.ManageUser.addUser(input.Vehicle,input.Driver.Email);
										openUrl("#Script:page.refresh","same window");
						)
					}
				}

			}
			Run_Scripts_While_Editing16 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Assign_Driver
				record event = on edit

				field rules
				{
					actions  (Assignment_Status == "Active")
					{
						hide End_Date,Ending_Odometer;
					}
					actions 
					{
						disable Driver,Vehicle;
					}
					actions  (Assignment_Status == "Inactive")
					{
						hide Start_Date,Starting_Odometer;
					}
				}

			}
			Run_Scripts_While_Editing17 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Assign_Driver
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Assignment_Status == "Inactive" && input.End_Date == null)
										{
											alert "Please specify the end date!";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin7 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Assign_Driver
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Assignment_Status == "Active")
										{
											vehicleRecord = Add_Vehicle[ID == input.Vehicle];
											//removing the access for previously assigned vehicles
											thisapp.ManageUser.removeUser(input.Vehicle,vehicleRecord.Driver.Email);
											vehicleRecord.Driver=null;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_24 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Unassign_Driver
				record event = on add

				field rules
				{
					actions 
					{
						hide End_Date,Vehicle;
					}
				}

			}
			Run_Scripts_While_Adding_25 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Unassign_Driver
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.End_Date = zoho.currentdate;
						)
					}
				}

			}
		}

		schedule
		{
			Issue_Reminder as "Issue_Reminder"
			{
				type =  schedule
				form = Add_Issue
				start = before 1 days from Due_Date at "09:00:00"
				time zone = "Asia/Kolkata"
				on start
				{
					actions 
					{
					on load
					(
						sendmail
										[
											from :zoho.adminuserid
											to :input.Assignee.Email
											subject :"Issue Fix Reminder [" + input.Issue_ID + " - " + input.Title + "]"
											message :"Hi,<div><br></div><div>Gentle reminder to fix this [" + input.Issue_ID + " - " + input.Title + "] issue on or before&nbsp;" + input.Due_Date + ".</div><div><br></div><div>Thanks in advance.</div><div><br></div><div>Regards,</div><div>" + zoho.adminuser + "</div>"
										]
					)
					}
				}
			}
			Reminder_Mail as "Reminder_Mail"
			{
				type =  schedule
				form = Set_Reminder
				start = Reminder_Date
				time zone = "Asia/Kolkata"
				on start
				{
					actions 
					{
					on load
					(
						if(input.Vehicle.Vehicle_Status == "Active")
										{
											if(input.Reminder_For == "Service")
											{
												userDetails = Add_User[ID == input.Vehicle.Driver];
												if(userDetails.count() > 0)
												{
													userEmail = userDetails.Email;
												}
												else
												{
													userEmail = zoho.adminuserid;
												}
												if(Service_Task_s.size() > 0)
												{
													serviceTask = input.Service_Task_s.Task_Title;
												}
												else
												{
													serviceTask = "N/A";
												}
												sendmail
												[
													from :zoho.adminuserid
													to :userEmail
													subject :"Service Reminder[" + input.Vehicle.Registration_Number + " - " + input.Vehicle.Vehicle_Name + "]"
													message :"Hi,<div><br></div><div><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.3333px; background-color: rgb(255, 255, 255);\">This is a gentle reminder to&nbsp;</span>service&nbsp;<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.3333px; background-color: rgb(255, 255, 255);\">your assigned vehicle.</span></div><div><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.3333px; background-color: rgb(255, 255, 255);\"><br></span></div><div><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.3333px; background-color: rgb(255, 255, 255);\">Please find the details below,</span></div><div><br></div><div><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.3333px; background-color: rgb(255, 255, 255);\"><table cellpadding=\"2\" cellspacing=\"2\" border=\"1\" style=\"font-size: 10pt; width: 499.333px;\"><tbody><tr><td>Vehicle</td><td>" + input.Vehicle.Registration_Number + " -&nbsp;" + input.Vehicle.Vehicle_Name + "<br></td></tr><tr><td>Service Task(s)</td><td>" + serviceTask + "<br></td></tr><tr><td>Due Date</td><td>" + input.Reminder_Date + "<br></td></tr></tbody></table><br>Regards,</span></div><div>" + zoho.adminuser + "<br></div><div><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.3333px; background-color: rgb(255, 255, 255);\"><br></span></div>"
												]
											}
											else
											{
												userDetails = Add_User[ID == input.Vehicle.Owner];
												if(userDetails.count() > 0)
												{
													userEmail = userDetails.Email;
												}
												else
												{
													userEmail = zoho.adminuserid;
												}
												if(input.Renewal_Type != "" && input.Renewal_Type != null)
												{
													renewalType = input.Renewal_Type;
												}
												else
												{
													renewalType = "N/A";
												}
												sendmail
												[
													from :zoho.adminuserid
													to :userEmail
													subject :"Renewal Reminder [" + input.Vehicle.Registration_Number + " - " + input.Vehicle.Vehicle_Name + "]"
													message :"Hi,<div><br></div><div><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.3333px; background-color: rgb(255, 255, 255);\">This is a gentle reminder to renewal your vehicle status.</span></div><div><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.3333px; background-color: rgb(255, 255, 255);\"><br></span></div><div><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.3333px; background-color: rgb(255, 255, 255);\">Please find the details below,</span></div><div><br></div><div><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.3333px; background-color: rgb(255, 255, 255);\"><table cellpadding=\"2\" cellspacing=\"2\" border=\"1\" style=\"width: 100%; font-size: 10pt;\"><tbody><tr><td>Vehicle</td><td>" + input.Vehicle.Registration_Number + " -&nbsp;" + input.Vehicle.Vehicle_Name + "<br></td></tr><tr><td>Renewal Type</td><td>" + renewalType + "<br></td></tr><tr><td>Due Date</td><td>" + input.Reminder_Date + "<br></td></tr></tbody></table><br>Regards,</span></div><div>" + zoho.adminuser + "<br></div><div><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.3333px; background-color: rgb(255, 255, 255);\"><br></span></div><div><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.3333px; background-color: rgb(255, 255, 255);\"><br></span></div>"
												]
											}
										}
					)
					}
				}
			}
		}



		functions
		{
			Assign_Unassign as "Assign /Unassign"
			{
				type =  functions
				form = Add_Vehicle
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.CustomAction.driverAssignments(Add_Vehicle);
					}
				}
			}
			Archive as "Archive"
			{
				type =  functions
				form = Add_Vehicle
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.CustomAction.archiveVehicle(Add_Vehicle);
					}
				}
			}
			Restore as "Restore"
			{
				type =  functions
				form = Add_Vehicle
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.CustomAction.restoreVehicle(Add_Vehicle);
					}
				}
			}
			Archive1 as "Archive"
			{
				type =  functions
				form = Add_User
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.CustomAction.archiveUser(Add_User);
					}
				}
			}
			Restore2 as "Restore"
			{
				type =  functions
				form = Add_User
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.CustomAction.restoreUser(Add_User);
					}
				}
			}
		}
	}
	share_settings
	{
			"Driver"
			{
				name = "Driver"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Driver Profile\n"
				ModulePermissions
				{
					Add_Issue
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							Issues={"View"}
						}
						FieldPermissions
						{
							Vehicle{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Assignee{visibility:true,readonly:false}
							Service_ID{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Due_Date{visibility:true,readonly:false}
							File_upload{visibility:true,readonly:false}
							Priority{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Issue_ID{visibility:true,readonly:false}
						}
					}
					Add_Vehicle
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							My_Vehicles={"View"}
						}
						FieldPermissions
						{
							Fuel_Type{visibility:true,readonly:false}
							Vehicle_Name{visibility:true,readonly:false}
							Owner{visibility:true,readonly:false}
							Vehicle_Group{visibility:true,readonly:false}
							Fuel_Measurement_In{visibility:true,readonly:false}
							Color{visibility:true,readonly:false}
							Driver{visibility:true,readonly:false}
							Vehicle_Image{visibility:true,readonly:false}
							Users{visibility:true,readonly:false}
							Track_Usage_As{visibility:true,readonly:false}
							Vehicle_Type{visibility:true,readonly:false}
							Registration_Number{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Vehicle_Status{visibility:true,readonly:false}
							Engine_Number{visibility:true,readonly:false}
							Chassis_Number{visibility:true,readonly:false}
							Year_of_Manufacture{visibility:true,readonly:false}
							Secondary_Meter_Unit{visibility:true,readonly:false}
							Secondary_Auxilary_Meter{visibility:true,readonly:false}
							Make_Model{visibility:true,readonly:false}
						}
					}
					Fuel_Entry
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Fuel_Entries={"View"}
						}
						FieldPermissions
						{
							Vehicle{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Invoice{visibility:true,readonly:false}
							Price_Unit{visibility:true,readonly:false}
							Partial_Fuel_Up{visibility:true,readonly:false}
							Invoice_Number{visibility:true,readonly:false}
							Odometer{visibility:true,readonly:false}
							Vendor{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Vehicle_Group
					{
						FieldPermissions
						{
							Group{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Vehicle_Type
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Type{visibility:true,readonly:false}
						}
					}
					Add_User
					{
						FieldPermissions
						{
							Date_of_Birth{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							Owned_Vehicles{visibility:true,readonly:false}
							License_Class{visibility:true,readonly:false}
							Phone_Number{visibility:true,readonly:false}
							License_State_Province_Region{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							User_Type{visibility:true,readonly:false}
							Contact_Information{visibility:true,readonly:false}
							Driver_For{visibility:true,readonly:false}
							Profile_Image{visibility:true,readonly:false}
							User_Status{visibility:true,readonly:false}
							License_Number{visibility:true,readonly:false}
							User_ID{visibility:true,readonly:false}
							User_Information{visibility:true,readonly:false}
							General_Information{visibility:true,readonly:false}
							Name1{visibility:true,readonly:false}
						}
					}
					Add_Vendor
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Vendors={"View","Edit","Delete"}
						}
						FieldPermissions
						{
							Email{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							Vendor_Name{visibility:true,readonly:false}
							Vendor_Type{visibility:true,readonly:false}
							Website{visibility:true,readonly:false}
							Contact_Person{visibility:true,readonly:false}
							Phone_Number{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Unassign_Driver
					{
						FieldPermissions
						{
							Vehicle{visibility:true,readonly:false}
							Ending_Odometer{visibility:true,readonly:false}
							Comment{visibility:true,readonly:false}
							End_Date{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Assign_Driver
					{
						FieldPermissions
						{
							Ending_Odometer{visibility:true,readonly:false}
							Vehicle{visibility:true,readonly:false}
							Starting_Odometer{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Driver{visibility:true,readonly:false}
							Start_Date{visibility:true,readonly:false}
							End_Date{visibility:true,readonly:false}
							Assignment_Status{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
						}
					}
					Service_Entry
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Service_Entries={"View"}
						}
						FieldPermissions
						{
							Service_ID{visibility:true,readonly:false}
							Completed_Services{visibility:true,readonly:false}
							Invoice{visibility:true,readonly:false}
							Resolved_Issues{visibility:true,readonly:false}
							Submitted_By{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Odometer{visibility:true,readonly:false}
							Invoice_Number{visibility:true,readonly:false}
							Tax{visibility:true,readonly:false}
							Vendor{visibility:true,readonly:false}
							Labor{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Invoice_Details{visibility:true,readonly:false}
							Vehicle{visibility:true,readonly:false}
							Serviced_On{visibility:true,readonly:false}
							Parts{visibility:true,readonly:false}
							Total{visibility:true,readonly:false}
						}
					}
					Add_Service_Task
					{
						FieldPermissions
						{
							Task_Title{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Set_Reminder
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Service_Reminders={"View","Edit","Delete"}
							Renewal_Reminders={"View","Edit","Delete"}
						}
						FieldPermissions
						{
							Vehicle{visibility:true,readonly:false}
							Service_Task_s{visibility:true,readonly:false}
							Recipient_Emails{visibility:true,readonly:false}
							Renewal_Type{visibility:true,readonly:false}
							Reminder_For{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Notes{visibility:true,readonly:false}
							Reminder_Date{visibility:true,readonly:false}
						}
					}
				}
			}
			"Owner"
			{
				name = "Owner"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Owner Profile\n"
				ModulePermissions
				{
					Add_Issue
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							Issues={"View"}
						}
						FieldPermissions
						{
							Vehicle{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Assignee{visibility:true,readonly:false}
							Service_ID{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Due_Date{visibility:true,readonly:false}
							File_upload{visibility:true,readonly:false}
							Priority{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Issue_ID{visibility:true,readonly:false}
						}
					}
					Add_Vehicle
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							My_Vehicles={"View"}
						}
						FieldPermissions
						{
							Fuel_Type{visibility:true,readonly:false}
							Vehicle_Name{visibility:true,readonly:false}
							Owner{visibility:true,readonly:false}
							Vehicle_Group{visibility:true,readonly:false}
							Fuel_Measurement_In{visibility:true,readonly:false}
							Color{visibility:true,readonly:false}
							Driver{visibility:true,readonly:false}
							Vehicle_Image{visibility:true,readonly:false}
							Users{visibility:true,readonly:false}
							Track_Usage_As{visibility:true,readonly:false}
							Vehicle_Type{visibility:true,readonly:false}
							Registration_Number{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Vehicle_Status{visibility:true,readonly:false}
							Engine_Number{visibility:true,readonly:false}
							Chassis_Number{visibility:true,readonly:false}
							Year_of_Manufacture{visibility:true,readonly:false}
							Secondary_Meter_Unit{visibility:true,readonly:false}
							Secondary_Auxilary_Meter{visibility:true,readonly:false}
							Make_Model{visibility:true,readonly:false}
						}
					}
					Fuel_Entry
					{
						FieldPermissions
						{
							Vehicle{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Invoice{visibility:true,readonly:false}
							Price_Unit{visibility:true,readonly:false}
							Partial_Fuel_Up{visibility:true,readonly:false}
							Invoice_Number{visibility:true,readonly:false}
							Odometer{visibility:true,readonly:false}
							Vendor{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Vehicle_Group
					{
						FieldPermissions
						{
							Group{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Vehicle_Type
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Type{visibility:true,readonly:false}
						}
					}
					Add_User
					{
						FieldPermissions
						{
							Date_of_Birth{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							Owned_Vehicles{visibility:true,readonly:false}
							License_Class{visibility:true,readonly:false}
							Phone_Number{visibility:true,readonly:false}
							License_State_Province_Region{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							User_Type{visibility:true,readonly:false}
							Contact_Information{visibility:true,readonly:false}
							Driver_For{visibility:true,readonly:false}
							Profile_Image{visibility:true,readonly:false}
							User_Status{visibility:true,readonly:false}
							License_Number{visibility:true,readonly:false}
							User_ID{visibility:true,readonly:false}
							User_Information{visibility:true,readonly:false}
							General_Information{visibility:true,readonly:false}
							Name1{visibility:true,readonly:false}
						}
					}
					Add_Vendor
					{
						FieldPermissions
						{
							Email{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							Vendor_Name{visibility:true,readonly:false}
							Vendor_Type{visibility:true,readonly:false}
							Website{visibility:true,readonly:false}
							Contact_Person{visibility:true,readonly:false}
							Phone_Number{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Unassign_Driver
					{
						FieldPermissions
						{
							Vehicle{visibility:true,readonly:false}
							Ending_Odometer{visibility:true,readonly:false}
							Comment{visibility:true,readonly:false}
							End_Date{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Assign_Driver
					{
						FieldPermissions
						{
							Ending_Odometer{visibility:true,readonly:false}
							Vehicle{visibility:true,readonly:false}
							Starting_Odometer{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Driver{visibility:true,readonly:false}
							Start_Date{visibility:true,readonly:false}
							End_Date{visibility:true,readonly:false}
							Assignment_Status{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
						}
					}
					Service_Entry
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							Service_Entries={"View"}
						}
						FieldPermissions
						{
							Service_ID{visibility:true,readonly:false}
							Completed_Services{visibility:true,readonly:false}
							Invoice{visibility:true,readonly:false}
							Resolved_Issues{visibility:true,readonly:false}
							Submitted_By{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Odometer{visibility:true,readonly:false}
							Invoice_Number{visibility:true,readonly:false}
							Tax{visibility:true,readonly:false}
							Vendor{visibility:true,readonly:false}
							Labor{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Invoice_Details{visibility:true,readonly:false}
							Vehicle{visibility:true,readonly:false}
							Serviced_On{visibility:true,readonly:false}
							Parts{visibility:true,readonly:false}
							Total{visibility:true,readonly:false}
						}
					}
					Add_Service_Task
					{
						FieldPermissions
						{
							Task_Title{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Set_Reminder
					{
						FieldPermissions
						{
							Vehicle{visibility:true,readonly:false}
							Service_Task_s{visibility:true,readonly:false}
							Recipient_Emails{visibility:true,readonly:false}
							Renewal_Type{visibility:true,readonly:false}
							Reminder_For{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Notes{visibility:true,readonly:false}
							Reminder_Date{visibility:true,readonly:false}
						}
					}
				}
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have all the permissions.\n"
			}
			"User"
			{
				name = "User"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile only have add and view permission.\n"
				ModulePermissions
				{
					Add_Issue
					{
						FieldPermissions
						{
							Status{visibility:false,readonly:false}
							Modified_User{visibility:false}
							Assignee{visibility:false,readonly:false}
							Service_ID{visibility:false,readonly:false}
							Modified_Time{visibility:false}
							Description{visibility:false,readonly:false}
							Due_Date{visibility:false,readonly:false}
							Priority{visibility:false,readonly:false}
							Title{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
							Modified_User_IP_Address{visibility:false}
							Vehicle{visibility:false,readonly:false}
							Added_User_IP_Address{visibility:false}
							File_upload{visibility:false,readonly:false}
							Added_User{visibility:false}
							ID{visibility:false}
							Issue_ID{visibility:false,readonly:false}
							Added_Time{visibility:false}
						}
					}
					Assign_Driver
					{
						FieldPermissions
						{
							Modified_User{visibility:false}
							Modified_Time{visibility:false}
							Starting_Odometer{visibility:false,readonly:false}
							Comments{visibility:false,readonly:false}
							Driver{visibility:false,readonly:false}
							End_Date{visibility:false,readonly:false}
							Assignment_Status{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
							Modified_User_IP_Address{visibility:false}
							Ending_Odometer{visibility:false,readonly:false}
							Added_User_IP_Address{visibility:false}
							Vehicle{visibility:false,readonly:false}
							Added_User{visibility:false}
							ID{visibility:false}
							Start_Date{visibility:false,readonly:false}
							Added_Time{visibility:false}
						}
					}
					Service_Entry
					{
						FieldPermissions
						{
							Service_ID{visibility:false,readonly:false}
							Completed_Services{visibility:false,readonly:false}
							Invoice{visibility:false,readonly:false}
							Tax{visibility:false,readonly:false}
							Labor{visibility:false,readonly:false}
							Modified_User_IP_Address{visibility:false}
							Vehicle{visibility:false,readonly:false}
							Parts{visibility:false,readonly:false}
							Added_User{visibility:false}
							ID{visibility:false}
							Added_Time{visibility:false}
							Modified_User{visibility:false}
							Modified_Time{visibility:false}
							Resolved_Issues{visibility:false,readonly:false}
							Submitted_By{visibility:false,readonly:false}
							Comments{visibility:false,readonly:false}
							Odometer{visibility:false,readonly:false}
							Invoice_Number{visibility:false,readonly:false}
							Vendor{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
							Invoice_Details{visibility:false,readonly:false}
							Serviced_On{visibility:false,readonly:false}
							Added_User_IP_Address{visibility:false}
							Total{visibility:false,readonly:false}
						}
					}
					Add_Vehicle
					{
						enabled= Create,Viewall,Tab,View,Search 
						FieldPermissions
						{
							Fuel_Type{visibility:true,readonly:false}
							Vehicle_Name{visibility:true,readonly:false}
							Owner{visibility:true,readonly:false}
							Vehicle_Group{visibility:true,readonly:false}
							Fuel_Measurement_In{visibility:true,readonly:false}
							Color{visibility:true,readonly:false}
							Driver{visibility:true,readonly:false}
							Vehicle_Image{visibility:true,readonly:false}
							Users{visibility:true,readonly:false}
							Track_Usage_As{visibility:true,readonly:false}
							Vehicle_Type{visibility:true,readonly:false}
							Registration_Number{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Vehicle_Status{visibility:true,readonly:false}
							Engine_Number{visibility:true,readonly:false}
							Chassis_Number{visibility:true,readonly:false}
							Year_of_Manufacture{visibility:true,readonly:false}
							Secondary_Meter_Unit{visibility:true,readonly:false}
							Secondary_Auxilary_Meter{visibility:true,readonly:false}
							Make_Model{visibility:true,readonly:false}
						}
					}
					Fuel_Entry
					{
						FieldPermissions
						{
							Modified_User{visibility:false}
							Modified_Time{visibility:false}
							Invoice{visibility:false,readonly:false}
							Invoice_Number{visibility:false,readonly:false}
							Odometer{visibility:false,readonly:false}
							Vendor{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
							Modified_User_IP_Address{visibility:false}
							Added_User_IP_Address{visibility:false}
							Vehicle{visibility:false,readonly:false}
							Date_field{visibility:false,readonly:false}
							Price_Unit{visibility:false,readonly:false}
							Partial_Fuel_Up{visibility:false,readonly:false}
							Added_User{visibility:false}
							ID{visibility:false}
							Added_Time{visibility:false}
						}
					}
					Add_Vehicle_Group
					{
						FieldPermissions
						{
							Added_User_IP_Address{visibility:false}
							Modified_User{visibility:false}
							Group{visibility:false,readonly:false}
							Modified_Time{visibility:false}
							Added_User{visibility:false}
							ID{visibility:false}
							Section{visibility:false,readonly:false}
							Modified_User_IP_Address{visibility:false}
							Added_Time{visibility:false}
						}
					}
					Add_Vehicle_Type
					{
						FieldPermissions
						{
							Added_User_IP_Address{visibility:false}
							Modified_User{visibility:false}
							Type{visibility:false,readonly:false}
							Modified_Time{visibility:false}
							Added_User{visibility:false}
							ID{visibility:false}
							Section{visibility:false,readonly:false}
							Modified_User_IP_Address{visibility:false}
							Added_Time{visibility:false}
						}
					}
					Add_User
					{
						FieldPermissions
						{
							Email{visibility:false,readonly:false}
							Address{visibility:false,readonly:false}
							Owned_Vehicles{visibility:false,readonly:false}
							Phone_Number{visibility:false,readonly:false}
							License_State_Province_Region{visibility:false,readonly:false}
							User_Type{visibility:false,readonly:false}
							Modified_User_IP_Address{visibility:false}
							License_Number{visibility:false,readonly:false}
							Added_User{visibility:false}
							ID{visibility:false}
							User_ID{visibility:false,readonly:false}
							General_Information{visibility:false,readonly:false}
							Name1{visibility:false,readonly:false}
							Added_Time{visibility:false}
							Modified_User{visibility:false}
							Modified_Time{visibility:false}
							Date_of_Birth{visibility:false,readonly:false}
							License_Class{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
							Contact_Information{visibility:false,readonly:false}
							Added_User_IP_Address{visibility:false}
							Driver_For{visibility:false,readonly:false}
							Profile_Image{visibility:false,readonly:false}
							User_Status{visibility:false,readonly:false}
							User_Information{visibility:false,readonly:false}
						}
					}
					Add_Vendor
					{
						FieldPermissions
						{
							Modified_User{visibility:false}
							Modified_Time{visibility:false}
							Email{visibility:false,readonly:false}
							Address{visibility:false,readonly:false}
							Vendor_Name{visibility:false,readonly:false}
							Website{visibility:false,readonly:false}
							Contact_Person{visibility:false,readonly:false}
							Phone_Number{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
							Modified_User_IP_Address{visibility:false}
							Added_User_IP_Address{visibility:false}
							Vendor_Type{visibility:false,readonly:false}
							Added_User{visibility:false}
							ID{visibility:false}
							Added_Time{visibility:false}
						}
					}
					Add_Service_Task
					{
						FieldPermissions
						{
							Added_User_IP_Address{visibility:false}
							Modified_User{visibility:false}
							Modified_Time{visibility:false}
							Description{visibility:false,readonly:false}
							Task_Title{visibility:false,readonly:false}
							Added_User{visibility:false}
							ID{visibility:false}
							Section{visibility:false,readonly:false}
							Added_Time{visibility:false}
							Modified_User_IP_Address{visibility:false}
						}
					}
					Set_Reminder
					{
						FieldPermissions
						{
							Modified_User{visibility:false}
							Modified_Time{visibility:false}
							Service_Task_s{visibility:false,readonly:false}
							Recipient_Emails{visibility:false,readonly:false}
							Renewal_Type{visibility:false,readonly:false}
							Reminder_For{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
							Modified_User_IP_Address{visibility:false}
							Added_User_IP_Address{visibility:false}
							Vehicle{visibility:false,readonly:false}
							Added_User{visibility:false}
							ID{visibility:false}
							Notes{visibility:false,readonly:false}
							Added_Time{visibility:false}
							Reminder_Date{visibility:false,readonly:false}
						}
					}
				}
			}
			"Customer"
			{
				name = "Customer"
				type = Customer_Portal
				permissions = {Chat:false, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This is the default profile having only add and view permission.\n"
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users.\n\n"
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 1
		icons = true
		icons style = outline
		font = "lato"
		color options
    	{
        color = "7"
    	}
    	icon
    	{
        	type = "1"
        	name = "zc-ab-non-profit6"
        	background color = "lightred"
        	foreground color = "#FFFFFF"
    	}
    	logo
    	{
        	preference = "none"
        	placement = "left"
    	}
	}


	phone
	{
		section  Dashboard
		{
			page Dashboard
			{
				hide = true
			}
			page Dashboard_Mobile
			{
			}
		}
		section  Vehicles
		{
			form  Add_Vehicle
			{
				layout = left
			}
			list Assignment_History
			{
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Driver
								Start_Date as "Start Date"
								End_Date as "End Date"
								Assignment_Status as "Assignment Status"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Vehicle
								Driver
								Start_Date as "Start Date"
								Starting_Odometer as "Starting Odometer"
								End_Date as "End Date"
								Ending_Odometer as "Ending Odometer"
								Assignment_Status as "Assignment Status"
								Comments
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			summary My_Vehicles
			{
				quickview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				display type = auto
			 				layout type = 4
		     				title = "Overview"
							fields
							(
								Vehicle_Type as "Vehicle Type"
								Vehicle_Name as "Vehicle Name"
								Registration_Number as "Registration Number"
								Driver
								Owner
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Vehicle_Type as "Vehicle Type"
								Vehicle_Name as "Vehicle Name"
								Make_Model as "Make/Model"
								Year_of_Manufacture as "Year of Manufacture"
								Color
								Vehicle_Image as "Vehicle Image"
								Vehicle_Group as "Vehicle Group"
								Registration_Number as "Registration Number"
								Engine_Number as "Engine Number"
								Chassis_Number as "Chassis Number"
								Fuel_Type as "Fuel Type"
								Fuel_Measurement_In as "Fuel Measurement In"
								Track_Usage_As as "Track Usage As"
								Secondary_Auxilary_Meter as "Secondary/Auxilary Meter"
								Secondary_Meter_Unit as "Secondary Meter Unit"
								Vehicle_Status as "Vehicle Status"
								Driver
								Owner
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Vehicles
			{
				quickview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				display type = auto
			 				layout type = 4
		     				title = "Overview"
							fields
							(
								Vehicle_Type as "Vehicle Type"
								Vehicle_Name as "Vehicle Name"
								Registration_Number as "Registration Number"
								Driver
								Owner
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Print   	   
										"Assign /Unassign"
										"Assign /Unassign" as "Archive"
										"Assign /Unassign" as "Restore"
										Duplicate   	   
										View Record   	   
    								)
									on left swipe
									(
										"Assign /Unassign"
										"Archive"
										"Restore"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Vehicle_Type as "Vehicle Type"
								Vehicle_Name as "Vehicle Name"
								Make_Model as "Make/Model"
								Year_of_Manufacture as "Year of Manufacture"
								Color
								Vehicle_Image as "Vehicle Image"
								Vehicle_Group as "Vehicle Group"
								Registration_Number as "Registration Number"
								Engine_Number as "Engine Number"
								Chassis_Number as "Chassis Number"
								Fuel_Type as "Fuel Type"
								Fuel_Measurement_In as "Fuel Measurement In"
								Track_Usage_As as "Track Usage As"
								Secondary_Auxilary_Meter as "Secondary/Auxilary Meter"
								Secondary_Meter_Unit as "Secondary Meter Unit"
								Vehicle_Status as "Vehicle Status"
								Driver
								Owner
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Assign /Unassign"
			 				"Assign /Unassign" as "Archive"
			 				"Assign /Unassign" as "Restore"
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Issues
		{
			form  Add_Issue
			{
				layout = left
			}
			list Issues
			{
				quickview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				display type = auto
			 				layout type = 4
		     				title = "Overview"
							fields
							(
								Issue_ID as "Issue ID"
								Vehicle
								Title
								Due_Date as "Due Date"
								Status
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Issue_ID as "Issue ID"
								Vehicle
								Title
								Description
								File_upload as "File upload"
								Priority
								Due_Date as "Due Date"
								Assignee
								Status
								Service_ID as "Service Entry"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Service_Entry
		{
			displayname= "Service Entry"
			form  Service_Entry
			{
				layout = left
			}
			list Service_Entries
			{
				quickview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				display type = auto
			 				layout type = 4
		     				title = "Overview"
							fields
							(
								Service_ID as "Service ID"
								Vehicle
								Serviced_On as "Serviced On"
								Odometer
								Total
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Service_ID as "Service ID"
								Vehicle
								Serviced_On as "Serviced On"
								Odometer
								Completed_Services as "Completed Services"
								Resolved_Issues as "Resolved Issues"
								Vendor
								Comments
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Invoice Details"
							fields
							(
								Labor
								Parts
								Tax
								Total
								Invoice_Number as "Invoice Number"
								Invoice
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Fuel_Entry
		{
			displayname= "Fuel Entry"
			form  Fuel_Entry
			{
				layout = left
			}
			list Fuel_Entries
			{
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Vehicle
								Date_field as "Date"
								Odometer
								Price_Unit as "Price/Unit"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Vehicle
								Date_field as "Date"
								Odometer
								Partial_Fuel_Up as "Partial Fuel Up"
								Price_Unit as "Price/Unit"
								Vendor
								Invoice_Number as "Invoice Number"
								Invoice
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Reminders
		{
			form  Set_Reminder
			{
				layout = left
			}
			list Service_Reminders
			{
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Vehicle
								Reminder_Date as "Reminder Date"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Vehicle
								Service_Task_s as "Service Task(s)"
								Notes
								Recipient_Emails as "Recipient Emails"
								Reminder_Date as "Reminder Date"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Renewal_Reminders
			{
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Vehicle
								Reminder_Date as "Reminder Date"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Delete   	   
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Vehicle
								Renewal_Type as "Renewal Type"
								Notes
								Recipient_Emails as "Recipient Emails"
								Reminder_Date as "Reminder Date"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Contacts
		{
			custom Users
			{
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				display type = auto
			 				layout type = 20
		     				title = "Overview"
							fields
							(
								Profile_Image as "Profile Image"
								User_ID as "User ID"
								Name1 as "Name"
								Email
								Phone_Number as "Phone Number"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										"Archive"
										"Restore"
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on left swipe
									(
										"Archive"
										"Restore"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								User_ID as "User ID"
								Name1 as "Name"
								Date_of_Birth as "Date of Birth"
								Profile_Image as "Profile Image"
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Contact Information"
							fields
							(
								Email
								Phone_Number as "Phone Number"
								Address
							)
						)
						datablock3
						(
			 				layout type = -2
		     				title = "User Information"
							fields
							(
								User_Type as "User Type"
								User_Status as "User Status"
								Owned_Vehicles as "Owned Vehicles"
								Driver_For as "Driver For"
								License_Number as "License Number"
								License_Class as "License Class"
								License_State_Province_Region as "License State/Province/Region"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Archive"
			 				"Restore"
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom Vendors
			{
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Contact_Person as "Name"
								Email
								Phone_Number as "Phone Number"
								Vendor_Type as "Vendor Type"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Vendor_Name as "Vendor Name"
								Vendor_Type as "Vendor Type"
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Contact Details"
							fields
							(
								Contact_Person as "Name"
								Phone_Number as "Phone Number"
								Email
								Website
								Address
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Records
		{
			list All_Issues
			{
				quickview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				display type = auto
			 				layout type = 4
		     				title = "Overview"
							fields
							(
								Issue_ID as "Issue ID"
								Vehicle
								Title
								Due_Date as "Due Date"
								Status
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Issue_ID as "Issue ID"
								Vehicle
								Title
								Description
								File_upload as "File upload"
								Priority
								Due_Date as "Due Date"
								Assignee
								Status
								Service_ID as "Service Entry"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list All_Service_Entries
			{
				quickview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				display type = auto
			 				layout type = 4
		     				title = "Overview"
							fields
							(
								Service_ID as "Service ID"
								Vehicle
								Serviced_On as "Serviced On"
								Odometer
								Total
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Service_ID as "Service ID"
								Vehicle
								Serviced_On as "Serviced On"
								Odometer
								Completed_Services as "Completed Services"
								Resolved_Issues as "Resolved Issues"
								Vendor
								Comments
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Invoice Details"
							fields
							(
								Labor
								Parts
								Tax
								Total
								Invoice_Number as "Invoice Number"
								Invoice
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list All_Fuel_Entries
			{
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Vehicle
								Date_field as "Date"
								Odometer
								Partial_Fuel_Up as "Partial Fuel Up"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Vehicle
								Date_field as "Date"
								Odometer
								Partial_Fuel_Up as "Partial Fuel Up"
								Price_Unit as "Price/Unit"
								Vendor
								Invoice_Number as "Invoice Number"
								Invoice
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list All_Reminders
			{
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Vehicle
								Reminder_Date as "Reminder Date"
								Reminder_For as "Reminder For"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Vehicle
								Reminder_For as "Reminder For"
								Service_Task_s as "Service Task(s)"
								Renewal_Type as "Renewal Type"
								Notes
								Recipient_Emails as "Recipient Emails"
								Reminder_Date as "Reminder Date"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Reports
		{
						pivotchart Service_Costs
			{
			}
			 
			pivotchart Fuel_Costs
			{
			}
		}
		section  Settings
		{
			list Vehicle_Types
			{
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Type
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Type
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Vehicle_Groups
			{
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Group
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Group
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Service_Tasks
			{
				quickview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				display type = auto
			 				layout type = 1
		     				title = "Overview"
							fields
							(
								Task_Title as "Task Title"
								Description
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Task_Title as "Task Title"
								Description
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Hidden
		{
			hide = true
			form  Add_Service_Task
			{
				layout = left
				hide = true
			}
			form  Add_User
			{
				layout = left
				hide = true
			}
			form  Add_Vendor
			{
				layout = left
				hide = true
			}
			form  Add_Vehicle_Group
			{
				layout = auto
				hide = true
			}
			form  Add_Vehicle_Type
			{
				layout = auto
				hide = true
			}
			form  Assign_Driver
			{
				layout = left
				hide = true
			}
			form  Unassign_Driver
			{
				layout = left
				hide = true
			}
		}
		customize
		{
        	layout = onecolumn
		 	icons style = outline
        	font = "lato"
            style = "3"
        	color options
        	{
             	color = lightred
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	tablet
	{
		section  Dashboard
		{
			page Dashboard
			{
				hide = true
			}
			page Dashboard_Mobile
			{
			}
		}
		section  Vehicles
		{
			form  Add_Vehicle
			{
				layout = left
			}
			list Assignment_History
			{
			}
			summary My_Vehicles
			{
			}
			list Vehicles
			{
			}
		}
		section  Issues
		{
			form  Add_Issue
			{
				layout = left
			}
			list Issues
			{
			}
		}
		section  Service_Entry
		{
			displayname= "Service Entry"
			form  Service_Entry
			{
				layout = left
			}
			list Service_Entries
			{
			}
		}
		section  Fuel_Entry
		{
			displayname= "Fuel Entry"
			form  Fuel_Entry
			{
				layout = left
			}
			list Fuel_Entries
			{
			}
		}
		section  Reminders
		{
			form  Set_Reminder
			{
				layout = left
			}
			list Service_Reminders
			{
			}
			list Renewal_Reminders
			{
			}
		}
		section  Contacts
		{
			custom Users
			{
			}
			custom Vendors
			{
			}
		}
		section  Records
		{
			list All_Issues
			{
			}
			list All_Service_Entries
			{
			}
			list All_Fuel_Entries
			{
			}
			list All_Reminders
			{
			}
		}
		section  Reports
		{
			 
			pivotchart Service_Costs
			{
			}
			 
			pivotchart Fuel_Costs
			{
			}
		}
		section  Settings
		{
			list Vehicle_Types
			{
			}
			list Vehicle_Groups
			{
			}
			list Service_Tasks
			{
			}
		}
		section  Hidden
		{
			hide = true
			form  Add_Service_Task
			{
				layout = left
				hide = true
			}
			form  Add_User
			{
				layout = left
				hide = true
			}
			form  Add_Vendor
			{
				layout = left
				hide = true
			}
			form  Add_Vehicle_Group
			{
				layout = auto
				hide = true
			}
			form  Add_Vehicle_Type
			{
				layout = auto
				hide = true
			}
			form  Assign_Driver
			{
				layout = left
				hide = true
			}
			form  Unassign_Driver
			{
				layout = left
				hide = true
			}
		}
		customize
		{
        	layout = onecolumn
		 	icons style = outline
        	font = "lato"
            style = "3"
        	color options
        	{
             	color = lightred
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	
	reports configuration
	{
	
		Version = 2000024261801
		Key     = "C8AYwQE8zPSdFP9ukxEb2jG2fPdEsJ9eeeqtgR4d7zZR6WABJOraDwsB7sP5VaHz4OOvPsBC0wdTuYd7C3UU3JJWRyGZXOEOQV7m"
	}
}
