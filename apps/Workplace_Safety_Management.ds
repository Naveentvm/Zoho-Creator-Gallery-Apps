/*
 * Author       : wapope7431_asuflex
 * Generated on : 10-May-2023 16:03:54
 * Version      : 1.0
 */
 application "Workplace Safety Management"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "IST"
 	time format = "24-hr"
 	section Company_Details
	{
		displayname= "Company Details"
		icon = "social-1-logo-creative-market"
		form Add_Company_Details
		{
			displayname = "Add Company Details"
			success message = "Company Detail Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Company_Name
			(
    			type = text
				displayname = "Company Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Company_Email
			(
    			type = email
				displayname = "Company Email"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
				type = number
				displayname = "Phone Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Mobile_Number
			(
    			type = phonenumber
				displayname = "Mobile Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		properties
		{
			total entries
			{
				allowed count = 1
				exceed message = "You've reached the maximum limit for entries."
			}
		}
		}
	}
	section Branches
	{
		icon = "objects-leaf-38"
		form Add_Branch
		{
			displayname = "Add Branch"
			success message = "Branch Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Branch_Info
			(
				type = section
				displayname = "Branch Info"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Company
			(
				type = picklist	
				values  = Add_Company_Details.ID
    			displayformat = [Company_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Branch_Name
			(
    			type = text
				displayname = "Branch Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Landline_Number
			(
				type = number
				displayname = "Landline Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Branch_Address
			(
    			type = address
				displayname = "Branch Address"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 2   
				width = medium
			)
			Admin_Info
			(
				type = section
				displayname = "Admin Info"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Email
			(
    			type = email
	 			row = 2
	 			column = 1   
				width = medium
			)
			Mobile_Number
			(
    			type = phonenumber
				displayname = "Mobile Number"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Buildings
			(
				type = grid
				values  = Add_Building.ID
    			bidirectional = Associated_Branch
	 			row = 3
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Dashboard
	{
		icon = "ui-1-dashboard-half"
				 page Maintenance_Dashboard 
	 	 { 
 	 	 displayname = "Maintenance Dashboard"

 	 	 icon = "ui-1-dashboard-half" 
	 	 Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"33%\"\n   \t>\n\t<panel elementName=\"Panel\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#4C7DE8'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'Pending_Tasks'\n\t\ttarget = 'new-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginRight = '7px' \n\n\tcolor = '#1F58B8'\n\tbgColor = '#E0EFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'shopping-newsletter'\n\tsize = '24px'\n\tcornerRadius = '26px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\tpadding = '5px'\n\n\t\thAlign = 'left'\n>\n\t<pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tcolor = '#E0EFFF'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Pending Tasks'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tmarginTop = '2px'\n\tcolor = '#FFFFFF'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'Status == &quot;Pending&quot;'\n\t  value = 'thisapp.New_Maintenance_Task.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"34%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#F37D16'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'Waiting_For_Approval'\n\t\ttarget = 'new-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginRight = '7px' \n\n\tcolor = '#1F58B8'\n\tbgColor = '#E0EFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'business-cheque'\n\tsize = '24px'\n\tcornerRadius = '26px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\tpadding = '5px'\n\n\t\thAlign = 'left'\n>\n\t<pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tcolor = '#E0EFFF'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Approval Tasks'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tmarginTop = '2px'\n\tcolor = '#FFFFFF'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'Status == &quot;Work Completed&quot;'\n\t  value = 'thisapp.New_Maintenance_Task.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"33%\"\n   \t>\n\t<panel elementName=\"Panel 2\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#F3482C'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'Waiting_For_Audit'\n\t\ttarget = 'new-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginRight = '7px' \n\n\tcolor = '#1F58B8'\n\tbgColor = '#E0EFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'shopping-award'\n\tsize = '24px'\n\tcornerRadius = '26px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\tpadding = '5px'\n\n\t\thAlign = 'left'\n>\n\t<pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tcolor = '#E0EFFF'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Audit Tasks'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tmarginTop = '2px'\n\tcolor = '#FFFFFF'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'Status == &quot;Operation Team Approved&quot; &amp;&amp; Audit_Require == true'\n\t  value = 'thisapp.New_Maintenance_Task.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"67%\"\n   \t>\n\t<chart \n\telementName=\"Chart\"\n\n\t\n\ttitle = 'In Progress Tasks'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Stacked Column'\n\txtitle = 'Building'\n\tytitle = 'Task Count'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'New_Maintenance_Task'\n\txfield = 'Building.Building_Name'\n\tyfields = 'count:ID'\n\tgroupBy = 'Building.Building_Name'\n\t\tDelugeCriteria = 'Status != &quot;Closed&quot;'\n\/>\n\n<\/column><column\n   \t\t width=\"33%\"\n   \t>\n\t<chart \n\telementName=\"Chart 1\"\n\n\t\n\ttitle = 'Tasks By Priority'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Donut'\n\txtitle = 'Priority'\n\tytitle = 'Task Count'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'New_Maintenance_Task'\n\txfield = 'Priority'\n\tyfields = 'count:ID'\n\/>\n\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<chart \n\telementName=\"Chart 2\"\n\n\t\n\ttitle = 'Audit Tasks'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Stacked Column'\n\txtitle = 'Building'\n\tytitle = 'Task Count'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'New_Maintenance_Task'\n\txfield = 'Building.Building_Name'\n\tyfields = 'count:ID'\n\tgroupBy = 'Building.Building_Name'\n\t\tDelugeCriteria = 'Audit_Require == true &amp;&amp; Status != &quot;Pending&quot; &amp;&amp; Status != &quot;Staff Assigned&quot; &amp;&amp; Status != &quot;Work Completed&quot;'\n\/>\n\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page HR_Dashboard 
	 	 { 
 	 	 displayname = "HR Dashboard"

 	 	 icon = "ui-1-dashboard-half" 
	 	 Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"33%\"\n   \t>\n\t<panel elementName=\"Panel\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#4C7DE8'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'HR_Approval'\n\t\ttarget = 'new-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginRight = '7px' \n\n\tcolor = '#1F58B8'\n\tbgColor = '#E0EFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'shopping-newsletter'\n\tsize = '24px'\n\tcornerRadius = '26px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\tpadding = '5px'\n\n\t\thAlign = 'left'\n>\n\t<pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tcolor = '#E0EFFF'\n\tsize = '16px'\n\ttype = 'Text'\n\tbgColor = 'transparent'\n\n\n\n\t  \n\t  value = 'Pending Approvals'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tmarginTop = '2px'\n\tcolor = '#FFFFFF'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Employee_Status == &quot;Pending&quot;'\n\t  value = 'thisapp.Employee_Declaration_Form.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"34%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#F37D16'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'Doctor_Approval'\n\t\ttarget = 'new-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginRight = '7px' \n\n\tcolor = '#1F58B8'\n\tbgColor = '#E0EFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'food-temperature'\n\tsize = '24px'\n\tcornerRadius = '26px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\tpadding = '5px'\n\n\t\thAlign = 'left'\n>\n\t<pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tcolor = '#E0EFFF'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Referred To Doctor'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tmarginTop = '2px'\n\tcolor = '#FFFFFF'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Employee_Status == &quot;Refer to Doctor&quot;'\n\t  value = 'thisapp.Employee_Declaration_Form.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"33%\"\n   \t>\n\t<panel elementName=\"Panel 2\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#09B24D'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginRight = '7px' \n\n\tcolor = '#1F58B8'\n\tbgColor = '#E0EFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'users-network'\n\tsize = '24px'\n\tcornerRadius = '26px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\tpadding = '5px'\n\n\t\thAlign = 'left'\n>\n\t<pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tcolor = '#E0EFFF'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Entered In Office'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tmarginTop = '2px'\n\tcolor = '#FFFFFF'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Employee_Status == &quot;Allowed to Enter Office&quot;'\n\t  value = 'thisapp.Employee_Declaration_Form.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"67%\"\n   \t>\n\t<chart \n\telementName=\"Chart\"\n\n\t\n\ttitle = 'Employees Status'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Stacked Column'\n\txtitle = 'Status'\n\tytitle = 'Employee Count'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Employee_Declaration_Form'\n\txfield = 'Employee_Status'\n\tyfields = 'count:ID'\n\tgroupBy = 'Employee_Status'\n\/>\n\n<\/column><column\n   \t\t width=\"33%\"\n   \t>\n\t<chart \n\telementName=\"Chart 1\"\n\n\t\n\ttitle = 'Office Vs WFH'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Donut'\n\txtitle = 'Status'\n\tytitle = 'Employee Count'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Employee_Declaration_Form'\n\txfield = 'Employee_Status'\n\tyfields = 'count:ID'\n\t\tDelugeCriteria = 'Employee_Status == &quot;Continue WFH&quot; || Employee_Status == &quot;Allowed to Enter Office&quot;'\n\/>\n\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<chart \n\telementName=\"Chart 2\"\n\n\t\n\ttitle = 'Entered Employees By Building'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Stacked Column'\n\txtitle = 'Building'\n\tytitle = 'Employee Count'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Add_Employee'\n\txfield = 'Work_Location.Building_Name'\n\tyfields = 'count:ID'\n\tgroupBy = 'Work_Location.Building_Name'\n\t\tDelugeCriteria = 'Entered_Office == &quot;Yes&quot;'\n\/>\n\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Maintenance_Tasks
	{
		displayname= "Maintenance Tasks"
		icon = "shopping-list"
		form New_Maintenance_Task
		{
			displayname = "New Maintenance Task"
			success message = "Job Order Created Successfully"
			field alignment = left
			Task_Info
			(
				type = section
				displayname = "Task Info"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			Feedback_No
			(
				type = picklist	
				displayname = "Feedback No"
				values  = Feedback_Form.ID
    			displayformat = [Feedback_No]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Raised_By
			(
				type = picklist	
				displayname = "Raised By"
				values  = Add_Staff[Role == "Operations Head"].ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name + " " + Staff_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Job_ID
			(
    			type = text
				displayname = "Task ID"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Job_Title
			(
    			type = text
				displayname = "Task Title"
    			description
    			[
    				type = help_text
    			 	message = "Eg : Fill Sanitizer, Clean Floor."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Location
			(
				type = picklist	
				values  = Add_Spot_Of_Building.ID
    			displayformat = [Location]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Building
			(
				type = picklist	
				values  = Add_Building.ID
    			displayformat = [Building_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Priority
			(
				type = picklist
				values = {"Low","Medium","Critical"}
				initial value = "Low"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Due_Date_Time
			(
    			type = datetime
				displayname = "Due Date/Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Audit_Require
			(
    			type = checkbox
				displayname = "Audit Required"
				initial value = false
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Status
			(
				type = picklist
				values = {"Pending","Staff Assigned","Work Completed","Rework By Operation","Operation Team Approved","Rework By Audit","Closed"}
				initial value = "Pending"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assign_Staff
			(
				type = section
				displayname = "Assign Staff"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Maintenance_Staff
			(
				type = picklist	
				displayname = "Maintenance Staff"
				values  = Add_Staff[Role == "Operations Staff" && Branch.ID == input.Location.Branch].ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name + " " + Staff_ID]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Audit_Staff
			(
				type = picklist	
				displayname = "Audit Staff"
				values  = Add_Staff[Branch.ID == input.Location.Branch && Role == "Safety Audit"].ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name + " " + Staff_ID]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "sport-cardio"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Create"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Pending_Tasks
		{
			displayName = "Pending Tasks"
			show all rows from New_Maintenance_Task  [Status == "Pending" && Raised_By.Email == zoho.loginuserid]  
			(
				Job_ID as "Task ID"
				Raised_By as "Raised By"
				Job_Title as "Task Title"
				Description
				Priority
				Due_Date_Time as "Due Date/Time"
				Audit_Require as "Audit Required"
				Status
				custom action "Assign to Staff"
				(
	  			workflow = Assign_to_Staff
				show action in edit record menu = true
				column header = "Assign to Staff"
				)
			)
			options
			(
				icon = "design-todo"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Job_ID as "Task ID"
							Raised_By as "Raised By"
							Job_Title as "Task Title"
							Description
							Priority
							Due_Date_Time as "Due Date/Time"
				"Assign to Staff"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Job_ID as "Task ID"
							Raised_By as "Raised By"
							Job_Title as "Task Title"
							Description
							Priority
							Due_Date_Time as "Due Date/Time"
							Audit_Require as "Audit Required"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Tasks
		{
			displayName = "My Tasks"
			show all rows from New_Maintenance_Task  [Status == "Staff Assigned" || Status == "Rework By Audit" || Status == "Rework By Operation" && Maintenance_Staff.Email == zoho.loginuserid]  
			(
				Job_ID as "Task ID"
				Raised_By as "Raised By"
				Job_Title as "Task Title"
				Description
				Priority
				Due_Date_Time as "Due Date/Time"
				Audit_Require as "Audit Required"
				Maintenance_Staff as "Maintenance Staff"
				Status
				custom action "Complete Task"
				(
	  			workflow = Complete_Task
				show action in edit record menu = true
				column header = "Complete Task"
				)
			)
			group by
			(
				Status ascending
			)
			options
			(
				icon = "health-heartbeat-16"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Job_ID as "Task ID"
							Raised_By as "Raised By"
							Job_Title as "Task Title"
							Description
							Priority
							Due_Date_Time as "Due Date/Time"
				"Complete Task"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Job_ID as "Task ID"
							Raised_By as "Raised By"
							Job_Title as "Task Title"
							Description
							Priority
							Due_Date_Time as "Due Date/Time"
							Audit_Require as "Audit Required"
							Maintenance_Staff as "Maintenance Staff"
							Status
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Task Complete Info"
		     			related field = Task_Completion_Form.Task
						fields
						(
							Date_Time as "Date-Time"
							Staff
							Comments
							Image
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Task Re-work Info"
		     			related field = Task_Re_work_Form.Task
						fields
						(
							Date_Time as "Date-Time"
							Staff
							Team
							Reason_For_Re_work as "Reason For Re-work"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Waiting_For_Approval
		{
			displayName = "Waiting For Approval"
			show all rows from New_Maintenance_Task  [Status == "Work Completed" && Raised_By.Email == zoho.loginuserid]  
			(
				Job_ID as "Task ID"
				Raised_By as "Raised By"
				Job_Title as "Task Title"
				Description
				Priority
				Due_Date_Time as "Due Date/Time"
				Audit_Require as "Audit Required"
				Maintenance_Staff as "Maintenance Staff"
				Status
				custom action "Approve"
				(
	  			workflow = Operation_Approve1
				show action in edit record menu = true
				column header = "Approve"
				)
				custom action "Rework"
				(
	  			workflow = Operation_Rework
				show action in edit record menu = true
				column header = "Rework"
				)
			)
			options
			(
				icon = "design-todo"
	 		)
			conditional formatting
			(
				"New Formatting"
				{
				condition = (Priority == "Low")
				fields = [Priority]
				format = "color:#ffffff;background-color:#1bbc9b;"
				}
				"New Formatting"
				{
				condition = (Priority == "Medium")
				fields = [Priority]
				format = "color:#ffffff;background-color:#3598db;"
				}
				"New Formatting"
				{
				condition = (Priority == "Critical")
				fields = [Priority]
				format = "color:#ffffff;background-color:#e84c3d;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Job_ID as "Task ID"
							Priority
							Raised_By as "Raised By"
							Job_Title as "Task Title"
							Due_Date_Time as "Due Date/Time"
				"Approve"
				"Rework"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Job_ID as "Task ID"
							Raised_By as "Raised By"
							Job_Title as "Task Title"
							Description
							Priority
							Due_Date_Time as "Due Date/Time"
							Audit_Require as "Audit Required"
							Maintenance_Staff as "Maintenance Staff"
							Status
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Task Complete Info"
		     			related field = Task_Completion_Form.Task
						fields
						(
							Date_Time as "Date-Time"
							Staff
							Comments
							Image
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Task Re-work Info"
		     			related field = Task_Re_work_Form.Task
						fields
						(
							Date_Time as "Date-Time"
							Staff
							Team
							Reason_For_Re_work as "Reason For Re-work"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Waiting_For_Audit
		{
			displayName = "Waiting For Audit"
			show all rows from New_Maintenance_Task  [Status == "Operation Team Approved" && Audit_Require == true && Audit_Staff.Email == zoho.loginuserid]  
			(
				Job_ID as "Task ID"
				Raised_By as "Raised By"
				Job_Title as "Task Title"
				Description
				Priority
				Due_Date_Time as "Due Date/Time"
				Audit_Require as "Audit Required"
				Maintenance_Staff as "Maintenance Staff"
				Status
				custom action "Approve"
				(
	  			workflow = Audit_Approve
				show action in edit record menu = true
				column header = "Approve"
				)
				custom action "Rework"
				(
	  			workflow = Rework
				show action in edit record menu = true
				column header = "Rework"
				)
			)
			options
			(
				icon = "users-2-a-time"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Job_ID as "Task ID"
							Raised_By as "Raised By"
							Job_Title as "Task Title"
							Description
							Priority
							Due_Date_Time as "Due Date/Time"
				"Approve"
				"Rework"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Job_ID as "Task ID"
							Raised_By as "Raised By"
							Job_Title as "Task Title"
							Description
							Priority
							Due_Date_Time as "Due Date/Time"
							Audit_Require as "Audit Required"
							Maintenance_Staff as "Maintenance Staff"
							Status
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Task Complete Info"
		     			related field = Task_Completion_Form.Task
						fields
						(
							Date_Time as "Date-Time"
							Staff
							Comments
							Image
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Task Re-work Info"
		     			related field = Task_Re_work_Form.Task
						fields
						(
							Date_Time as "Date-Time"
							Staff
							Team
							Reason_For_Re_work as "Reason For Re-work"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list All_Maintenance_Tasks
		{
			displayName = "All Maintenance Tasks"
			show all rows from New_Maintenance_Task    
			(
				Job_ID as "Task ID"
				Raised_By as "Raised By"
				Job_Title as "Task Title"
				Description
				Priority
				Due_Date_Time as "Due Date/Time"
				Status
				Audit_Require as "Audit Required"
				Maintenance_Staff as "Maintenance Staff"
				Location
				Audit_Staff as "Audit Staff"
				Building
				Feedback_No as "Feedback No"
			)
			group by
			(
				Status ascending
			)
			sort by
			(
				Status ascending
			)
			options
			(
				icon = "sport-cardio"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Job_ID as "Task ID"
							Raised_By as "Raised By"
							Job_Title as "Task Title"
							Description
							Priority
							Due_Date_Time as "Due Date/Time"
							Status
							Maintenance_Staff as "Maintenance Staff"
							Building
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Job_ID as "Task ID"
							Raised_By as "Raised By"
							Job_Title as "Task Title"
							Description
							Priority
							Due_Date_Time as "Due Date/Time"
							Status
							Audit_Require as "Audit Required"
							Maintenance_Staff as "Maintenance Staff"
							Location
							Audit_Staff as "Audit Staff"
							Building
							Feedback_No as "Feedback No"
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Task Complete Info"
		     			related field = Task_Completion_Form.Task
						fields
						(
							Date_Time as "Date-Time"
							Staff
							Comments
							Image
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Task Re-work Info"
		     			related field = Task_Re_work_Form.Task
						fields
						(
							Date_Time as "Date-Time"
							Staff
							Team
							Reason_For_Re_work as "Reason For Re-work"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Employee_Declaration
	{
		displayname= "Employee Declaration"
		icon = "business-business-contact-89"
		form Employee_Declaration_Form
		{
			displayname = "Employee Declaration Form"
			success message = "Data Added Successfully!"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Employee
			(
				type = picklist	
				values  = Add_Employee.ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_field
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Have_you_travelled_outside_of_the_country_within_the_last_90_days
			(
				type = radiobuttons
				displayname = "Have you travelled outside of the country within the last 90 days? "
				values = {"Yes","No"}
				layout = 2
	 			row = 1
	 			column = 1   
				width = medium
			)
			International_Travel_Info
			(
				type = grid
				displayname = "International Travel Info"
				must have Type
				(
					type = picklist
					values = {"Business","Personal"}
					initial value = "Business"
					width = medium
				)
				must have Travel_Date
				(
    				type = date
					displayname = "Travel Date"
					alloweddays = 0,1,2,3,4,5,6
					width = medium
				)
				must have Return_Date
				(
    				type = date
					displayname = "Return Date"
					alloweddays = 0,1,2,3,4,5,6
					width = medium
				)
				must have Orgin_Destination_Country
				(
					type = picklist
					displayname = "Orgin/Destination Country"
					values = {"Afghanistan","Albania","Algeria","Andorra","Angola","Antigua and Barbuda","Argentina","Armenia","Australia","Austria","Azerbaijan","The Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Brazil","Brunei","Bulgaria","Burkina Faso","Burundi","Cabo Verde","Cambodia","Cameroon","Canada","Central African Republic","Chad","Chile","China","Colombia","Comoros","Congo, Democratic Republic of the","Congo, Republic of the","Costa Rica","Côte d’Ivoire","Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","East Timor (Timor-Leste)","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Eswatini","Ethiopia","Fiji","Finland","France","Gabon","The Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Korea, North","Korea, South","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia, Federated States of","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar (Burma)","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","North Macedonia","Norway","Oman","Pakistan","Palau","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russia","Rwanda","Saint Kitts and Nevis","Saint Lucia","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","Spain","Sri Lanka","Sudan","Sudan, South","Suriname","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","Uruguay","Uzbekistan","Vanuatu","Vatican City","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"}
					width = medium
				)
				Transit_Countries
				(
					type = list	
					displayname = "Transit Countries"
					values = {"Afghanistan","Albania","Algeria","Andorra","Angola","Antigua and Barbuda","Argentina","Armenia","Australia","Austria","Azerbaijan","The Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Brazil","Brunei","Bulgaria","Burkina Faso","Burundi","Cabo Verde","Cambodia","Cameroon","Canada","Central African Republic","Chad","Chile","China","Colombia","Comoros","Congo, Democratic Republic of the","Congo, Republic of the","Costa Rica","Côte d’Ivoire","Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","East Timor (Timor-Leste)","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Eswatini","Ethiopia","Fiji","Finland","France","Gabon","The Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Korea, North","Korea, South","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia, Federated States of","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar (Burma)","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","North Macedonia","Norway","Oman","Pakistan","Palau","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russia","Rwanda","Saint Kitts and Nevis","Saint Lucia","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","Spain","Sri Lanka","Sudan","Sudan, South","Suriname","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","Uruguay","Uzbekistan","Vanuatu","Vatican City","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"}
					height = 60px
					width = medium
				)
				Purpose
				(
    				type = textarea
					height = 100px
					width = medium
				)
	 			row = 2
	 			column = 1   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 3
	 			column = 0   
				width = medium
			)
			must have Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill
			(
				type = radiobuttons
				displayname = "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
				values = {"Yes","No"}
				layout = 2
	 			row = 3
	 			column = 1   
				width = medium
			)
			must have Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19
			(
				type = radiobuttons
				displayname = "Have you been in close contact with a person who has been diagnosed with COVID-19? "
				values = {"Yes","No"}
				layout = 2
	 			row = 3
	 			column = 1   
				width = medium
			)
			must have Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath
			(
				type = radiobuttons
				displayname = "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
				values = {"Yes","No"}
				layout = 2
	 			row = 3
	 			column = 1   
				width = medium
			)
			must have Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed
			(
				type = radiobuttons
				displayname = "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
				values = {"Yes","No"}
				layout = 2
	 			row = 3
	 			column = 1   
				width = medium
			)
			Temperature
			(
				type = decimal
				displayname = "Temperature Level"
    			description
    			[
    				type = help_text
    			 	message = "Enter Value in Fahrenheit."
    			]
	 			row = 3
	 			column = 1   
				width = medium
			)
			Employee_Status
			(
				type = picklist
				displayname = "Employee Status"
				values = {"Pending","Continue WFH","Allowed to Work in Office","Refer to Doctor","Allowed to Enter Office"}
				initial value = "Pending"
				others option = true
	 			row = 3
	 			column = 1   
				width = medium
			)
			Declaration
			(
				type = section
				visibility = true
	 			row = 4
	 			column = 0   
				width = medium
			)
			must have Decision_box
			(
    			type = checkbox
				displayname = "I hereby declare that the above information provided by me is true at the point of submission. I will resubmit the form should there be any changes to the travel declaration."
				initial value = false
	 			row = 4
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "business-business-contact-89"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		properties
		{
			entries per user
			{
				allowed count = 1
				exceed message = "You may only fill this form out one time "
			}
		}
		}
		list HR_Approval
		{
			displayName = "HR Approval"
			show all rows from Employee_Declaration_Form  [Employee_Status == "Pending"]  
			(
				Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
				Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
				Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
				Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
				Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
				custom action "Allow Work in Office"
				(
	  			workflow = Allow_Work_in_Office
				show action in edit record menu = true
				column header = "Allow Work in Office"
				)
				custom action "Continue WFH"
				(
	  			workflow = Continue_WFH
				show action in edit record menu = true
				column header = "Continue WFH"
				)
				Date_field as "Date"
				Employee
				Employee.Branch
				Employee.Team
			)
			options
			(
				icon = "health-notebook"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Employee
							Employee.Branch as "Branch"
							Date_field as "Date"
							Employee.Team as "Team"
				"Allow Work in Office"
				"Continue WFH"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
							Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
							Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
							Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
							Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Travel Details"
		     			related field = International_Travel_Info
						fields
						(
							Type
							Travel_Date as "Travel Date"
							Return_Date as "Return Date"
							Orgin_Destination_Country as "Orgin/Destination Country"
							Transit_Countries as "Transit Countries"
							Purpose
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Temperature_Check
		{
			displayName = "Temperature Check"
			show all rows from Employee_Declaration_Form  [Employee_Status == "Allowed to Work in Office"]  
			(
				Date_field as "Date"
				Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
				Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
				Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
				Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
				Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
				Employee_Status as "Employee Status"
				Employee
				Employee.Branch
				Employee.Team
				custom action "Add Temperature Level"
				(
	  			workflow = Add_Temperature
				show action in edit record menu = true
				column header = "Add Temperature Level"
				)
			)
			options
			(
				icon = "weather-sun-cloud"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Employee
							Employee.Branch as "Branch"
							Employee.Team as "Team"
							Date_field as "Date"
				"Add Temperature Level"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Date_field as "Date"
							Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
							Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
							Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
							Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
							Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
							Employee_Status as "Employee Status"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Doctor_Approval
		{
			displayName = "Doctor Approval"
			show all rows from Employee_Declaration_Form  [Employee_Status == "Refer to Doctor"]  
			(
				Employee
				Date_field as "Date"
				Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
				Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
				Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
				Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
				Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
				Temperature as "Temperature Level"
				Employee_Status as "Employee Status"
				Employee.Branch
				Employee.Team
				custom action "Allow To Enter Office"
				(
	  			workflow = Allow_To_Enter_Office1
				show action in edit record menu = true
				column header = "Allow To Enter Office"
				)
				custom action "Continue WFH"
				(
	  			workflow = Continue_WFH1
				show action in edit record menu = true
				column header = "Continue WFH"
				)
			)
			options
			(
				icon = "health-bag-49"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Employee
							Employee.Branch as "Branch"
							Employee.Team as "Team"
							Date_field as "Date"
				"Allow To Enter Office"
				"Continue WFH"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Employee
							Date_field as "Date"
							Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
							Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
							Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
							Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
							Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
							Temperature as "Temperature Level"
							Employee_Status as "Employee Status"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Employee_Declarations
		{
			displayName = "All Employee Declarations"
			show all rows from Employee_Declaration_Form    
			(
				Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
				Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
				Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
				Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
				Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
				Employee_Status as "Employee Status"
				Date_field as "Date"
				Employee
				Temperature as "Temperature Level"
				Employee.Branch
				Employee.Team
			)
			group by
			(
				Employee_Status ascending
			)
			sort by
			(
				Employee_Status ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Employee_Status as "Employee Status"
							Employee
							Employee.Branch as "Branch"
							Employee.Team as "Team"
							Date_field as "Date"
							Temperature as "Temperature Level"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
							Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
							Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
							Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
							Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
							Employee_Status as "Employee Status"
							Date_field as "Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Declarations
		{
			displayName = "My Declarations"
			show all rows from Employee_Declaration_Form  [Employee.Email == zoho.loginuserid]  
			(
				Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
				Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
				Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
				Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
				Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
				Employee_Status as "Employee Status"
				Date_field as "Date"
				Employee
				Temperature as "Temperature Level"
				Employee.Branch
				Employee.Team
			)
			sort by
			(
				Employee_Status ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Employee_Status as "Employee Status"
							Employee
							Employee.Branch as "Branch"
							Employee.Team as "Team"
							Date_field as "Date"
							Temperature as "Temperature Level"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
							Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
							Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
							Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
							Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
							Employee_Status as "Employee Status"
							Date_field as "Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Buildings
	{
		icon = "business-building"
		form Add_Building
		{
			displayname = "Add Building"
			success message = "Building Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Associated_Branch
			(
				type = picklist	
				displayname = "Associated Branch"
				values  = Add_Branch.ID
    			bidirectional = Buildings
    			displayformat = [Branch_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Building_Name
			(
    			type = text
				displayname = "Building Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Select_Floors
			(
				type = list	
				displayname = "Select Floors"
				values  = Add_Floor.ID
    			bidirectional = Buildings
    			displayformat = [Floor_Name]
				allow new entries = true
				[
					displayname = "Add New Floor"
				]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Gateways
	{
		icon = "tech-wifi-router"
		form Add_Spot_Of_Building
		{
			displayname = "Add Spot Of Building"
			success message = "Gateway Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Branch
			(
				type = picklist	
				values  = Add_Branch.ID
    			displayformat = [Branch_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Building
			(
				type = picklist	
				values  = Add_Building.ID
    			displayformat = [Building_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Floor
			(
				type = picklist	
				values  = Add_Floor[Buildings.ID == input.Building].ID
    			displayformat = [Floor_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Spot_Name
			(
    			type = text
				displayname = "Spot Name"
    			description
    			[
    				type = help_text
    			 	message = "Eg : Entrance, Restroom."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Location
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			QR_Code_Output
			(
    			type = plaintext
				value = "<div><br /></div>"
	 			row = 1
	 			column = 1   
				width = medium
			)
			QR_Code
			(
    			type = image
				displayname = "QR Code"
				source  = public_url
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assets_With_Quantity
			(
				type = grid
				displayname = "Assets With Quantity"
				values  = Add_Asset_To_Spot.ID
    			bidirectional = Spot
	 			row = 2
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-2-3d-29"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Facilities
	{
		icon = "travel-hotel-symbol"
		form Facility
		{
			success message = "Facility Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Facility_Name
			(
    			type = text
				displayname = "Facility Name"
    			description
    			[
    				type = help_text
    			 	message = "E.g: Lighting,Environment,Water,Energy and others"
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "social-1-logo-trello"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Assets
	{
		icon = "social-1-logo-envato"
		form Add_Asset
		{
			displayname = "Add Asset"
			success message = "Asset Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Asset_Name
			(
    			type = text
				displayname = "Asset Name"
    			description
    			[
    				type = help_text
    			 	message = "Eg : Hand Sanitizer, Mask."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have For_Facility
			(
				type = picklist	
				displayname = "For Facility"
				values  = Facility.ID
    			displayformat = [Facility_Name]
				allow new entries = true
				[
					displayname = "Add New Facility"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-mobile-card"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Update_the_Current_Quantity_Of_Assets
	{
		displayname= "Update the Current Quantity Of Assets"
		icon = "social-1-logo-envato"
		form Add_Asset_To_Spot
		{
			displayname = "Add Asset To Spot"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Spot
			(
				type = picklist	
				values  = Add_Spot_Of_Building.ID
    			bidirectional = Assets_With_Quantity
    			displayformat = [Spot_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Asset
			(
				type = picklist	
				values  = Add_Asset.ID
    			displayformat = [Asset_Name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Quantity
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "social-1-logo-envato"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Current_Asset_Quantity_Of_The_Gateway
		{
			displayName = "Current Asset Quantity Of The Gateway"
   			hide = true
			show all rows from Add_Asset_To_Spot    
			(
				Spot as "Gateway"
				Asset
				Quantity
			)
			options
			(
				icon = "business-laptop-71"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Spot as "Gateway"
							Asset
							Quantity
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Spot as "Gateway"
							Asset
							Quantity
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Employee_Status
	{
		displayname= "Employee Status"
		icon = "ui-1-notification-70"
		list Pending_Notifications
		{
			displayName = "Pending Notifications"
			show all rows from Add_Employee  [Declaration_Notification_Status == "Not Sent"]  
			(
				Employee_ID as "Employee ID"
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Email
				Phone_Number as "Phone"
				Branch
				Work_Location as "Work Location"
				Team
				Entered_Office as "Entered Office"
				Declaration_Notification_Status as "Declaration Notification Status"
			)
			group by
			(
				Branch ascending
			)
			options
			(
				icon = "ui-2-hourglass"
	 		)
			custom actions
			(
				"Send Declaration Notification"
				(
	  			workflow = Send_Declaration_Notifica
				show action in view header = true
				execute action for collection of records
				condition = (Declaration_Notification_Status == "Not Sent")
				)
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Employee_ID as "Employee ID"
							Name
							Email
							Phone_Number as "Phone"
							Branch
							Work_Location as "Work Location"
							Team
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
			 			"Send Declaration Notification"
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Employee_ID as "Employee ID"
							Name
							Email
							Phone_Number as "Phone"
							Branch
							Work_Location as "Work Location"
							Team
							Entered_Office as "Entered Office"
							Declaration_Notification_Status as "Declaration Notification Status"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Notified_Employees
		{
			displayName = "Notified Employees"
			show all rows from Add_Employee  [Declaration_Notification_Status == "Sent"]  
			(
				Employee_ID as "Employee ID"
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Email
				Phone_Number as "Phone"
				Branch
				Work_Location as "Work Location"
				Team
				Entered_Office as "Entered Office"
				Declaration_Notification_Status as "Declaration Notification Status"
			)
			group by
			(
				Branch ascending
			)
			options
			(
				icon = "users-single-04"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Employee_ID as "Employee ID"
							Name
							Email
							Phone_Number as "Phone"
							Branch
							Work_Location as "Work Location"
							Team
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Employee_ID as "Employee ID"
							Name
							Email
							Phone_Number as "Phone"
							Branch
							Work_Location as "Work Location"
							Team
							Entered_Office as "Entered Office"
							Declaration_Notification_Status as "Declaration Notification Status"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Employees_In_WFH
		{
			displayName = "Employees In WFH"
			show all rows from Employee_Declaration_Form  [Employee_Status == "Continue WFH"]  
			(
				Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
				Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
				Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
				Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
				Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
				Employee_Status as "Employee Status"
				Date_field as "Date"
				Employee
				Temperature as "Temperature Level"
				Employee.Branch
				Employee.Team
			)
			group by
			(
				Employee.Branch ascending
			)
			sort by
			(
				Employee_Status ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Employee_Status as "Employee Status"
							Employee
							Employee.Branch as "Branch"
							Employee.Team as "Team"
							Date_field as "Date"
							Temperature as "Temperature Level"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
							Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
							Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
							Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
							Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
							Employee_Status as "Employee Status"
							Date_field as "Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Employees_Entered_Office
		{
			displayName = "Employees Entered Office"
			show all rows from Employee_Declaration_Form  [Employee_Status == "Allowed to Enter Office"]  
			(
				Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
				Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
				Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
				Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
				Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
				Employee_Status as "Employee Status"
				Date_field as "Date"
				Employee
				Temperature as "Temperature Level"
				Employee.Branch
				Employee.Team
			)
			group by
			(
				Employee.Branch ascending
			)
			sort by
			(
				Employee_Status ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Employee_Status as "Employee Status"
							Employee
							Employee.Branch as "Branch"
							Employee.Team as "Team"
							Date_field as "Date"
							Temperature as "Temperature Level"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
							Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
							Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
							Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
							Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
							Employee_Status as "Employee Status"
							Date_field as "Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Visitors
	{
		icon = "users-single-02"
		form Add_Visitor
		{
			displayname = "Add Visitor"
			success message = "Visitor Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Person_To_meet
			(
				type = picklist	
				displayname = "Person To Meet"
				values  = Add_Employee.ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Purpose_of_Vist
			(
				type = picklist
				displayname = "Purpose of Vist"
				values = {"Interview","Customer","Family"}
				initial value = "Customer"
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Purpose
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Date_Time_of_Visit
			(
    			type = datetime
				displayname = "Date-Time of Visit"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Visitor_Image
			(
    			type = image
				displayname = "Visitor Image"
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Signature
			(
    			type = signature
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
	
			customize
			(
				icon = "location-pin-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Visitors
		{
			displayName = "All Visitors"
			show all rows from Add_Visitor    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Person_To_meet as "Person To Meet"
				Purpose_of_Vist as "Purpose of Vist"
				Purpose
				Date_Time_of_Visit as "Date-Time of Visit"
				Phone_Number as "Phone"
				Signature
				Visitor_Image as "Visitor Image"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Name
							Person_To_meet as "Person To Meet"
							Purpose_of_Vist as "Purpose of Vist"
							Purpose
							Date_Time_of_Visit as "Date-Time of Visit"
							Phone_Number as "Phone"
							Signature
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Person_To_meet as "Person To Meet"
							Purpose_of_Vist as "Purpose of Vist"
							Purpose
							Date_Time_of_Visit as "Date-Time of Visit"
							Phone_Number as "Phone"
							Signature
							Visitor_Image as "Visitor Image"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Employees1
	{
		displayname= "Employees"
		icon = "users-single-04"
		form Add_Employee
		{
			displayname = "Add Employee"
			success message = "Employee Added Successfully"
			field alignment = left
					hide = true
			Work_Info
			(
				type = section
				displayname = "Work Info"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Branch
			(
				type = picklist	
				values  = Add_Branch.ID
    			displayformat = [Branch_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Work_Location
			(
				type = picklist	
				displayname = "Work Location"
				values  = Add_Building[Associated_Branch.ID == input.Branch].ID
    			displayformat = [Building_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Team
			(
				type = picklist	
				values  = Add_Team1.ID
    			displayformat = [Team_Name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Employee_Info
			(
				type = section
				displayname = "Employee Info"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			must have unique Employee_ID
			(
    			type = text
				displayname = "Employee ID"
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			must have unique Email
			(
    			type = email
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			Entered_Office
			(
				type = radiobuttons
				displayname = "Entered Office"
				values = {"No","Yes"}
				initial value = "No"
				layout = 2
	 			row = 2
	 			column = 1   
				width = medium
			)
			Declaration_Notification_Status
			(
				type = radiobuttons
				displayname = "Declaration Notification Status"
				values = {"Not Sent","Sent"}
				initial value = "Not Sent"
				layout = 2
	 			row = 2
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Teams1
	{
		displayname= "Teams"
		icon = "users-multiple-11"
		form Add_Team1
		{
			displayname = "Add Team"
			success message = "Team Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Team_Name
			(
    			type = text
				displayname = "Team Name"
    			description
    			[
    				type = help_text
    			 	message = "Eg : Sales, Marketing."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-multiple-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Floors
	{
		icon = "furniture-lamp-floor"
		form Add_Floor
		{
			displayname = "Add Floor"
			success message = "Floor Added Successfully"
			field alignment = left
					hide = true
			Buildings
			(
				type = list	
				values  = Add_Building.ID
    			bidirectional = Select_Floors
    			displayformat = [Building_Name]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Floor_Name
			(
    			type = text
				displayname = "Floor Name"
    			description
    			[
    				type = help_text
    			 	message = "Eg : Ground Floor, 1st Floor"
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-2-p-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Feedback
	{
		icon = "tech-keyboard"
		form Feedback_Form
		{
			displayname = "Feedback Form"
			success message = "Feedback Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Feedback_No
			(
    			type = autonumber
				displayname = "Feedback No"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Employee
			(
				type = picklist	
				values  = Add_Employee.ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name + " " + Name.suffix]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Location
			(
				type = number
				maxchar = 19
				manual input  =  true
				qrcode = true
				show onload = true
				camera = primary
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Spot_Of_Building
			(
				type = picklist	
				displayname = "Spot Of Building"
				values  = Add_Spot_Of_Building.ID
    			displayformat = [Location]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Feedback
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Status
			(
				type = picklist
				values = {"Reported","Converted To Task","Ignore"}
				initial value = "Reported"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-2-form"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list New_Feedback
		{
			displayName = "New Feedback"
			show all rows from Feedback_Form  [Status == "Reported"]  
			(
				Feedback_No as "Feedback No"
				Employee
				Feedback
				Status
				custom action "Convert To Task"
				(
	  			workflow = Convert_To_Task
				show action in edit record menu = true
				column header = "Convert To Task"
				condition = (Status == "Reported")
				)
				Spot_Of_Building as "Spot Of Building"
			)
			options
			(
				icon = "users-2-child"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Feedback_No as "Feedback No"
							Employee
							Spot_Of_Building as "Spot Of Building"
							Feedback
							Status
				"Convert To Task"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Feedback_No as "Feedback No"
							Employee
							Feedback
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Converted_Tasks
		{
			displayName = "Converted Tasks"
			show all rows from Feedback_Form  [Status == "Converted To Task"]  
			(
				Feedback_No as "Feedback No"
				Employee
				Feedback
				Status
				Spot_Of_Building as "Spot Of Building"
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Feedback_No as "Feedback No"
							Employee
							Spot_Of_Building as "Spot Of Building"
							Feedback
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Feedback_No as "Feedback No"
							Employee
							Feedback
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list All_Feedback
		{
			displayName = "All Feedback"
			show all rows from Feedback_Form    
			(
				Feedback
				Employee
				Status
				Feedback_No as "Feedback No"
				Spot_Of_Building as "Spot Of Building"
				Location
			)
			group by
			(
				Status ascending
			)
			sort by
			(
				Status ascending
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Feedback_No as "Feedback No"
							Feedback
							Spot_Of_Building as "Spot Of Building"
							Employee
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Feedback
							Employee
							Status
							Feedback_No as "Feedback No"
							Spot_Of_Building as "Spot Of Building"
							Location
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Staffs_Employees
	{
		displayname= "Staffs & Employees"
		icon = "business-hierarchy-53"
		form Add_Staff
		{
			displayname = "Add Staff"
			success message = "User Added Successfully"
			field alignment = left
					hide = true
			Work_Info
			(
				type = section
				displayname = "Work Info"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Branch
			(
				type = picklist	
				values  = Add_Branch.ID
    			displayformat = [Branch_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Role
			(
				type = picklist
				values = {"Operations Head","Operations Staff","Safety Audit","Doctor","Receptionist"}
				initial value = "Operations Head"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Staff_Info
			(
				type = section
				displayname = "Staff Info"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Staff_ID
			(
    			type = text
				displayname = "Staff ID"
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Email
			(
    			type = email
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
	
			customize
			(
				icon = "users-2-woman-up"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Staffs
		{
			displayName = "All Staffs"
			show all rows from Add_Staff    
			(
				Staff_ID as "Staff ID"
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Email
				Role
				Phone_Number as "Phone"
				Branch
			)
			group by
			(
				Role ascending
			)
			sort by
			(
				Role ascending
			)
			options
			(
				icon = "users-2-a-star"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Branch
							Staff_ID as "Staff ID"
							Name
							Email
							Role
							Phone_Number as "Phone"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Staff_ID as "Staff ID"
							Name
							Email
							Role
							Phone_Number as "Phone"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list All_Employees
		{
			displayName = "All Employees"
			show all rows from Add_Employee    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Email
				Branch
				Phone_Number as "Phone"
				Team
				Employee_ID as "Employee ID"
				Branch.Branch_Name as "Branch Name"
				Work_Location as "Work Location"
				Entered_Office as "Entered Office"
				Declaration_Notification_Status as "Declaration Notification Status"
			)
			group by
			(
				Branch.Branch_Name ascending
			)
			options
			(
				icon = "users-single-04"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Employee_ID as "Employee ID"
							Name
							Email
							Phone_Number as "Phone"
							Branch
							Work_Location as "Work Location"
							Team
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Email
							Branch
							Phone_Number as "Phone"
							Team
							Employee_ID as "Employee ID"
							Work_Location as "Work Location"
							Entered_Office as "Entered Office"
							Declaration_Notification_Status as "Declaration Notification Status"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Branch_Admins
		{
			displayName = "All Branch Admins"
			show all rows from Add_Branch    
			(
				Company
				Branch_Name as "Branch Name"
				Landline_Number as "Landline Number"
				Branch_Address  as "Branch Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Email
				Mobile_Number as "Mobile Number"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Name
							Email
							Mobile_Number as "Mobile Number"
							Branch_Name as "Branch Name"
							Landline_Number as "Landline Number"
							Branch_Address as "Branch Address"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company
							Branch_Name as "Branch Name"
							Landline_Number as "Landline Number"
							Branch_Address as "Branch Address"
							Name
							Email
							Mobile_Number as "Mobile Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list All_Teams
		{
			displayName = "All Teams"
			show all rows from Add_Team1    
			(
				Team_Name as "Team Name"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Team_Name as "Team Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Team_Name as "Team Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Configuration
	{
		icon = "location-pin-copy"
		map Site_Locations
		{
			displayName = "Site Locations"
   			hide = true
			show all rows from Add_Branch    
			(
				Company.Company_Email as "Company Email"
				Company
				Landline_Number as "Landline Number"
				Mobile_Number as "Mobile Number"
				Email
				Branch_Name as "Branch Name"
				Branch_Address  as "Branch Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Show_As_Text
	 			)
			)
			options
			(
	 			display field = Branch_Address
	 	 		radius = 100 Miles
		 		icon = "location-pin-copy"
	 		)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Company
							Branch_Name as "Branch Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock2
					(
			 			layout type = 5
		     			title = "Company"
		     			related field = Company
						fields
						(
							Company_Name as "Company Name"
							Company_Email as "Company Email"
							Mobile_Number as "Mobile Number"
							Phone_Number as "Phone Number"
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Site Details"
						fields
						(
							Branch_Name as "Branch Name"
							Email
							Mobile_Number as "Mobile Number"
							Landline_Number as "Landline Number"
							Branch_Address as "Branch Address"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list All_Floors
		{
			displayName = "All Floors"
   			hide = true
			show all rows from Add_Floor    
			(
				Floor_Name as "Floor Name"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Floor_Name as "Floor Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Floor_Name as "Floor Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary Company_Details
		{
			displayName = "Company Details"
			show all rows from Add_Company_Details    
			(
				Company_Name as "Company Name"
				Phone_Number as "Phone Number"
				Mobile_Number as "Mobile Number"
				Company_Email as "Company Email"
			)
			options
			(
				display rows = 10
				display records per row = 1
				icon = "business-factory"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company_Name as "Company Name"
							Company_Email as "Company Email"
							Phone_Number as "Phone Number"
							Mobile_Number as "Mobile Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company_Name as "Company Name"
							Company_Email as "Company Email"
							Mobile_Number as "Mobile Number"
							Phone_Number as "Phone Number"
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Branches"
		     			related field = Add_Branch.Company
						fields
						(
							Company
							Branch_Name as "Branch Name"
							Landline_Number as "Landline Number"
							Branch_Address as "Branch Address"
							Name
							Email
							Mobile_Number as "Mobile Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary Branches
		{
			displayName = "Branches"
			show all rows from Add_Branch    
			(
				Branch_Name as "Branch Name"
				Email
				Landline_Number as "Landline Number"
				Mobile_Number as "Mobile Number"
				custom action "Add Building"
				(
	  			workflow = Add_Building_Workflow
				show action in view header = true
				column header = "Add Building"
				)
				Branch_Address  as "Branch Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Show_As_Text
	 			)
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
			)
			sort by
			(
				Branch_Name ascending
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "business-hierarchy-53"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Branch_Name as "Branch Name"
							Landline_Number as "Landline Number"
							Name
							Email
							Mobile_Number as "Mobile Number"
							Branch_Address as "Branch Address"
				"Add Building"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock2
					(
			 			layout type = -2
		     			title = "Overview"
		     			related field = Company
						fields
						(
							Company_Name as "Company Name"
							Company_Email as "Company Email"
							Mobile_Number as "Mobile Number"
							Phone_Number as "Phone Number"
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Branch Details"
						fields
						(
							Branch_Name as "Branch Name"
							Email
							Mobile_Number as "Mobile Number"
							Landline_Number as "Landline Number"
							Branch_Address as "Branch Address"
						)
					)
					datablock4
					(
			 			layout type = -1
		     			title = "Buildings"
		     			related field = Buildings
						fields
						(
							Building_Name as "Building Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Add Building"
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary All_Buildings
		{
			displayName = "All Buildings"
			show all rows from Add_Building    
			(
				Building_Name as "Building Name"
				Associated_Branch as "Associated Branch"
				(
					view = Site_Locations
				)
				custom action "Add Spot"
				(
	  			workflow = Add_Spot
				show action in view header = true
				show action in edit record menu = true
				column header = "Add Spot"
				)
				Select_Floors as "Floors"
			)
			group by
			(
				Associated_Branch ascending
			)
			sort by
			(
				Associated_Branch ascending
				Building_Name ascending
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "business-building"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Associated_Branch as "Associated Branch"
							Building_Name as "Building Name"
							Select_Floors as "Floors"
				"Add Spot"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Building Details"
						fields
						(
							Associated_Branch as "Associated Branch"
							Building_Name as "Building Name"
							Select_Floors as "Floors"
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Spots Of Building"
		     			related field = Add_Spot_Of_Building.Building
						fields
						(
							Floor
							Spot_Name as "Spot Name"
							Location
							QR_Code as "QR Code"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Add Spot"
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom Spots_Of_Buildings
		{
			displayName = "Spots Of Buildings"
			show all rows from Add_Spot_Of_Building    
			(
				Spot_Name as "Spot Name"
				Branch
				(
					view = Branches
				)
				Building
				(
					view = All_Buildings
				)
				QR_Code as "QR Code"
				Floor
				Location
			)
			sort by
			(
				Branch ascending
				Building ascending
			)
			options
			(
				icon = "location-crosshair"
	 		)
			custom actions
			(
				"Add Asset"
				(
	  			workflow = Add_Asset_To_the_Gateway
				show action in view header = true
				show action in edit record menu = true
				)
			)
			quickview
			(
				layout
				(
		 			type = 3
					datablock1
					(
			 			layout type = 9
		     			title = "Overview"
						fields
						(
							QR_Code as "QR Code"
							Location
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Building
							Spot_Name as "Spot Name"
							Floor
							QR_Code as "QR Code"
						)
					)
					datablock4
					(
			 			layout type = -1
		     			title = "Assets With Quantity"
		     			related field = Assets_With_Quantity
						fields
						(
							Asset
							Quantity
						)
					)
					datablock5
					(
			 			layout type = -2
		     			title = "Branch"
		     			related field = Branch
						fields
						(
							Company
							Branch_Name as "Branch Name"
							Landline_Number as "Landline Number"
							Branch_Address as "Branch Address"
							Name
							Email
							Mobile_Number as "Mobile Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
			 			"Add Asset"
    	 			)
    			)
			)
		}
		list All_Assets
		{
			displayName = "All Assets"
			show all rows from Add_Asset    
			(
				Asset_Name as "Asset Name"
				For_Facility as "For Facility"
			)
			options
			(
				icon = "social-1-logo-reddit"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Asset_Name as "Asset Name"
							For_Facility as "For Facility"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Asset_Name as "Asset Name"
							For_Facility as "For Facility"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Assign_Staff_Form
	{
		displayname= "Assign Staff Form"
		form Assign_Staff_Form
		{
			displayname = "Assign Staff Form"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Task_ID
			(
				type = picklist	
				displayname = "Task ID"
				values  = New_Maintenance_Task.ID
    			displayformat = [Job_ID + " - " + Job_Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Audit_Required
			(
    			type = checkbox
				displayname = "Audit Required"
				initial value = false
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Maintenance_Staff
			(
				type = picklist	
				displayname = "Maintenance Staff"
				values  = Add_Staff.ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name + " " + Staff_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Audit_Staff
			(
				type = picklist	
				displayname = "Audit Staff"
				values  = Add_Staff.ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name + " " + Staff_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				Assign
				(
   					type = submit
   					displayname = "Assign"
				)
				Reset
				(
   					type = reset
   					displayname = "Reset"
				)
			}
		}
	}
	section Temperature_Update_Form
	{
		displayname= "Temperature Update Form"
		form Temperature_Update_Form
		{
			displayname = "Temperature Update Form"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Employee
			(
				type = picklist	
				values  = Add_Employee.ID
    			displayformat = [Employee_ID + " - " + Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Temperature_Level
			(
				type = decimal
				displayname = "Temperature Level"
    			description
    			[
    				type = help_text
    			 	message = "Enter values in Fahrenheit."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				Update_Button
				(
   					type = submit
   					displayname = "Update"
				)
				Reset
				(
   					type = reset
   					displayname = "Reset"
				)
			}
		}
	}
	section Task_Complete_Form
	{
		displayname= "Task Complete Form"
		icon = "design-todo"
		form Task_Completion_Form
		{
			displayname = "Task Completion Form"
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Date_Time
			(
    			type = datetime
				displayname = "Date-Time"
				initial value = "${zoho.currenttime}"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Staff
			(
				type = picklist	
				values  = Add_Staff.ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Task
			(
				type = picklist	
				values  = New_Maintenance_Task.ID
    			displayformat = [Job_ID + " - " + Job_Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Comments
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Image
			(
    			type = image
				source  = file,camera
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-todo"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list Task_Complete_Form_Report
		{
			displayName = "Task Complete Form Report"
   			hide = true
			show all rows from Task_Completion_Form    
			(
				Task
				Comments
				Image
				Staff
				Date_Time as "Date-Time"
			)
			options
			(
				icon = "design-todo"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Task
							Comments
							Image
							Staff
							Date_Time as "Date-Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Task
							Comments
							Image
							Staff
							Date_Time as "Date-Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Task_Re_work_Form
	{
		displayname= "Task Re-work Form"
		icon = "design-todo"
		form Task_Re_work_Form
		{
			displayname = "Task Re-work Form"
			success message = "Data Added Successfully!"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Date_Time
			(
    			type = datetime
				displayname = "Date-Time"
				initial value = "${zoho.currenttime}"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Staff
			(
				type = picklist	
				values  = Add_Staff.ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name + " " + Staff_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Team
			(
				type = radiobuttons
				values = {"Audit","Operation"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Task
			(
				type = picklist	
				values  = New_Maintenance_Task.ID
    			displayformat = [Job_ID + " - " + Job_Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Reason_For_Re_work
			(
    			type = textarea
				displayname = "Reason For Re-work"
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-todo"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list Task_Re_work_Form_Report
		{
			displayName = "Task Re-work Form Report"
   			hide = true
			show all rows from Task_Re_work_Form    
			(
				Task
				Date_Time as "Date-Time"
				Staff
				Reason_For_Re_work as "Reason For Re-work"
				Team
			)
			options
			(
				icon = "design-todo"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Task
							Date_Time as "Date-Time"
							Staff
							Reason_For_Re_work as "Reason For Re-work"
							Team
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Task
							Date_Time as "Date-Time"
							Staff
							Reason_For_Re_work as "Reason For Re-work"
							Team
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
		 functions
		 {
			 Deluge
			 {
				 void custom_action.add_asset_to_spot(int spot)
         {
         	openUrl(zoho.appuri + "#Form:Add_Asset_To_Spot?Spot=" + spot,"popup window");
         }
				 void custom_action.open_add_building_form(int site)
         {
         	openUrl(zoho.appuri + "#Form:Add_Building?Associated_Site=" + site,"popup window");
         }
				 void custom_action.open_add_spot_form(int building)
         {
         	openUrl(zoho.appuri + "#Form:Add_Spot?Building=" + building,"popup window");
         }
				 void custom_action.send_declaration_notification(Add_Employee form)
         {
         	url = "https://app.zohocreator.in/" + zoho.appuri;
         	for each  rec in form
         	{
         		sendmail
         		[
         			from :zoho.adminuserid
         			to :rec.Email
         			subject :"Self Declaration Notification"
         			message :("Hi " + rec.Name) + ", <br>Thanks for being supportive and Working from Home.As we are planning to reopen the office soon, we want all of our employees to declare their health condition and their status. So kindly use this below link to self declare your health condition and status.<br><a href=" + url + ">Click Here</a>"
         		]
         		rec.Declaration_Notification_Status="Sent";
         	}
         }
			 }
		 }




		workflow
		{
		form
		{
			Run_Scripts_On_Click_Of_A as "Run Scripts On Click Of Assign"
			{
				type =  form
				form = Assign_Staff_Form
				button = Assign
				on click
				{
					actions 
					{
					on click
					(
						if(Task_ID != null)
										{
											task_rec = New_Maintenance_Task[ID == input.Task_ID];
											if(Maintenance_Staff != null)
											{
												task_rec.Status="Staff Assigned";
												task_rec.Maintenance_Staff=input.Maintenance_Staff;
												url = "https://app.zohocreator.in/" + zoho.appuri;
												sendmail
												[
													from :zoho.adminuserid
													to :input.Maintenance_Staff.Email
													subject :"New Task Assigned"
													message :("Hi " + input.Maintenance_Staff.Name) + ", <br>A new maintenance task assigned to you, Check in the below link.<br><a href=" + url + ">Click Here</a>"
												]
											}
											if(Audit_Staff != null)
											{
												task_rec.Audit_Staff=input.Audit_Staff;
											}
										}
										openUrl("#Script:page.refresh","same window");
					)
					}
				}
			}
			Run_Scripts_On_Click_Of_U as "Run Scripts On Click Of Update"
			{
				type =  form
				form = Temperature_Update_Form
				button = Update_Button
				on click
				{
					actions 
					{
					on click
					(
						if(Employee != null)
										{
											declartion_rec = Employee_Declaration_Form[Employee == input.Employee];
											declartion_rec.Temperature=input.Temperature_Level;
											if(Temperature_Level >= 100)
											{
												declartion_rec.Employee_Status="Refer to Doctor";
											}
											else
											{
												declartion_rec.Employee_Status="Allowed to Enter Office";
												emp_rec = Add_Employee[ID == input.Employee];
												emp_rec.Entered_Office="Yes";
											}
										}
										openUrl("#Script:page.refresh","same window");
					)
					}
				}
			}
			Run_Scripts_On_Always4 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Spot_Of_Building
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Location,QR_Code;
					}
				}

			}
			Run_Scripts_On_Always9 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Spot_Of_Building
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(input.Spot_Name != "" && Branch != null && Floor != null && Building != null)
										{
											input.Location = input.Branch.Branch_Name + " - " + input.Building.Building_Name + " - " + input.Floor.Floor_Name + " - " + input.Spot_Name;
											//Disclaimer : An external API is used to generate the QR code. Please avoid passing confidential information in the API.
											input.QR_Code = "<img src='https://bwipjs-api.metafloor.com/?bcid=qrcode&text=" + input.ID + "'>";
										}
						)
					}
				}

			}
			Run_Scripts_On_Always10 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Spot_Of_Building
				record event = on add or edit

				on user input of Branch
				{
					actions 
					{
						custom deluge script
						(
											if(input.Branch != null)
										{
											buildings = Add_Building[Associated_Branch == input.Branch].ID.getAll();
											input.Building:ui.add(buildings);
										}
						)
					}
				}

			}
			Run_Scripts_On_Always11 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Spot_Of_Building
				record event = on add or edit

				on user input of Assets_With_Quantity.Quantity
				{
					actions 
					{
						custom deluge script
						(
											if(row.Quantity != null)
										{
											if(row.Quantity <= 0)
											{
												alert "Enter a valid quantity";
												row.Quantity=null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always12 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Spot_Of_Building
				record event = on add or edit

				on add row of Assets_With_Quantity
				{
					actions 
					{
						custom deluge script
						(
											assets = Add_Asset[ID != 0].ID.getAll();
										selected_assets = input.Assets_With_Quantity.Asset.getall();
										assets.removeAll(selected_assets);
										row.Asset:ui.add(assets);
						)
					}
				}

			}
			Run_Scripts_On_Always13 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Spot_Of_Building
				record event = on add or edit

				on delete row of Assets_With_Quantity
				{
					actions 
					{
						custom deluge script
						(
											assets = Add_Asset[ID != 0].ID.getAll();
										selected_assets = input.Assets_With_Quantity.Asset.getall();
										assets.removeAll(selected_assets);
										row.Asset:ui.add(assets);
						)
					}
				}

			}
			Run_Scripts_While_adding_10 as "Run Scripts - While adding a record"
			{
				type =  form
				form = Add_Company_Details
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											companies = Add_Company_Details[ID != 0];
										if(companies.count() == 1)
										{
											openUrl(zoho.appuri + "#Form:Add_Branch","same window");
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_14 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Spot_Of_Building
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											branch_admin_rec = Add_Branch[Email == zoho.loginuserid];
										if(branch_admin_rec.count() == 1)
										{
											input.Branch = branch_admin_rec.ID;
											disable Branch;
										}
										hide QR_Code;
						)
					}
				}

			}
			Run_Scripts_While_Adding_15 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Spot_Of_Building
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:page.refresh","same window");
						)
					}
				}

			}
			Run_Scripts_While_Adding_16 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Staff
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											fot = Add_Staff[ID != null].Staff_ID sort by Added_Time desc;
										if(fot != null)
										{
											ff = fot.toString();
											num = ff.removeFirstOccurence("EMP0").toLong() + 1;
											input.Staff_ID = "EMP0" + num;
										}
										else
										{
											input.Staff_ID = "EMP01";
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_17 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Staff
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											thisapp.permissions.assignUserInProfile(input.Email,input.Role,true);
						)
					}
				}

			}
			Run_Scripts_While_Adding_18 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = New_Maintenance_Task
				record event = on add

				field rules
				{
					actions  (Audit_Require == true)
					{
						show Audit_Staff;
					}
				}

			}
			Run_Scripts_While_Adding_19 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = New_Maintenance_Task
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											fot = New_Maintenance_Task[ID != null].Job_ID sort by Added_Time desc;
										if(fot != null)
										{
											ff = fot.toString();
											num = ff.removeFirstOccurence("TASKID0").toLong() + 1;
											input.Job_ID = "TASKID0" + num;
										}
										else
										{
											input.Job_ID = "TASKID01";
										}
										hide Status;
										hide Audit_Staff;
										staff_rec = Add_Staff[Email == zoho.loginuserid];
										if(staff_rec.count() == 1)
										{
											input.Raised_By = staff_rec.ID;
											disable Raised_By;
											available_locations = Add_Spot_Of_Building[Branch == staff_rec.Branch].ID.getAll();
											input.Location:ui.add(available_locations);
										}
										if(input.Feedback_No != null)
										{
											disable Feedback_No;
											input.Location = input.Feedback_No.Spot_Of_Building;
											input.Description = input.Feedback_No.Feedback;
										}
										else
										{
											hide Feedback_No;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_20 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = New_Maintenance_Task
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											input.Building = input.Location.Building;
										if(Feedback_No != null)
										{
											feedback_rec = Feedback_Form[ID == input.Feedback_No];
											feedback_rec.Status="Converted To Task";
										}
										if(input.Maintenance_Staff != null)
										{
											input.Status = "Staff Assigned";
											url = "https://app.zohocreator.in/" + zoho.appuri;
											sendmail
											[
												from :zoho.adminuserid
												to :input.Maintenance_Staff.Email
												subject :"New Task Assigned"
												message :("Hi " + input.Maintenance_Staff.Name) + ", <br>A new maintenance task assigned to you, Check in the below link.<br><a href=" + url + ">Click Here</a>"
											]
										}
										openUrl("#Script:page.refresh","same window");
						)
					}
				}

			}
			Run_Scripts_While_Adding_21 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = New_Maintenance_Task
				record event = on add

				on user input of Due_Date_Time
				{
					actions 
					{
						custom deluge script
						(
											if(input.Due_Date_Time != null)
										{
											if(input.Due_Date_Time <= zoho.currenttime)
											{
												alert "Enter a valid future time";
												input.Due_Date_Time = null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing6 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = New_Maintenance_Task
				record event = on edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(Status == "Staff Assigned")
										{
											show Maintenance_Staff;
											hide Status;
											if(Audit_Require == true)
											{
												hide Audit_Staff;
											}
										}
										else if(Status == "Work Completed")
										{
											show Maintenance_Staff;
											hide Status;
										}
										staff_rec = Add_Staff[Email == zoho.loginuserid];
										if(staff_rec.count() == 1)
										{
											disable Raised_By;
											selected_value = input.Location;
											available_locations = Add_Spot_Of_Building[Branch == staff_rec.Branch].ID.getAll();
											input.Location:ui.add(available_locations);
											input.Location = selected_value;
										}
										if(Feedback_No != null)
										{
											show Feedback_No;
											disable Feedback_No;
										}
										else
										{
											hide Feedback_No;
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing7 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = New_Maintenance_Task
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(Status == "Staff Assigned")
										{
											if(Maintenance_Staff == null)
											{
												alert "Please assign a staff to continue";
												cancel submit;
											}
											if(Audit_Require == true)
											{
												alert "Please assign a audit staff";
												cancel submit;
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_22 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Employee_Declaration_Form
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Date_field = zoho.currentdate;
										hide Temperature;
										employee_rec = Add_Employee[Email == zoho.loginuserid];
										if(employee_rec.count() == 1)
										{
											input.Employee = employee_rec.ID;
											disable Employee;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_23 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Employee_Declaration_Form
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											declaration_rec = Employee_Declaration_Form[Employee == input.Employee];
										if(declaration_rec.count() == 1)
										{
											alert "Declaration already added for this employee";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_24 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Employee_Declaration_Form
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(Have_you_travelled_outside_of_the_country_within_the_last_90_days == "No" && Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 == "No" && Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath == "No" && Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill == "No")
										{
											input.Employee_Status = "Allowed to Work in Office";
											sendmail
											[
												from :zoho.adminuserid
												to :input.Employee.Email
												subject :"Declaration Update"
												message :("Hi " + input.Employee.Name) + ", <br>As per your declaration you are allowed to work in office."
											]
										}
										else if(Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 == "Yes" && Have_you_travelled_outside_of_the_country_within_the_last_90_days == "Yes" && Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath == "Yes" && Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill == "Yes")
										{
											input.Employee_Status = "Continue WFH";
											sendmail
											[
												from :zoho.adminuserid
												to :input.Employee.Email
												subject :"Declaration Update"
												message :("Hi " + input.Employee.Name) + ", <br>As per your declaration you are advised to continue your work from home."
											]
										}
						)
					}
				}

			}
			Run_Scripts_On_Always14 as "Run Scripts On Always"
			{
				type =  form
				form = Employee_Declaration_Form
				record event = on add or edit

				field rules
				{
					actions  (Have_you_travelled_outside_of_the_country_within_the_last_90_days == "Yes")
					{
						show International_Travel_Info;
					}
					actions 
					{
						hide Employee_Status;
					}
				}

			}
			Run_Scripts_While_Adding_25 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Visitor
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Date_Time_of_Visit = zoho.currenttime;
						)
					}
				}

			}
			Run_Scripts_While_Editing8 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Employee_Declaration_Form
				record event = on edit

				field rules
				{
					actions 
					{
						disable Employee;
					}
				}

			}
			Run_Scripts_While_Editing9 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Employee_Declaration_Form
				record event = on edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(Employee.Email != zoho.loginuserid)
										{
											disable Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19;
											disable Have_you_travelled_outside_of_the_country_within_the_last_90_days;
											disable Decision_box;
											disable Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath;
											disable Date_field;
											disable Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill;
											disable Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always15 as "Run Scripts On Always"
			{
				type =  form
				form = Add_Floor
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Buildings;
					}
				}

			}
			Run_Scripts_While_Deletin2 as "Run Scripts While Deleting a Record"
			{
				type =  form
				form = Add_Staff
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											thisapp.permissions.deleteuser(input.Email);
						)
					}
				}

			}
			Run_Scripts_While_Editing10 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Add_Staff
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(old.Email != input.Email && old.Role != input.Role)
										{
											thisapp.permissions.deleteuser(old.Email);
											thisapp.permissions.assignUserInProfile(input.Email,input.Role,true);
										}
										else if(old.Role != input.Role && old.Email == input.Email)
										{
											thisapp.permissions.assignUserInProfile(input.Email,input.Role,true);
										}
										else if(old.Email != input.Email && old.Role == input.Role)
										{
											thisapp.permissions.assignUserInProfile(input.Email,input.Role,true);
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_26 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Employee
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											input.Entered_Office = "No";
										input.Declaration_Notification_Status = "Not Sent";
										thisapp.permissions.assignUserInProfile(input.Email,"Employee");
						)
					}
				}

			}
			Run_Scripts_While_Editing11 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Add_Employee
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(old.Email != input.Email)
										{
											thisapp.permissions.deleteuser(old.Email);
											thisapp.permissions.assignUserInProfile(input.Email,"Employee");
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin4 as "Run Scripts While Deleting a Record"
			{
				type =  form
				form = Add_Employee
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											thisapp.permissions.deleteuser(input.Email);
						)
					}
				}

			}
			Run_Scripts_While_Adding_27 as "Run Scripts While Adding a Branch"
			{
				type =  form
				form = Add_Branch
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Company = Add_Company_Details[ID != 0].ID;
										disable Company;
						)
					}
				}

			}
			Run_Scripts_While_Adding_28 as "Run Scripts While Adding a Branch"
			{
				type =  form
				form = Add_Branch
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											thisapp.permissions.assignUserInProfile(input.Email,"Branch Admin",true);
										branches = Add_Branch[ID != 0];
										if(branches.count() == 1)
										{
											openUrl(zoho.appuri + "#Form:Add_Spot_Of_Building","same window");
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing12 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Add_Branch
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(old.Email != input.Email)
										{
											thisapp.permissions.deleteuser(old.Email);
											thisapp.permissions.assignUserInProfile(input.Email,"Branch Admin",true);
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin5 as "Run Scripts While Deleting a Record"
			{
				type =  form
				form = Add_Branch
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											thisapp.permissions.deleteuser(input.Email);
						)
					}
				}

			}
			Run_Scripts_While_Adding_29 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Building
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											branch_admin_rec = Add_Branch[Email == zoho.loginuserid];
										if(branch_admin_rec.count() == 1)
										{
											input.Associated_Branch = branch_admin_rec.ID;
											disable Associated_Branch;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_30 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Building
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:page.refresh","same window");
						)
					}
				}

			}
			Run_Scripts_While_Editing13 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Add_Building
				record event = on edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											branch_admin_rec = Add_Branch[Email == zoho.loginuserid];
										if(branch_admin_rec.count() == 1)
										{
											disable Associated_Branch;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always16 as "Run Scripts On Always"
			{
				type =  form
				form = New_Maintenance_Task
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Building;
					}
				}

			}
			Run_Scripts_On_Always17 as "Run Scripts On Always"
			{
				type =  form
				form = Add_Employee
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Entered_Office,Declaration_Notification_Status;
					}
				}

			}
			Run_Scripts_While_Adding_31 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Assign_Staff_Form
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(Task_ID != null)
										{
											branch = input.Task_ID.Location.Branch;
											disable Task_ID;
											if(Task_ID.Audit_Require == true)
											{
												input.Audit_Required = true;
												disable Audit_Required;
												branch_audit_staffs = Add_Staff[Role == "Safety Audit" && Branch == branch].ID.getAll();
												input.Audit_Staff:ui.add(branch_audit_staffs);
											}
											else
											{
												hide Audit_Required;
												hide Audit_Staff;
											}
											branch_maintenance_staffs = Add_Staff[Role == "Operations Staff" && Branch == branch].ID.getAll();
											input.Maintenance_Staff:ui.add(branch_maintenance_staffs);
										}
						)
					}
				}

			}
			Run_Scripts_On_Always18 as "Run Scripts On Always"
			{
				type =  form
				form = Feedback_Form
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Status;
					}
				}

			}
			Run_Scripts_While_Adding_32 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Temperature_Update_Form
				record event = on add

				field rules
				{
					actions 
					{
						disable Employee;
					}
				}

			}
			Run_Scripts_While_Adding_33 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Temperature_Update_Form
				record event = on add

				on user input of Temperature_Level
				{
					actions 
					{
						custom deluge script
						(
											if(Temperature_Level != null)
										{
											if(Temperature_Level <= 0)
											{
												alert "Please enter a valid temperature value";
												input.Temperature_Level = null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_34 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Feedback_Form
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											employee_rec = Add_Employee[Email == zoho.loginuserid];
										if(employee_rec.count() == 1)
										{
											input.Employee = employee_rec.ID;
											disable Employee;
										}
										hide Spot_Of_Building;
										disable Spot_Of_Building;
						)
					}
				}

			}
			Run_Scripts_While_Adding_35 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Feedback_Form
				record event = on add

				on user input of Location
				{
					actions 
					{
						custom deluge script
						(
											if(input.Location != null)
										{
											input.Spot_Of_Building = Add_Spot_Of_Building[ID == input.Location].ID;
											show Spot_Of_Building;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always19 as "Run Scripts On Always"
			{
				type =  form
				form = Task_Completion_Form
				record event = on add or edit

				field rules
				{
					actions 
					{
						disable Staff,Date_Time,Task;
					}
				}

			}
			Run_Scripts_While_Adding_36 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Task_Completion_Form
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Staff = Add_Staff[Email == zoho.loginuserid].ID;
						)
					}
				}

			}
			Run_Scripts_While_Adding_37 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Task_Completion_Form
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(Task != null)
										{
											url = "";
											task_rec = New_Maintenance_Task[ID == input.Task];
											if(task_rec.Status == "Rework By Operation" || task_rec.Status == "Staff Assigned")
											{
												url = "https://app.zohocreator.in/" + zoho.appuri + "#Report:Waiting_For_Approval";
												task_rec.Status="Work Completed";
												sendmail
												[
													from :zoho.adminuserid
													to :task_rec.Raised_By.Email
													subject :"New Completed Task"
													message :("Hi " + task_rec.Raised_By.Name) + ", <br>A new maintenance task has been completed and waiting for your approval, Check in the below link.<br><a href=" + url + ">Click Here</a>"
												]
											}
											else
											{
												url = "https://app.zohocreator.in/" + zoho.appuri + "Report:Waiting_For_Audit";
												task_rec.Status="Operation Team Approved";
												sendmail
												[
													from :zoho.adminuserid
													to :task_rec.Audit_Staff.Email
													subject :"New Safety and Audit Task"
													message :("Hi " + task_rec.Audit_Staff.Name) + ", <br>A new maintenance task has been completed and waiting for safety and audit check, Check in the below link.<br><a href=" + url + ">Click Here</a>"
												]
											}
										}
										openUrl("#Script:page.refresh","same window");
						)
					}
				}

			}
			Run_Scripts_On_Always20 as "Run Scripts On Always"
			{
				type =  form
				form = Task_Re_work_Form
				record event = on add or edit

				field rules
				{
					actions 
					{
						disable Date_Time,Staff,Task,Team;
					}
				}

			}
			Run_Scripts_While_Adding_38 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Task_Re_work_Form
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											staff_rec = Add_Staff[Email == zoho.loginuserid];
										input.Staff = staff_rec.ID;
										if(staff_rec.Role == "Safety & Audit")
										{
											input.Team = "Audit";
										}
										else
										{
											input.Team = "Operation";
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_39 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Task_Re_work_Form
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(Task != null)
										{
											task_rec = New_Maintenance_Task[ID == input.Task];
											if(Team == "Audit")
											{
												task_rec.Status="Rework By Audit";
											}
											else
											{
												task_rec.Status="Rework By Operation";
											}
											url = "https://app.zohocreator.in/" + zoho.appuri;
											sendmail
											[
												from :zoho.adminuserid
												to :task_rec.Maintenance_Staff.Email
												subject :"Re-work Task"
												message :("Hi " + task_rec.Maintenance_Staff.Name) + ", <br>An old maintenance task has been re-assigned to you, Check in the below link.<br><a href=" + url + ">Click Here</a>"
											]
										}
										openUrl("#Script:page.refresh","same window");
						)
					}
				}

			}
		}





		functions
		{
			Add_Asset_To_the_Gateway as "Add Asset To the Gateway"
			{
				type =  functions
				form = Add_Spot_Of_Building
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_action.add_asset_to_spot(ID);
					}
				}
			}
			Add_Building_Workflow as "Add Building Workflow"
			{
				type =  functions
				form = Add_Branch
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_action.open_add_building_form(ID);
					}
				}
			}
			Add_Spot as "Add Spot"
			{
				type =  functions
				form = Add_Building
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_action.open_add_spot_form(ID);
					}
				}
			}
			Assign_to_Staff as "Assign to Staff"
			{
				type =  functions
				form = New_Maintenance_Task
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Assign_Staff_Form?Task_ID=" + input.ID,"popup window");
					)
					}
				}
			}
			Complete_Task as "Complete Task"
			{
				type =  functions
				form = New_Maintenance_Task
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Task_Completion_Form?Task=" + input.ID,"popup window");
					)
					}
				}
			}
			Operation_Approve1 as "Operation Approve"
			{
				type =  functions
				form = New_Maintenance_Task
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						if(Audit_Require == false)
										{
											input.Status = "Closed";
										}
										else
										{
											input.Status = "Operation Team Approved";
										}
					)
					}
				}
			}
			Operation_Rework as "Operation Rework"
			{
				type =  functions
				form = New_Maintenance_Task
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Task_Re_work_Form?Task=" + input.ID,"popup window");
					)
					}
				}
			}
			Audit_Approve as "Audit Approve"
			{
				type =  functions
				form = New_Maintenance_Task
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						input.Status = "Closed";
					)
					}
				}
			}
			Allow_Work_in_Office as "Allow Work in Office"
			{
				type =  functions
				form = Employee_Declaration_Form
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						input.Employee_Status = "Allowed to Work in Office";
										sendmail
										[
											from :zoho.adminuserid
											to :input.Employee.Email
											subject :"Declaration Update"
											message :("Hi " + input.Employee.Name) + ", <br>As per your declaration you are allowed to work in office."
										]
					)
					}
				}
			}
			Continue_WFH as "Continue WFH"
			{
				type =  functions
				form = Employee_Declaration_Form
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						input.Employee_Status = "Continue WFH";
										sendmail
										[
											from :zoho.adminuserid
											to :input.Employee.Email
											subject :"Declaration Update"
											message :("Hi " + input.Employee.Name) + ", <br>As per your declaration you are advised to continue your work from home."
										]
					)
					}
				}
			}
			Refer_to_Doctor as "Refer to Doctor"
			{
				type =  functions
				form = Employee_Declaration_Form
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						input.Employee_Status = "Refer to Doctor";
					)
					}
				}
			}
			Add_Temperature as "Add Temperature"
			{
				type =  functions
				form = Employee_Declaration_Form
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Temperature_Update_Form?Employee=" + input.Employee,"popup window");
					)
					}
				}
			}
			Allow_To_Enter_Office as "Allow To Enter Office"
			{
				type =  functions
				form = Employee_Declaration_Form
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						input.Employee_Status = "Allowed to Enter Office";
										emp_rec = Add_Employee[ID == input.Employee];
										emp_rec.Entered_Office="Yes";
					)
					}
				}
			}
			Refer_To_Doctor as "Refer To Doctor"
			{
				type =  functions
				form = Employee_Declaration_Form
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						input.Employee_Status = "Refer to Doctor";
					)
					}
				}
			}
			Allow_To_Enter_Office1 as "Allow To Enter Office"
			{
				type =  functions
				form = Employee_Declaration_Form
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						input.Employee_Status = "Allowed to Enter Office";
										emp_rec = Add_Employee[ID == input.Employee];
										emp_rec.Entered_Office="Yes";
					)
					}
				}
			}
			Continue_WFH1 as "Continue WFH"
			{
				type =  functions
				form = Employee_Declaration_Form
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						input.Employee_Status = "Continue WFH";
					)
					}
				}
			}
			Rework as "Rework"
			{
				type =  functions
				form = New_Maintenance_Task
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Task_Re_work_Form?Task=" + input.ID,"popup window");
					)
					}
				}
			}
			Send_Declaration_Notifica as "Send Declaration Notification"
			{
				type =  functions
				form = Add_Employee
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.custom_action.send_declaration_notification(Add_Employee);
					}
				}
			}
			Convert_To_Task as "Convert To Task"
			{
				type =  functions
				form = Feedback_Form
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:New_Maintenance_Task?Feedback_No=" + input.ID,"popup window");
					)
					}
				}
			}
		}
	}
	share_settings
	{
			"Receptionist"
			{
				name = "Receptionist"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Receptionist Profile\n"
				ModulePermissions
				{
					Temperature_Update_Form
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
					Employee_Declaration_Form
					{
						enabled= Viewall 
						allFieldsVisible= true 
						ReportPermissions
						{
							Temperature_Check={"View"}
						}
					}
					Add_Visitor
					{
						enabled= Create,Viewall,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Visitors={"View"}
						}
					}
				}
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have all the permissions.\n"
			}
			"Employee"
			{
				name = "Employee"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Employee Profile\n"
				ModulePermissions
				{
					Employee_Declaration_Form
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Declarations={"View"}
						}
					}
					Feedback_Form
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
				}
			}
			"Operations Staff"
			{
				name = "Operations Staff"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Operation Staff Profile\n"
				ModulePermissions
				{
					New_Maintenance_Task
					{
						enabled= Viewall 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Tasks={"View","Edit"}
						}
					}
					Task_Completion_Form
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
				}
			}
			"Operations Head"
			{
				name = "Operations Head"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Operation Head Profile\n"
				ModulePermissions
				{
					Feedback_Form
					{
						enabled= Viewall 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Feedback={"View"}
							Converted_Tasks={"View"}
							New_Feedback={"View"}
						}
					}
					Task_Re_work_Form
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
					New_Maintenance_Task
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Waiting_For_Approval={"View","Edit"}
							Pending_Tasks={"View","Edit"}
							All_Maintenance_Tasks={"View","Edit","Delete"}
						}
					}
					Assign_Staff_Form
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
					Maintenance_Dashboard
					{
						enabled = tab
					}
				}
			}
			"Branch Admin"
			{
				name = "Branch Admin"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Branch Admin Profile\n"
				ModulePermissions
				{
					Add_Floor
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
					Add_Team1
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
					Add_Spot_Of_Building
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Spots_Of_Buildings={"View"}
						}
					}
					Add_Building
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Buildings={"View"}
						}
					}
					Add_Staff
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Staffs={"View"}
						}
					}
					Employee_Declaration_Form
					{
						enabled= Viewall 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Employee_Declarations={"View"}
							Employees_In_WFH={"View"}
							HR_Approval={"View"}
							Employees_Entered_Office={"View"}
						}
					}
					Add_Employee
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Notified_Employees={"View"}
							All_Employees={"View"}
							Pending_Notifications={"View"}
						}
					}
					HR_Dashboard
					{
						enabled = tab
					}
				}
			}
			"Doctor"
			{
				name = "Doctor"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Doctor Profile\n"
				ModulePermissions
				{
					Employee_Declaration_Form
					{
						enabled= Viewall 
						allFieldsVisible= true 
						ReportPermissions
						{
							Doctor_Approval={"View"}
						}
					}
				}
			}
			"Safety Audit"
			{
				name = "Safety Audit"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Safety Audit Profile\n"
				ModulePermissions
				{
					New_Maintenance_Task
					{
						enabled= Viewall 
						allFieldsVisible= true 
						ReportPermissions
						{
							Waiting_For_Audit={"View"}
						}
					}
					Task_Re_work_Form
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
					Maintenance_Dashboard
					{
						enabled = tab
					}
				}
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users.\n\n"
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 3
		icons = true
		icons style = outline
		font = "lato"
		color options
    	{
        color = "4"
    	}
    	icon
    	{
        	type = "1"
        	name = "zc-ab-education-16"
        	background color = "blue"
        	foreground color = "#FFFFFF"
    	}
    	logo
    	{
        	preference = "none"
        	placement = "left"
    	}
	}


	phone
	{
		section  Company_Details
		{
			displayname= "Company Details"
			icon = "social-1-logo-creative-market"
			form  Add_Company_Details
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
		}
		section  Branches
		{
			icon = "objects-leaf-38"
			form  Add_Branch
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
		}
		section  Dashboard1
		{
			displayname= "Dashboard"
			page Maintenance_Dashboard
			{
				icon = "ui-1-dashboard-half"
			}
			page HR_Dashboard
			{
				icon = "ui-1-dashboard-half"
			}
		}
		section  Maintenance_Tasks1
		{
			displayname= "Maintenance Tasks"
			form  New_Maintenance_Task
			{
				layout = auto
				icon = "sport-cardio"
			}
			list Pending_Tasks
			{
				icon = "design-todo"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				display type = auto
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Job_ID as "Task ID"
								Description
								Raised_By as "Raised By"
								Job_Title as "Task Title"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on left swipe
									(
										"Assign to Staff"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Job_ID as "Task ID"
								Raised_By as "Raised By"
								Job_Title as "Task Title"
								Description
								Priority
								Due_Date_Time as "Due Date/Time"
								Audit_Require as "Audit Required"
								Status
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list My_Tasks
			{
				icon = "health-heartbeat-16"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				display type = auto
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Job_ID as "Task ID"
								Description
								Raised_By as "Raised By"
								Job_Title as "Task Title"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on left swipe
									(
										"Complete Task"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Job_ID as "Task ID"
								Raised_By as "Raised By"
								Job_Title as "Task Title"
								Description
								Priority
								Due_Date_Time as "Due Date/Time"
								Audit_Require as "Audit Required"
								Maintenance_Staff as "Maintenance Staff"
								Status
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Waiting_For_Approval
			{
				icon = "design-todo"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Job_ID as "Task ID"
								Priority
								Raised_By as "Raised By"
								Job_Title as "Task Title"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on left swipe
									(
										"Approve"
										"Rework"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Job_ID as "Task ID"
								Raised_By as "Raised By"
								Job_Title as "Task Title"
								Description
								Priority
								Due_Date_Time as "Due Date/Time"
								Audit_Require as "Audit Required"
								Maintenance_Staff as "Maintenance Staff"
								Status
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Waiting_For_Audit
			{
				icon = "users-2-a-time"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				display type = auto
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Job_ID as "Task ID"
								Description
								Raised_By as "Raised By"
								Job_Title as "Task Title"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on left swipe
									(
										"Approve"
										"Rework"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Job_ID as "Task ID"
								Raised_By as "Raised By"
								Job_Title as "Task Title"
								Description
								Priority
								Due_Date_Time as "Due Date/Time"
								Audit_Require as "Audit Required"
								Maintenance_Staff as "Maintenance Staff"
								Status
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list All_Maintenance_Tasks
			{
				icon = "sport-cardio"
			}
		}
		section  Employee_Declaration1
		{
			displayname= "Employee Declaration"
			form  Employee_Declaration_Form
			{
				layout = auto
				icon = "business-business-contact-89"
			}
			list HR_Approval
			{
				icon = "health-notebook"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Employee
								Employee.Branch as "Branch"
								Date_field as "Date"
								Employee.Team as "Team"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on left swipe
									(
										"Allow Work in Office"
										"Continue WFH"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
								Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
								Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
								Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
								Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Temperature_Check
			{
				icon = "weather-sun-cloud"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Employee
								Employee.Branch as "Branch"
								Employee.Team as "Team"
								Date_field as "Date"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on left swipe
									(
										"Add Temperature Level"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Date_field as "Date"
								Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
								Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
								Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
								Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
								Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
								Employee_Status as "Employee Status"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Doctor_Approval
			{
				icon = "health-bag-49"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Employee
								Employee.Branch as "Branch"
								Employee.Team as "Team"
								Date_field as "Date"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on left swipe
									(
										"Allow To Enter Office"
										"Continue WFH"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Employee
								Date_field as "Date"
								Have_you_travelled_outside_of_the_country_within_the_last_90_days as "Have you travelled outside of the country within the last 90 days? "
								Have_you_been_diagnosed_with_Covid_19_or_displayed_symptoms_of_COVID_19_while_you_were_ill as "Have you been diagnosed with Covid-19 or displayed symptoms of COVID-19 while you were ill?"
								Have_you_been_in_close_contact_with_a_person_who_has_been_diagnosed_with_COVID_19 as "Have you been in close contact with a person who has been diagnosed with COVID-19? "
								Do_you_have_symptoms_of_lower_respiratory_illness_e_g_acute_cough_shortness_of_breath as "Do you have symptoms of lower respiratory illness? (e.g. acute cough, shortness of breath)?"
								Were_you_briefed_about_the_workplace_etiquettes_specific_to_covid_19_situation_to_be_followed as "Were you briefed about the workplace etiquettes (specific to covid-19 situation) to be followed?"
								Temperature as "Temperature Level"
								Employee_Status as "Employee Status"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list My_Declarations
			{
			}
			list All_Employee_Declarations
			{
			}
		}
		section  Employee_Status1
		{
			displayname= "Employee Status"
			form  Add_Employee
			{
				layout = auto
				icon = "users-2-a-add"
				hide = true
			}
			list Pending_Notifications
			{
				icon = "ui-2-hourglass"
			}
			list Notified_Employees
			{
				icon = "users-single-04"
			}
			list Employees_In_WFH
			{
			}
			list Employees_Entered_Office
			{
			}
		}
		section  Visitors
		{
			form  Add_Visitor
			{
				layout = auto
				icon = "location-pin-add"
			}
			list All_Visitors
			{
				icon = "travel-world"
			}
		}
		section  Facilities
		{
			icon = "travel-hotel-symbol"
			form  Facility
			{
				layout = auto
				icon = "social-1-logo-trello"
				hide = true
			}
		}
		section  Feedback
		{
			form  Feedback_Form
			{
				layout = auto
				icon = "design-2-form"
			}
			list New_Feedback
			{
				icon = "users-2-child"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				display type = auto
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Feedback_No as "Feedback No"
								Feedback
								Spot_Of_Building as "Spot Of Building"
								Employee
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on left swipe
									(
										"Convert To Task"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Feedback_No as "Feedback No"
								Employee
								Feedback
								Status
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Converted_Tasks
			{
			}
			list All_Feedback
			{
				icon = "travel-world"
			}
		}
		section  Staffs1
		{
			displayname= "Staffs"
			form  Add_Staff
			{
				layout = auto
				icon = "users-2-woman-up"
				hide = true
			}
			list All_Staffs
			{
				icon = "users-2-woman"
			}
			list All_Employees
			{
				icon = "users-single-04"
			}
			list All_Branch_Admins
			{
				icon = "travel-world"
			}
			list All_Teams
			{
				icon = "travel-world"
			}
		}
		section  Configuration1
		{
			displayname= "Configuration"
			map Site_Locations
			{
				icon = "location-pin-copy"
				hide = true
			}
			summary Company_Details
			{
				icon = "business-factory"
			}
			summary Branches
			{
				icon = "business-hierarchy-53"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Branch_Address as "Branch Address"
								Email
								Mobile_Number as "Mobile Number"
								Branch_Name as "Branch Name"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on left swipe
									(
										"Add Building"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock3
						(
			 				layout type = -2
		     				title = "Branch Details"
							fields
							(
								Branch_Name as "Branch Name"
								Email
								Mobile_Number as "Mobile Number"
								Landline_Number as "Landline Number"
								Branch_Address as "Branch Address"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Add Building"
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			summary All_Buildings
			{
				icon = "business-building"
				quickview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				display type = auto
			 				layout type = 1
		     				title = "Overview"
							fields
							(
								Building_Name as "Building Name"
								Select_Floors as "Floors"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on left swipe
									(
										"Add Spot"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 19
		     				title = "Building Details"
							fields
							(
								Associated_Branch as "Associated Branch"
								Building_Name as "Building Name"
								Select_Floors as "Floors"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Add Spot"
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom Spots_Of_Buildings
			{
				icon = "location-crosshair"
			}
			list All_Assets
			{
				icon = "social-1-logo-reddit"
			}
		}
		section  Buildings
		{
			icon = "business-building"
			form  Add_Building
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
		}
		section  Gateways
		{
			icon = "tech-wifi-router"
			form  Add_Spot_Of_Building
			{
				layout = auto
				icon = "design-2-3d-29"
				hide = true
			}
		}
		section  Assets
		{
			icon = "social-1-logo-envato"
			form  Add_Asset
			{
				layout = auto
				icon = "shopping-mobile-card"
				hide = true
			}
		}
		section  Update_the_Current_Quantity_Of_Assets
		{
			displayname= "Update the Current Quantity Of Assets"
			icon = "social-1-logo-envato"
			form  Add_Asset_To_Spot
			{
				layout = auto
				icon = "social-1-logo-envato"
				hide = true
			}
			list Current_Asset_Quantity_Of_The_Gateway
			{
				icon = "business-laptop-71"
				hide = true
			}
		}
		section  Teams1
		{
			displayname= "Teams"
			form  Add_Team1
			{
				layout = auto
				icon = "users-multiple-11"
				hide = true
			}
		}
		section  Floors
		{
			form  Add_Floor
			{
				layout = auto
				icon = "tech-2-p-add"
				hide = true
			}
			list All_Floors
			{
				icon = "travel-world"
				hide = true
			}
		}
		section  Assign_Staff_Form
		{
			displayname= "Assign Staff Form"
			form  Assign_Staff_Form
			{
				layout = left
				hide = true
			}
		}
		section  Temperature_Update_Form
		{
			displayname= "Temperature Update Form"
			form  Temperature_Update_Form
			{
				layout = left
				hide = true
			}
		}
		section  Task_Complete_Form
		{
			displayname= "Task Complete Form"
			form  Task_Completion_Form
			{
				layout = auto
				icon = "design-todo"
				hide = true
			}
			list Task_Complete_Form_Report
			{
				icon = "design-todo"
				hide = true
			}
		}
		section  Task_Re_work_Form
		{
			displayname= "Task Re-work Form"
			form  Task_Re_work_Form
			{
				layout = auto
				icon = "design-todo"
				hide = true
			}
			list Task_Re_work_Form_Report
			{
				icon = "design-todo"
				hide = true
			}
		}
		customize
		{
        	layout = slidingpane
		 	icons style = outline
        	font = "lato"
            style = "3"
        	color options
        	{
             	color = green
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	tablet
	{
		customize
		{
        	layout = slidingpane
		 	icons style = outline
        	font = "default"
            style = "3"
        	color options
        	{
             	color = yellow
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	
}
