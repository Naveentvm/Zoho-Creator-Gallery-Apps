/*
 * Author       : wapope7431_asuflex
 * Generated on : 10-May-2023 16:03:37
 * Version      : 1.0
 */
 application "Laundry Management"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "Asia/Kolkata"
 	time format = "24-hr"
 	section Dashboard
	{
		icon = "ui-1-dashboard-half"
				 page Service_Usage_Details(sub_id) 
	 	 { 
 	 	 displayname = "Service Usage Details"

 	 	 icon = "business-scale" 

 	 	 hide =  true
	 	 Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dspZml id='zml_snippet' elementName=\"ZML Snippet\"\n>\n\t<![CDATA[htmlpage zml_snippet(sub_id)\ncontent\n&lt;%{\n\tif(input.sub_id != null)\n\t{\n\t\tsubs_id = sub_id.toLong();\n\t\tsub_rec = Add_New_Subscription[Subscription_Id == subs_id];\n\t\tdetails = thisapp.Details.Subscription_usage(subs_id);\n\t\tusage = details.get(&quot;Remaining_Usage&quot;);\n\t\tpickup = details.get(&quot;Pickup&quot;);\n\t\t%&gt;\n&lt;panel&gt;\n\t&lt;pr width=&apos;fill&apos; height=&apos;auto&apos;&gt;\n\t\t&lt;pc width=&apos;100%&apos; height=&apos;auto&apos;&gt;\n\t\t\t&lt;pr width=&apos;fill&apos; height=&apos;auto&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;100%&apos; height=&apos;auto&apos; padding=&apos;10px&apos; hAlign=&apos;center&apos; vAlign=&apos;middle&apos;&gt;\n\t\t\t\t\t&lt;text value=&apos;Subscription Details&apos; size=&apos;5&apos; color=&apos;#52D67C&apos; bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t\t&lt;pr width=&apos;fill&apos; height=&apos;auto&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;45%&apos; height=&apos;auto&apos;&gt;\n\t\t\t\t\t&lt;pr width=&apos;fill&apos; height=&apos;auto&apos;&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;40%&apos; height=&apos;auto&apos; padding=&apos;5px&apos; hAlign=&apos;right&apos; vAlign=&apos;middle&apos;&gt;\n\t\t\t\t\t\t\t&lt;text value=&apos;Sub Id :&apos; size=&apos;3&apos; color=&apos;#52D67C&apos; bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;60%&apos; height=&apos;auto&apos; padding=&apos;5px&apos; hAlign=&apos;left&apos; vAlign=&apos;middle&apos;&gt;\n\t\t\t\t\t\t\t&lt;text value=&apos;&lt;%=sub_rec.Subscription_Id%&gt;&apos; size=&apos;3&apos; color=&apos;#52D67C&apos; bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t\t&lt;pr width=&apos;fill&apos; height=&apos;auto&apos;&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;40%&apos; height=&apos;auto&apos; padding=&apos;5px&apos; hAlign=&apos;right&apos; vAlign=&apos;middle&apos;&gt;\n\t\t\t\t\t\t\t&lt;text value=&apos;Status :&apos; size=&apos;3&apos; color=&apos;#52D67C&apos; bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;60%&apos; height=&apos;auto&apos; padding=&apos;5px&apos; hAlign=&apos;left&apos; vAlign=&apos;middle&apos;&gt;\n\t\t\t\t\t\t\t&lt;text value=&apos;&lt;%=sub_rec.Status%&gt;&apos; size=&apos;3&apos; color=&apos;#52D67C&apos; bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t&lt;pc width=&apos;55%&apos; height=&apos;auto&apos;&gt;\n\t\t\t\t\t&lt;pr width=&apos;fill&apos; height=&apos;auto&apos;&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;auto&apos; height=&apos;auto&apos; padding=&apos;5px&apos; hAlign=&apos;right&apos; vAlign=&apos;middle&apos;&gt;\n\t\t\t\t\t\t\t&lt;text value=&apos;Remaining Usage :&apos; size=&apos;3&apos; color=&apos;#52D67C&apos; bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;auto&apos; height=&apos;auto&apos; padding=&apos;5px&apos;  hAlign=&apos;left&apos; vAlign=&apos;middle&apos;&gt;\n\t\t\t\t\t\t\t&lt;text value=&apos;&lt;%=usage%&gt;&apos; size=&apos;3&apos; color=&apos;#52D67C&apos; bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t\t&lt;pr width=&apos;fill&apos; height=&apos;auto&apos;&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;auto&apos; height=&apos;auto&apos; padding=&apos;5px&apos; hAlign=&apos;right&apos; vAlign=&apos;middle&apos;&gt;\n\t\t\t\t\t\t\t&lt;text value=&apos;Remaining Pickup :&apos; size=&apos;3&apos; color=&apos;#52D67C&apos; bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;auto&apos; height=&apos;auto&apos; padding=&apos;5px&apos; hAlign=&apos;left&apos; vAlign=&apos;middle&apos;&gt;\n\t\t\t\t\t\t\t&lt;text value=&apos;&lt;%=pickup%&gt;&apos; size=&apos;3&apos; color=&apos;#52D67C&apos; bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t&lt;\/pc&gt;\n\t&lt;\/pr&gt;\n&lt;\/panel&gt;\n&lt;%\n\t}\n\n}%&gt;]]>\n<\/dspZml>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Dashboard 
	 	 { 
 	 	 displayname = "Dashboard"

 	 	 icon = "ui-1-dashboard-half" 
	 	 Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"displayType\":\"card\",\"design\":\"fluid\",\"style\":\"padding-right:0px;padding-top:0px;padding-bottom:0px;padding-left:0px;\"}}'\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"25%\"\n   \t>\n\t<panel elementName=\"Panel\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#BCE0C2'\n\n    action = 'OpenReport'\n\t\tparameters = 'Delivery=Door%20Delivery' \n\t\tcomponentLinkName = 'In_Process'\n\t\ttarget = 'new-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#FFFFFF'\n\tbgColor = '#09B24D'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'shopping-delivery-time'\n\tsize = '32px'\n\tcornerRadius = '26px'\n\ticonType = 'solid'\n\/>\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#09B24D'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Delivery_Date is today &amp;&amp; Delivery_Type == &quot;Door Delivery&quot;'\n\t  value = 'thisapp.Place_New_Order.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Door Delivery Today'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#BDC9F3'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'Pending_Orders'\n\t\ttarget = 'new-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#FFFFFF'\n\tbgColor = '#6288EA'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'shopping-newsletter'\n\tsize = '32px'\n\tcornerRadius = '26px'\n\ticonType = 'solid'\n\/>\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#6288EA'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Order_Status == &quot;Pending&quot;'\n\t  value = 'thisapp.Place_New_Order.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'New Orders'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<panel elementName=\"Panel 2\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFCDBC'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'Pickup_Requests'\n\t\ttarget = 'new-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#FFFFFF'\n\tbgColor = '#FF7163'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'location-route-open'\n\tsize = '32px'\n\tcornerRadius = '26px'\n\ticonType = 'outline'\n\/>\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#FF7163'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Order_Status == &quot;Waiting For Staff&quot;'\n\t  value = 'thisapp.Place_New_Order.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Pickup Requests'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<panel elementName=\"Panel 3\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFBCC1'\n\n    action = 'OpenReport'\n\t\tparameters = 'Expiry_Date=${zoho.currentdate}' \n\t\tcomponentLinkName = 'All_Subscriptions'\n\t\ttarget = 'new-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#FFFFFF'\n\tbgColor = '#F30044'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'ui-1-trash'\n\tsize = '32px'\n\tcornerRadius = '26px'\n\ticonType = 'solid'\n\/>\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#F30044'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Expiry_Date is today'\n\t  value = 'thisapp.Add_New_Subscription.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Expiring Today'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<chart \n\telementName=\"Chart\"\n\n\t\n\ttitle = 'Services And Subscribers'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Column'\n\txtitle = 'Services'\n\tytitle = 'Subscription Count'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Add_New_Subscription'\n\txfield = 'Service.Service_Name'\n\tyfields = 'count:Subscription_Id'\n\t\tDelugeCriteria = 'Status != &quot;Cancelled&quot;'\n\/>\n\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<chart \n\telementName=\"Chart 1\"\n\n\t\n\ttitle = 'This Month Orders'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Pie'\n\txtitle = 'Services'\n\tytitle = 'Order Counts'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme2'\n\tlegendPos = 'right.center'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Place_New_Order'\n\txfield = 'Service.Service_Name'\n\tyfields = 'count:Order_Id'\n\t\tDelugeCriteria = 'Added_Time in this month'\n\/>\n\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<chart \n\telementName=\"Chart 2\"\n\n\t\n\ttitle = 'This Year Orders'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Donut'\n\txtitle = 'Services'\n\tytitle = 'Order Count'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme1'\n\tlegendPos = 'right.center'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Place_New_Order'\n\txfield = 'Service.Service_Name'\n\tyfields = 'count:Order_Id'\n\t\tDelugeCriteria = 'Added_Time in this year'\n\/>\n\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<chart \n\telementName=\"Chart 3\"\n\n\t\n\ttitle = 'Month&apos;s Package Income'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Column'\n\txtitle = 'Services'\n\tytitle = 'Amount'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme3'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Add_Transaction'\n\txfield = 'Service.Service_Name'\n\tyfields = 'sum:Total_Amount'\n\t\tDelugeCriteria = 'Added_Time in this month'\n\/>\n\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<chart \n\telementName=\"Chart 4\"\n\n\t\n\ttitle = 'Month&apos;s Ordinary Income'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Column'\n\txtitle = 'Services'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme4'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Place_New_Order'\n\txfield = 'Service.Service_Name'\n\tyfields = 'sum:Total_Amount'\n\t\tDelugeCriteria = 'Added_Time in this month &amp;&amp; Order_Type == &quot;Ordinary&quot;'\n\/>\n\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Orders
	{
		icon = "shopping-list"
		form Place_New_Order
		{
			displayname = "Place New Order"
			success message = "New Order Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Customer
			(
				type = picklist	
				values  = Add_Customer.ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name]
				allow new entries = true
				[
					displayname = "Add New Customer"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Service
			(
				type = picklist	
				values  = Add_Service.ID
    			displayformat = [Service_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Order_Type
			(
				type = picklist
				displayname = "Order Type"
				values = {"Package","Ordinary"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			plain2
			(
    			type = plaintext
				value = ""
	 			row = 1
	 			column = 1   
				width = medium
			)
			Tag_Id
			(
    			type = text
				displayname = "Tag Id"
    			description
    			[
    				type = help_text
    			 	message = "Any label to identify order and customer."
    			]
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Order_Status
			(
				type = picklist
				displayname = "Order Status"
				values = {"Waiting For Staff","Pickup Pending","Pending","In Process","Ready For Delivery","Delivered"}
				initial value = "Pending"
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Order_Details
			(
				type = grid
				displayname = "Order Details"
				values  = Add_Order_Details.ID
    			bidirectional = Order_Id
	 			row = 2
	 			column = 1   
				width = medium
			)
			Charges
			(
				type = section
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			Subtotal
			(
				type = USD
				initial value = 0
	 			row = 3
	 			column = 1   
				width = medium
			)
			Tax_Amount
			(
				displayname = "Tax Amount"
				type = USD
				initial value = 0
	 			row = 3
	 			column = 1   
				width = medium
			)
			Total_Amount
			(
				displayname = "Total Amount"
				type = USD
				initial value = 0
	 			row = 3
	 			column = 1   
				width = medium
			)
			Pickup_Charge
			(
				displayname = "Pickup Charge"
				type = USD
				initial value = 0
	 			row = 3
	 			column = 2   
				width = medium
			)
			Delivery_Charge
			(
				displayname = "Delivery Charge"
				type = USD
				initial value = 0
	 			row = 3
	 			column = 2   
				width = medium
			)
			Pickup
			(
				type = section
				displayname = "Pickup & Delivery"
				visibility = true
	 			row = 4
	 			column = 0   
				width = medium
			)
			must have Pickup_Type
			(
				type = picklist
				displayname = "Pickup Type"
				values = {"Door Pickup","Self Bring"}
	 			row = 4
	 			column = 1   
				width = medium
			)
			Pickup_Address
			(
    			type = address
				displayname = "Pickup Address"
     			capture_coordinates = true
     			adjust_using_map = true
     			address_line_11
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_21
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city1
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province1
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code1
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country1
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude1
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude1
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 4
	 			column = 1   
				width = medium
			)
			Preferred_Pickup_Time
			(
    			type = datetime
				displayname = "Preferred Pickup Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 4
	 			column = 1   
				width = medium
			)
			Pickup_Staff
			(
				type = picklist	
				displayname = "Pickup Staff"
				values  = Add_Delivery_Staff.ID
    			displayformat = [" " + Name.prefix + " " + Name.first_name + " " + Name.last_name + " " + Name.suffix]
				sortorder = ascending
	 			row = 4
	 			column = 1   
				width = medium
			)
			Customer_Signature1
			(
    			type = signature
				displayname = "Customer Signature"
    			description
    			[
    				type = help_text
    			 	message = "By entering your signature here. you agree that your products are picked up."
    			]
	 			row = 4
	 			column = 1   
				width = medium
			)
			must have Delivery_Type
			(
				type = picklist
				displayname = "Delivery Type"
				values = {"Door Delivery","Customer Pickup"}
	 			row = 4
	 			column = 2   
				width = medium
			)
			Delivery_Address
			(
    			type = address
				displayname = "Delivery Address"
     			capture_coordinates = true
     			adjust_using_map = true
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 4
	 			column = 2   
				width = medium
			)
			Delivery_Date
			(
    			type = date
				displayname = "Delivery Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 4
	 			column = 2   
				width = medium
			)
			Delivery_Staff
			(
				type = picklist	
				displayname = "Delivery Staff"
				values  = Add_Delivery_Staff.ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 4
	 			column = 2   
				width = medium
			)
			Customer_Signature
			(
    			type = signature
				displayname = "Customer Signature"
    			description
    			[
    				type = help_text
    			 	message = "By entering your sign here, you are agree that your products are delivered."
    			]
	 			row = 4
	 			column = 2   
				width = medium
			)
			Hidden_Fields
			(
				type = section
				displayname = "Hidden Fields"
				visibility = true
	 			row = 5
	 			column = 0   
				width = medium
			)
			Product_Quantity
			(
				type = number
				displayname = "Product Quantity"
				initial value = 0
	 			row = 5
	 			column = 1   
				width = medium
			)
			Pickup_Staff_User
			(
    			type = picklist
				displayname = "Pickup Staff User"
				module = users
				displayformat = [username]
	 			row = 5
	 			column = 1   
				width = medium
			)
			Delivery_Staff_User
			(
    			type = picklist
				displayname = "Delivery Staff User"
				module = users
				displayformat = [emailid]
	 			row = 5
	 			column = 1   
				width = medium
			)
			Order_Id
			(
    			type = autonumber
				displayname = "Order Id"
				start index = 1
	 			row = 5
	 			column = 1   
				width = medium
			)
			Organisation
			(
				type = picklist	
				values  = Add_Organisation_Info.ID
    			displayformat = [Organisation_Name]
				sortorder = ascending
	 			row = 5
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-list"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		print template
			{
				Order_Invoice
				{
						displayname = "Order Invoice"
						content = {"layout":"1","pageNumberOption":null,"orientation":"null","isFooterEnabled":false,"containerStyle":"","mainLayout":[{"elements":[{"type":"columns","element":{"split":"34,33,33","id":"elem_16712b537991","elemStyle":"background-color: rgb(245, 245, 245); padding: 10px 10px 0 10px","collayouts":[{"colElements":[]},{"colElements":[{"type":"text","element":{"id":"elem_16712b99ee1","fields":[],"content":"<div style=\"\"><br /><\/div>"}},{"type":"text","element":{"id":"elem_167593e91bf","fields":[],"content":"<div style=\"\"><br /><br /><\/div>"}},{"type":"text","element":{"id":"elem_16712b53799","fields":[],"content":"<div style=\"\"><p style=\"text-align: center\"><b><font size=\"7\">INVOICE<\/font><\/b><\/p><p><b><font size=\"7\"><br /><\/font><\/b><\/p><\/div>"}}]},{"colElements":[{"type":"columns","element":{"split":"91,9","id":"elem_167593d91151","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_167593e56bb","fields":[],"content":"<div style=\"\"><br /> <br />  <br /><\/div>"}},{"type":"text","element":{"Fields":[{"Related_Fields":["Address"],"Label_Name":"Organisation"},{"Related_Fields":["Organisation_Name"],"Label_Name":"Organisation"}],"content":"<div style=\"outline: none\"><p style=\"text-align: justify\"><span field-item=\"Organisation.Organisation_Name\" style=\"font-size: 16px; text-decoration-style: solid; text-decoration-color: rgb(0, 0, 0)\"><b>${Organisation.Organisation_Name}<\/b><\/span><span style=\"font-size: 16px; text-decoration-style: solid; text-decoration-color: rgb(0, 0, 0)\">&nbsp;<\/span><br /><\/p><p style=\"text-align: justify\"><span style=\"color: rgb(0, 0, 0); font-family: ProximaNova, Arial, sans-serif; font-size: 16px; font-weight: 400; font-style: normal\"><span field-item=\"Organisation.Address\">${Organisation.Address}<\/span><span style=\"color: rgb(0, 0, 0); font-family: ProximaNova, Arial, sans-serif; font-size: 16px; font-weight: 400; font-style: normal\">&nbsp;<\/span><br /><\/span><\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_167593d9116","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}}]}]}}]}]}},{"type":"text","element":{"id":"elem_16712cc65db","fields":[],"content":"<div style=\"\"><br /><\/div>"}},{"type":"columns","element":{"split":"62,36,2","id":"elem_16712cca6341","elemStyle":"padding:10px","collayouts":[{"colElements":[{"type":"columns","element":{"split":"100","id":"elem_167594ebbd11","elemStyle":"padding:10px","collayouts":[{"colElements":[{"type":"text","element":{"Fields":[{"Related_Fields":["Address"],"Label_Name":"Customer"},{"Related_Fields":["Name"],"Label_Name":"Customer"}],"content":"<div style=\"\"><p>\n  <font size=\"3\"><b style=\"\">Bill To<\/b><\/font>\n<\/p>\n<p>\n  <font size=\"2\">${Customer.Name}<\/font>\n<\/p>\n<p>${Customer.Address}<\/p><\/div>"}},{"type":"text","element":{"id":"elem_167594ebbd1","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}}]}]}}]},{"colElements":[{"type":"columns","element":{"split":"100","id":"elem_16712d5046e1","elemStyle":"padding:10px","collayouts":[{"colElements":[{"type":"text","element":{"Fields":[{"Label_Name":"Delivery_Date"},{"Label_Name":"Order_Id"},{"Label_Name":"Service"}],"content":"<div style=\"\"><p style=\"text-align: justify\"><font size=\"3\"><b>Date&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;:&nbsp; &nbsp; &nbsp; &nbsp;<\/b>${Delivery_Date}<\/font><\/p>\n<p style=\"text-align: justify\"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><font size=\"3\"><span><span><span><span><b>Order#&nbsp; &nbsp; &nbsp;:&nbsp; &nbsp; &nbsp; &nbsp;<\/b><span>${Order_Id}<\/span><\/span><\/span><\/span><\/span><\/font><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/p>\n<p style=\"text-align: justify\"><font size=\"3\"><b style=\"\">Service&nbsp; &nbsp; &nbsp;:&nbsp; &nbsp; &nbsp; &nbsp;<\/b>${Service}<\/font><\/p><\/div>"}}]}]}}]},{"colElements":[{"type":"text","element":{"id":"elem_16759453e9d","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}}]}]}},{"type":"text","element":{"id":"elem_16712d6b76b","fields":[],"content":"<div style=\"\"><br /><\/div>"}},{"id":"elem_41335745283953205","type":"lookupfields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","related_Form":"Add_Order_Details","labelText":"Order Details","wrapperStyle":"","labelStyle":"width: 50%; display: none","Label_Name":"Order_Details","refFields":[{"valueStyle":"text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em","fieldLayoutType":"2","labelText":"Product","labelStyle":"width: 25%; text-align: left; font-weight: bold; border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230)","Label_Name":"Product"},{"valueStyle":"text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em","fieldLayoutType":"2","labelText":"Cost","labelStyle":"width: 25%; text-align: left; font-weight: bold; border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230)","Label_Name":"Unit_Price"},{"valueStyle":"text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em","fieldLayoutType":"2","labelText":"Quantity","labelStyle":"width: 25%; text-align: left; font-weight: bold; border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230)","Label_Name":"Quantity"},{"valueStyle":"text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em","fieldLayoutType":"2","labelText":"Amount","labelStyle":"width: 25%; text-align: left; font-weight: bold; border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230)","Label_Name":"Amount"}],"labelTextStyle":"font-weight: bold"}},{"type":"columns","element":{"split":"51,45,4","id":"elem_16712db6b971","elemStyle":"background-color: rgb(240, 240, 240); border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230); padding: 20px 0","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_16712db6b97","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}}]},{"colElements":[{"id":"elem_41335745283973147","type":"fields","element":{"valueStyle":"width: 25%","valueTextStyle":"text-align: right; font-size: 16px","fieldLayoutType":"2","labelText":"Subtotal","wrapperStyle":"","labelStyle":"width: 75%; background-color: rgb(240, 240, 240)","Label_Name":"Subtotal","labelTextStyle":"font-weight: bold; text-align: right; font-size: 16px"}},{"id":"elem_41335745283975814","type":"fields","element":{"valueStyle":"width: 25%","valueTextStyle":"text-align: right; font-size: 16px","fieldLayoutType":"2","labelText":"Tax Amount","wrapperStyle":"","labelStyle":"width: 75%; background-color: rgb(240, 240, 240)","Label_Name":"Tax_Amount","labelTextStyle":"font-weight: bold; text-align: right; font-size: 16px"}},{"id":"elem_41335745283978127","type":"fields","element":{"valueStyle":"width: 25%","valueTextStyle":"text-align: right; font-size: 16px","fieldLayoutType":"2","labelText":"Pickup Charge","wrapperStyle":"","labelStyle":"width: 75%; background-color: rgb(240, 240, 240)","Label_Name":"Pickup_Charge","labelTextStyle":"text-align: right; font-weight: bold; font-size: 16px"}},{"id":"elem_41335745283980339","type":"fields","element":{"valueStyle":"width: 25%","valueTextStyle":"text-align: right; font-size: 16px","fieldLayoutType":"2","labelText":"Delivery Charge","wrapperStyle":"","labelStyle":"width: 75%; background-color: rgb(240, 240, 240)","Label_Name":"Delivery_Charge","labelTextStyle":"text-align: right; font-weight: bold; font-size: 16px"}},{"id":"elem_41335745283982412","type":"fields","element":{"valueStyle":"width: 25%","valueTextStyle":"text-align: right; font-size: 16px","fieldLayoutType":"2","labelText":"Total Amount","wrapperStyle":"","labelStyle":"width: 75%; background-color: rgb(240, 240, 240)","Label_Name":"Total_Amount","labelTextStyle":"text-align: right; font-weight: bold; font-size: 16px"}}]},{"colElements":[{"type":"text","element":{"id":"elem_16712db7c1c","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}}]}]}},{"type":"columns","element":{"split":"51,45,4","id":"elem_167131b0b001","elemStyle":"background-color: rgb(255, 255, 255); padding: 20px 0px","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_167131b0b01","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}}]},{"colElements":[]},{"colElements":[{"type":"text","element":{"id":"elem_167131b1296","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}}]}]}},{"type":"text","element":{"id":"elem_167131e09dd","fields":[],"content":"<div style=\"\"><br /><br /><\/div>"}},{"type":"columns","element":{"split":"3,97","id":"elem_167594f23ca1","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_167594f23ca","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}}]},{"colElements":[]}]}},{"type":"text","element":{"id":"elem_167131fe827","fields":[],"content":"<div style=\"\"><br /><br />  <\/div>"}},{"type":"text","element":{"id":"elem_16713202b12","fields":[],"content":"<div style=\"\"><hr style=\"border-color: rgb(240, 240, 240)\" /><\/div>"}},{"type":"text","element":{"id":"elem_1671320a380","fields":[],"content":"<div style=\"\"><p style=\"text-align: center\"><br /><\/p>  <br /><\/div>"}}],"id":1}],"resize":"A4","themeFont":"ntent-wrapper builderContent builder_body_outer_wrapper recordSummarybuilder","templateStyle":"text-align: left; width: 793.7px; margin: 0px; padding: 30px","isHeaderEnabled":false,"version":"2"}
				}
			}
		}
		list All_Order_Details
		{
			displayName = "All Order Details"
   			hide = true
			show all rows from Add_Order_Details    
			(
				Product
				Unit_Price as "Unit Price"
				Quantity
				Order_Id as "Order Id"
				Amount
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Product
							Unit_Price as "Unit Price"
							Quantity
							Order_Id as "Order Id"
							Amount
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Product
							Unit_Price as "Unit Price"
							Quantity
							Order_Id as "Order Id"
							Amount
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Pending_Orders
		{
			displayName = "Pending Orders"
			show all rows from Place_New_Order  [Order_Status == "Pending"]  
			(
				Order_Id as "Order Id"
				Order_Type as "Order Type"
				Customer
				Service
				custom action "Start Process"
				(
	  			workflow = Start_Process
				show action in edit record menu = true
				column header = "Start Process"
				condition = (Order_Status == "Pending")
				)
				Order_Details as "Order Details"
				(
					field = Order_Details.Product + " " + Order_Details.Quantity
				)
				Product_Quantity as "Product Quantity"
			)
			options
			(
				icon = "ui-2-hourglass"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
							Service
							Order_Type as "Order Type"
							Order_Details.Product as "Order Details"
				"Start Process"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Service
							Order_Type as "Order Type"
							Product_Quantity as "Product Quantity"
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Order Details"
		     			related field = Order_Details
						fields
						(
							Product
							Quantity
							Unit_Price as "Unit Price"
							Amount
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Customer"
		     			related field = Customer
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
							Address
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list In_Process
		{
			displayName = "In-Process"
			show all rows from Place_New_Order  [Order_Status == "In Process"]  
			(
				custom action "Ready For Delivery"
				(
	  			workflow = Ready_For_Delivery
				show action in edit record menu = true
				column header = "Ready For Delivery"
				condition = (Order_Status == "In Process")
				)
				Subtotal
				Tax_Amount as "Tax Amount"
				Pickup_Charge as "Pickup Charge"
				Delivery_Charge as "Delivery Charge"
				Total_Amount as "Total Amount"
				Order_Id as "Order Id"
				Tag_Id as "Tag Id"
				Order_Type as "Order Type"
				Service
				Customer
				Delivery_Date as "Delivery Date"
				Delivery_Type as "Delivery Type"
				Delivery_Address  as "Delivery Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Delivery_Staff as "Delivery Staff"
			)
			options
			(
				icon = "food-fishbone"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
							Service
							Order_Type as "Order Type"
							Tag_Id as "Tag Id"
							Delivery_Date as "Delivery Date"
							Delivery_Type as "Delivery Type"
				"Ready For Delivery"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Service
							Order_Type as "Order Type"
							Tag_Id as "Tag Id"
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Order Details"
		     			related field = Order_Details
						fields
						(
							Product
							Quantity
							Unit_Price as "Unit Price"
							Amount
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Charges"
						fields
						(
							Subtotal
							Tax_Amount as "Tax Amount"
							Pickup_Charge as "Pickup Charge"
							Delivery_Charge as "Delivery Charge"
							Total_Amount as "Total Amount"
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Delivery Details"
						fields
						(
							Delivery_Date as "Delivery Date"
							Delivery_Type as "Delivery Type"
							Delivery_Address as "Delivery Address"
							Delivery_Staff as "Delivery Staff"
						)
					)
					datablock5
					(
			 			layout type = -2
		     			title = "Customer"
		     			related field = Customer
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
							Address
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Orders
		{
			displayName = "All Orders"
			print template = Order_Invoice
			show all rows from Place_New_Order    
			(
				Order_Id as "Order Id"
				Customer
				Service
				Order_Type as "Order Type"
				Subtotal
				Tax_Amount as "Tax Amount"
				Total_Amount as "Total Amount"
				Order_Status as "Order Status"
				Pickup_Type as "Pickup Type"
				Delivery_Type as "Delivery Type"
				Tag_Id as "Tag Id"
			)
			options
			(
				icon = "shopping-box"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
							Service
							Order_Type as "Order Type"
							Order_Status as "Order Status"
							Tag_Id as "Tag Id"
							Pickup_Type as "Pickup Type"
							Delivery_Type as "Delivery Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
							Service
							Order_Type as "Order Type"
							Subtotal
							Tax_Amount as "Tax Amount"
							Total_Amount as "Total Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary My_Orders
		{
			displayName = "My Orders"
			show all rows from Place_New_Order    
			(
				Subtotal
				Tax_Amount as "Tax Amount"
				Pickup_Charge as "Pickup Charge"
				Delivery_Charge as "Delivery Charge"
				Total_Amount as "Total Amount"
				Delivery_Type as "Delivery Type"
				Delivery_Date as "Delivery Date"
				Delivery_Address  as "Delivery Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Customer_Signature as "Customer Signature"
				Order_Id as "Order Id"
				Tag_Id as "Tag Id"
				Order_Status as "Order Status"
				Service
				Order_Type as "Order Type"
				Delivery_Staff.Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Delivery_Staff.Phone_Number as "Phone"
				Pickup_Type as "Pickup Type"
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "shopping-pos"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Pickup_Type as "Pickup Type"
							Order_Type as "Order Type"
							Service
							Order_Status as "Order Status"
							Delivery_Type as "Delivery Type"
							Delivery_Date as "Delivery Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock3
					(
			 			layout type = -2
		     			title = "Order"
						fields
						(
							Order_Id as "Order Id"
							Service
							Order_Type as "Order Type"
							Order_Status as "Order Status"
							Tag_Id as "Tag Id"
						)
					)
					datablock4
					(
			 			layout type = -1
		     			title = "Order Details"
		     			related field = Order_Details
						fields
						(
							Product
							Quantity
							Unit_Price as "Unit Price"
							Amount
						)
					)
					datablock5
					(
			 			layout type = -2
		     			title = "Rate Details"
						fields
						(
							Subtotal
							Tax_Amount as "Tax Amount"
							Pickup_Charge as "Pickup Charge"
							Delivery_Charge as "Delivery Charge"
							Total_Amount as "Total Amount"
						)
					)
					datablock6
					(
			 			layout type = -2
		     			title = "Delivery"
						fields
						(
							Delivery_Type as "Delivery Type"
							Delivery_Date as "Delivery Date"
							Delivery_Address as "Delivery Address"
							Customer_Signature as "Customer Signature"
						)
					)
					datablock7
					(
			 			layout type = -2
		     			title = "Delivery Staff Details"
						fields
						(
							Delivery_Staff.Name as "Name"
							Delivery_Staff.Phone_Number as "Phone"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Pickup
	{
		icon = "travel-pickaxe"
		list Pickup_Requests
		{
			displayName = "Pickup Requests"
			show all rows from Place_New_Order  [Pickup_Type == "Door Pickup" && Order_Status == "Waiting For Staff"]  
			(
				Customer
				Service
				Order_Type as "Order Type"
				Tag_Id as "Tag Id"
				Subtotal
				Tax_Amount as "Tax Amount"
				Total_Amount as "Total Amount"
				Pickup_Charge as "Pickup Charge"
				Delivery_Charge as "Delivery Charge"
				Pickup_Type as "Pickup Type"
				Pickup_Address  as "Pickup Address"
	 			(
	      			displayformat = [address_line_11+""+address_line_21+""+district_city1+""+state_province1+""+postal_Code1+""+country1]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				custom action "Assign Pickup"
				(
	  			workflow = Assign_Pickup
				show action in edit record menu = true
				column header = "Assign Pickup"
				condition = (Order_Status == "Waiting For Staff")
				)
				Preferred_Pickup_Time as "Preferred Pickup Time"
				Pickup_Staff as "Pickup Staff"
				Customer_Signature1 as "Customer Signature"
				Delivery_Type as "Delivery Type"
				Delivery_Address  as "Delivery Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Delivery_Date as "Delivery Date"
				Delivery_Staff as "Delivery Staff"
				Customer_Signature as "Customer Signature"
				Product_Quantity as "Product Quantity"
				Pickup_Staff_User as "Pickup Staff User"
				Delivery_Staff_User as "Delivery Staff User"
				Order_Status as "Order Status"
				Order_Id as "Order Id"
				Organisation
			)
			options
			(
				icon = "tech-2-l-system-update"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
							Service
							Order_Type as "Order Type"
							Preferred_Pickup_Time as "Preferred Pickup Time"
							Pickup_Address as "Pickup Address"
				"Assign Pickup"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Customer
							Service
							Order_Type as "Order Type"
							Tag_Id as "Tag Id"
							Subtotal
							Tax_Amount as "Tax Amount"
							Total_Amount as "Total Amount"
							Pickup_Charge as "Pickup Charge"
							Delivery_Charge as "Delivery Charge"
							Pickup_Type as "Pickup Type"
							Pickup_Address as "Pickup Address"
							Preferred_Pickup_Time as "Preferred Pickup Time"
							Pickup_Staff as "Pickup Staff"
							Customer_Signature1 as "Customer Signature"
							Delivery_Type as "Delivery Type"
							Delivery_Address as "Delivery Address"
							Delivery_Date as "Delivery Date"
							Delivery_Staff as "Delivery Staff"
							Customer_Signature as "Customer Signature"
							Product_Quantity as "Product Quantity"
							Pickup_Staff_User as "Pickup Staff User"
							Delivery_Staff_User as "Delivery Staff User"
							Order_Status as "Order Status"
							Order_Id as "Order Id"
							Organisation
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		calendar Pickup_Calendar
		{
			displayName = "Pickup Calendar"
			show all rows from Place_New_Order    
			(
				Organisation
				Customer
				Order_Type as "Order Type"
				Service
				Tag_Id as "Tag Id"
				Order_Id as "Order Id"
				Order_Status as "Order Status"
				Product_Quantity as "Product Quantity"
				Subtotal
				Tax_Amount as "Tax Amount"
				Total_Amount as "Total Amount"
				Pickup_Charge as "Pickup Charge"
				Delivery_Charge as "Delivery Charge"
				Preferred_Pickup_Time as "Preferred Pickup Time"
				Pickup_Staff as "Pickup Staff"
				Customer_Signature1 as "Customer Signature"
				Pickup_Address  as "Pickup Address"
	 			(
	      			displayformat = [address_line_11+""+address_line_21+""+district_city1+""+state_province1+""+postal_Code1+""+country1]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Delivery_Type as "Delivery Type"
				Delivery_Date as "Delivery Date"
				Delivery_Staff as "Delivery Staff"
				Customer_Signature as "Customer Signature"
				Delivery_Address  as "Delivery Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Pickup_Staff_User as "Pickup Staff User"
				Delivery_Staff_User as "Delivery Staff User"
			)
			options
			(
				display type = month
				week start day = sunday
				display field = Order_Id
				start date = Preferred_Pickup_Time
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "ui-1-calendar-60"
			)
			conditional formatting
			(
				"Pending"
				{
				condition = (Order_Status == "Pickup Pending")
				format = "color:#ffffff;background-color:#e84c3d;"
				}
				"Others"
				{
				condition = (Order_Status != "Pickup Pending")
				format = "color:#000000;background-color:#1bbc9b;"
				}
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Organisation
							Customer
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Organisation
							Customer
							Order_Type as "Order Type"
							Service
							Tag_Id as "Tag Id"
							Order_Id as "Order Id"
							Order_Status as "Order Status"
							Product_Quantity as "Product Quantity"
							Subtotal
							Tax_Amount as "Tax Amount"
							Total_Amount as "Total Amount"
							Pickup_Charge as "Pickup Charge"
							Delivery_Charge as "Delivery Charge"
							Preferred_Pickup_Time as "Preferred Pickup Time"
							Pickup_Staff as "Pickup Staff"
							Customer_Signature1 as "Customer Signature"
							Pickup_Address as "Pickup Address"
							Delivery_Type as "Delivery Type"
							Delivery_Date as "Delivery Date"
							Delivery_Staff as "Delivery Staff"
							Customer_Signature as "Customer Signature"
							Delivery_Address as "Delivery Address"
							Pickup_Staff_User as "Pickup Staff User"
							Delivery_Staff_User as "Delivery Staff User"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		map Pickup_Map
		{
			displayName = "Pickup Map"
			show all rows from Place_New_Order  [Order_Status == "Pickup Pending" && Pickup_Staff.Email == zoho.loginuserid]  
			(
				Customer
				Order_Type as "Order Type"
				Service
				Order_Id as "Order Id"
				Product_Quantity as "Product Quantity"
				Preferred_Pickup_Time as "Preferred Pickup Time"
				Pickup_Staff as "Pickup Staff"
				Pickup_Address  as "Pickup Address"
	 			(
	      			displayformat = [address_line_11+""+address_line_21+""+district_city1+""+state_province1+""+postal_Code1+""+country1]
	      			enable = Link_to_Map,Show_As_Text
	 			)
			)
			options
			(
	 			display field = Pickup_Address
	 	 		radius = 100 Miles
		 		icon = "users-2-pin"
	 		)
			custom actions
			(
				"Pickup Done"
				(
	  			workflow = Pickup_Done
				show action in view header = true
				show action in edit record menu = true
				condition = (Order_Status == "Pickup Pending")
				)
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								"Pickup Done"
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
							Service
							Order_Type as "Order Type"
							Product_Quantity as "Product Quantity"
							Preferred_Pickup_Time as "Preferred Pickup Time"
							Pickup_Staff as "Pickup Staff"
							Pickup_Address as "Pickup Address"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Pickup Done"
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Pickups
		{
			displayName = "My Pickups"
			show all rows from Place_New_Order  [Pickup_Staff.Email == zoho.loginuserid]  
			(
				Organisation
				Customer
				Order_Type as "Order Type"
				Service
				Tag_Id as "Tag Id"
				Order_Id as "Order Id"
				Order_Status as "Order Status"
				Product_Quantity as "Product Quantity"
				Subtotal
				Tax_Amount as "Tax Amount"
				Total_Amount as "Total Amount"
				Pickup_Charge as "Pickup Charge"
				Delivery_Charge as "Delivery Charge"
				Preferred_Pickup_Time as "Preferred Pickup Time"
				Pickup_Staff as "Pickup Staff"
				Customer_Signature1 as "Customer Signature"
				Pickup_Address  as "Pickup Address"
	 			(
	      			displayformat = [address_line_11+""+address_line_21+""+district_city1+""+state_province1+""+postal_Code1+""+country1]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Delivery_Type as "Delivery Type"
				Delivery_Date as "Delivery Date"
				Delivery_Staff as "Delivery Staff"
				Customer_Signature as "Customer Signature"
				Delivery_Address  as "Delivery Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Pickup_Staff_User as "Pickup Staff User"
				Delivery_Staff_User as "Delivery Staff User"
			)
			options
			(
				icon = "users-man-glasses"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
							Service
							Preferred_Pickup_Time as "Preferred Pickup Time"
							Pickup_Address as "Pickup Address"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Organisation
							Customer
							Order_Type as "Order Type"
							Service
							Tag_Id as "Tag Id"
							Order_Id as "Order Id"
							Order_Status as "Order Status"
							Product_Quantity as "Product Quantity"
							Subtotal
							Tax_Amount as "Tax Amount"
							Total_Amount as "Total Amount"
							Pickup_Charge as "Pickup Charge"
							Delivery_Charge as "Delivery Charge"
							Preferred_Pickup_Time as "Preferred Pickup Time"
							Pickup_Staff as "Pickup Staff"
							Customer_Signature1 as "Customer Signature"
							Pickup_Address as "Pickup Address"
							Delivery_Type as "Delivery Type"
							Delivery_Date as "Delivery Date"
							Delivery_Staff as "Delivery Staff"
							Customer_Signature as "Customer Signature"
							Delivery_Address as "Delivery Address"
							Pickup_Staff_User as "Pickup Staff User"
							Delivery_Staff_User as "Delivery Staff User"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Delivery
	{
		icon = "shopping-delivery"
		calendar Delivery_Calendar
		{
			displayName = "Delivery Calendar"
			show all rows from Place_New_Order    
			(
				Order_Id as "Order Id"
				Customer
				Service
				Order_Type as "Order Type"
				Order_Status as "Order Status"
				Tag_Id as "Tag Id"
				Product_Quantity as "Product Quantity"
				Subtotal
				Tax_Amount as "Tax Amount"
				Pickup_Charge as "Pickup Charge"
				Delivery_Charge as "Delivery Charge"
				Total_Amount as "Total Amount"
				Delivery_Type as "Delivery Type"
				Delivery_Date as "Delivery Date"
				Delivery_Address  as "Delivery Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Delivery_Staff as "Delivery Staff"
				Customer_Signature as "Customer Signature"
			)
			options
			(
				display type = month
				week start day = sunday
				display field = Order_Id
				start date = Delivery_Date
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "ui-1-calendar-60"
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
							Service
							Order_Type as "Order Type"
							Order_Status as "Order Status"
							Tag_Id as "Tag Id"
							Product_Quantity as "Product Quantity"
							Subtotal
							Tax_Amount as "Tax Amount"
							Pickup_Charge as "Pickup Charge"
							Delivery_Charge as "Delivery Charge"
							Total_Amount as "Total Amount"
							Delivery_Type as "Delivery Type"
							Delivery_Date as "Delivery Date"
							Delivery_Address as "Delivery Address"
							Delivery_Staff as "Delivery Staff"
							Customer_Signature as "Customer Signature"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Customer_Pickups
		{
			displayName = "Customer Pickups"
			show all rows from Place_New_Order  [Order_Status == "Ready For Delivery" && Delivery_Type == "Customer Pickup"]  
			(
				Product_Quantity as "Product Quantity"
				custom action "Delivered"
				(
	  			workflow = Delivered
				show action in edit record menu = true
				column header = "Delivered"
				condition = (Order_Status == "Ready For Delivery")
				)
				Subtotal
				Tax_Amount as "Tax Amount"
				Pickup_Charge as "Pickup Charge"
				Delivery_Charge as "Delivery Charge"
				Total_Amount as "Total Amount"
				Order_Id as "Order Id"
				Tag_Id as "Tag Id"
				Order_Type as "Order Type"
				Service
				Customer
				Delivery_Date as "Delivery Date"
				Delivery_Type as "Delivery Type"
			)
			sort by
			(
				Delivery_Type ascending
			)
			options
			(
				icon = "envir-car"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
							Service
							Product_Quantity as "Product Quantity"
							Order_Type as "Order Type"
							Tag_Id as "Tag Id"
				"Delivered"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Service
							Order_Type as "Order Type"
							Tag_Id as "Tag Id"
							Product_Quantity as "Product Quantity"
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Order Details"
		     			related field = Order_Details
						fields
						(
							Product
							Quantity
							Unit_Price as "Unit Price"
							Amount
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Customer"
		     			related field = Customer
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
							Address
						)
					)
					datablock5
					(
			 			layout type = -2
		     			title = "Charges"
						fields
						(
							Subtotal
							Tax_Amount as "Tax Amount"
							Pickup_Charge as "Pickup Charge"
							Delivery_Charge as "Delivery Charge"
							Total_Amount as "Total Amount"
						)
					)
					datablock6
					(
			 			layout type = -2
		     			title = "Delivery"
						fields
						(
							Delivery_Date as "Delivery Date"
							Delivery_Type as "Delivery Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		map Delivery_Map
		{
			displayName = "Delivery Map"
			show all rows from Place_New_Order  [Order_Status == "Ready for Delivery" && Delivery_Type == "Door Delivery" && Delivery_Staff.Email == zoho.loginuserid]  
			(
				Subtotal
				Tax_Amount as "Tax Amount"
				Pickup_Charge as "Pickup Charge"
				Delivery_Charge as "Delivery Charge"
				Total_Amount as "Total Amount"
				Order_Id as "Order Id"
				Tag_Id as "Tag Id"
				Order_Type as "Order Type"
				Service
				Customer
				Delivery_Date as "Delivery Date"
				Delivery_Type as "Delivery Type"
				Delivery_Address  as "Delivery Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				custom action "Delivered"
				(
	  			workflow = Delivered1
				show action in view header = true
				show action in edit record menu = true
				column header = "Delivered"
				condition = (Order_Status == "Ready For Delivery")
				)
			)
			options
			(
	 			display field = Delivery_Address
	 	 		radius = 100 Miles
		 		icon = "location-map-pin"
	 		)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Delivery_Address as "Delivery Address"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
								"Delivered"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
							Service
							Order_Type as "Order Type"
							Tag_Id as "Tag Id"
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Order Details"
		     			related field = Order_Details
						fields
						(
							Product
							Quantity
							Unit_Price as "Unit Price"
							Amount
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Customer"
		     			related field = Customer
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Charges"
						fields
						(
							Subtotal
							Tax_Amount as "Tax Amount"
							Pickup_Charge as "Pickup Charge"
							Delivery_Charge as "Delivery Charge"
							Total_Amount as "Total Amount"
						)
					)
					datablock5
					(
			 			layout type = -2
		     			title = "Delivery Details"
						fields
						(
							Delivery_Date as "Delivery Date"
							Delivery_Type as "Delivery Type"
							Delivery_Address as "Delivery Address"
				"Delivered"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Delivered"
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Deliveries
		{
			displayName = "My Deliveries"
			show all rows from Place_New_Order  [Delivery_Staff.Email == zoho.loginuserid]  
			(
				Order_Id as "Order Id"
				Customer
				Service
				Order_Type as "Order Type"
				Order_Status as "Order Status"
				Tag_Id as "Tag Id"
				Subtotal
				Tax_Amount as "Tax Amount"
				Pickup_Charge as "Pickup Charge"
				Delivery_Charge as "Delivery Charge"
				Total_Amount as "Total Amount"
				Delivery_Type as "Delivery Type"
				Delivery_Staff as "Delivery Staff"
				Customer_Signature as "Customer Signature"
				Delivery_Date as "Delivery Date"
				Delivery_Address  as "Delivery Address"
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
			)
			options
			(
				icon = "shopping-delivery-time"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
							Service
							Delivery_Date as "Delivery Date"
							Delivery_Address as "Delivery Address"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_Id as "Order Id"
							Customer
							Service
							Order_Type as "Order Type"
							Order_Status as "Order Status"
							Tag_Id as "Tag Id"
							Subtotal
							Tax_Amount as "Tax Amount"
							Pickup_Charge as "Pickup Charge"
							Delivery_Charge as "Delivery Charge"
							Total_Amount as "Total Amount"
							Delivery_Type as "Delivery Type"
							Delivery_Date as "Delivery Date"
							Delivery_Address as "Delivery Address"
							Delivery_Staff as "Delivery Staff"
							Customer_Signature as "Customer Signature"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Subscriptions
	{
		icon = "users-badge-13"
		form Add_New_Subscription
		{
			displayname = "Add New Subscription"
			success message = "New Subscription Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Organisation
			(
				type = picklist	
				values  = Add_Organisation_Info.ID
    			displayformat = [Organisation_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Registered_On
			(
    			type = date
				displayname = "Registered On"
				initial value = "${zoho.currentdate}"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Subscription_Id
			(
    			type = autonumber
				displayname = "Subscription Id"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Customer
			(
				type = picklist	
				values  = Add_Customer.ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name]
				allow new entries = true
				[
					displayname = "Add New Customer"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Service
			(
				type = picklist	
				values  = Add_Service.ID
    			displayformat = [Service_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Package
			(
				type = picklist	
				values  = Add_New_Package.ID
    			displayformat = [Package_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Expiry_Date
			(
    			type = date
				displayname = "Expiry Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Subscription_Charge
			(
				displayname = "Subscription Charge"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Tax_Amount
			(
				displayname = "Tax Amount"
				type = USD
				initial value = 0
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Total_Amount
			(
				displayname = "Total Amount"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Status
			(
				type = picklist
				values = {"Active","Validity Expired","Usage Limit Reached","Pickup Limit Reached","Cancelled"}
				initial value = "Active"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Reason
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Refund_Amount
			(
				displayname = "Refund Amount"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			Transactions
			(
				type = list	
				values  = Add_Transaction.ID
    			bidirectional = Subscription_Id
    			displayformat = [Transaction_Id]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "food-hob"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		print template
			{
				Subscription_Invoice
				{
						displayname = "Subscription Invoice"
						content = {"layout":"1","pageNumberOption":null,"orientation":"null","isFooterEnabled":false,"containerStyle":"","mainLayout":[{"elements":[{"type":"text","element":{"Fields":[{"Related_Fields":["Name"],"Label_Name":"Customer"}],"content":"<div style=\"outline: none\">\n  <p>\n    <font size=\"3\">Dear&nbsp;\n      <span>${Customer.Name}<\/span>\n      <span style=\"color: rgb(0, 0, 0); font-family: ProximaNova, Arial, sans-serif; font-size: 16px; font-weight: 400; font-style: normal\">&nbsp;<\/span>\n      <span>\n        <span>,<\/span>\n      <\/span>\n    <\/font>\n  <\/p>\n<\/div>"}},{"type":"text","element":{"id":"elem_1671695a16d","fields":[],"content":"<div style=\"\"><br /><br /><\/div>"}},{"type":"text","element":{"id":"elem_1671695dc5d","fields":[],"content":"<div style=\"\" spellcheck=\"false\"><h1 style=\"text-align: center\"><font color=\"#51b46e\">Thank you for subscribing to our service!<\/font><\/h1><\/div>"}},{"type":"text","element":{"id":"elem_16716969be2","fields":[],"content":"<div style=\"\"><br /><\/div>"}},{"type":"text","element":{"id":"elem_1671696de7a","fields":[],"content":"<div style=\"\"><p style=\"text-align: center\"><font size=\"3\">Please find your account details below :<\/font><\/p><\/div>"}},{"type":"text","element":{"id":"elem_16716972de6","fields":[],"content":"<div style=\"\"><br /><br /><\/div>"}},{"type":"columns","element":{"split":"49,1,50","id":"elem_167169afdce1","elemStyle":"background-color: rgb(250, 250, 250)","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_1671698e070","fields":[],"content":"<div style=\"\" spellcheck=\"false\"><font color=\"#404040\"><br /> <\/font><p style=\"text-align: right\"><font color=\"#404040\"><font size=\"3\">Service:<\/font> <\/font><\/p> <p style=\"text-align: right\"><font color=\"#404040\"><font size=\"3\">Package:<\/font> <\/font><\/p> <p style=\"text-align: right\"><font color=\"#404040\"><font size=\"3\">Billed On:<\/font> <\/font><\/p> <p style=\"text-align: right\"><font color=\"#404040\"><font size=\"3\">Charge:<\/font> <\/font><\/p> <p style=\"text-align: right\"><font color=\"#404040\"><font size=\"3\">Tax:<\/font> <\/font><\/p> <p style=\"text-align: right\"><font color=\"#404040\"><font size=\"3\">Total Amount:<\/font> <\/font><\/p> <p style=\"text-align: right\"><font color=\"#404040\"><font size=\"3\">Subscription Id:<\/font><\/font><\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_167169afdce","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"Fields":[{"Label_Name":"Registered_On"},{"Label_Name":"Subscription_Charge"},{"Label_Name":"Subscription_Id"},{"Label_Name":"Tax_Amount"},{"Label_Name":"Total_Amount"},{"Related_Fields":["Service_Name"],"Label_Name":"Service"},{"Related_Fields":["Package_Name"],"Label_Name":"Package"}],"content":"<div style=\"\">\n  <br />\n  <p><font style=\"font-size: 16px\"><span field-item=\"Service.Service_Name\" style=\"font-size: 16px\">${Service.Service_Name}<\/span><span style=\"color: rgb(0, 0, 0); font-family: ProximaNova, Arial, sans-serif; font-weight: 400; font-style: normal\">&nbsp;<\/span><br />\n  <\/font><\/p>\n  <p><span><span><font style=\"font-size: 16px\"><span><span field-item=\"Package.Package_Name\">${Package.Package_Name}<\/span><span style=\"color: rgb(0, 0, 0); font-family: ProximaNova, Arial, sans-serif; font-size: 16px; font-weight: 400; font-style: normal\">&nbsp;<\/span>&nbsp;<\/span><br /> <\/font>\n      <\/span>\n    <\/span>\n  <\/p>\n  <p><span><span><span><span><font style=\"font-size: 16px\"><span><span field-item=\"Registered_On\">${Registered_On}<\/span><span style=\"color: rgb(0, 0, 0); font-family: ProximaNova, Arial, sans-serif; font-size: 16px; font-weight: 400; font-style: normal\">&nbsp;<\/span>&nbsp;<\/span><br /> <\/font>\n          <\/span>\n        <\/span>\n      <\/span>\n    <\/span>\n  <\/p>\n  <p><span field-item=\"Subscription_Charge\"><font style=\"font-size: 16px\">${Subscription_Charge}<\/font><\/span><span style=\"color: rgb(0, 0, 0); font-family: ProximaNova, Arial, sans-serif; font-size: 12px; font-weight: 400; font-style: normal\">&nbsp;<\/span><br /><\/p>\n  <p><span><span><span><span><span><span><font style=\"font-size: 16px\"><span><span field-item=\"Tax_Amount\">${Tax_Amount}<\/span><span style=\"color: rgb(0, 0, 0); font-family: ProximaNova, Arial, sans-serif; font-size: 16px; font-weight: 400; font-style: normal\">&nbsp;<\/span>&nbsp;<\/span><br /> <\/font>\n              <\/span>\n            <\/span>\n          <\/span>\n        <\/span>\n      <\/span>\n    <\/span>\n  <\/p>\n  <p><span><span><span><span><span><span><span><span><font style=\"font-size: 16px\"><span><span field-item=\"Total_Amount\">${Total_Amount}<\/span><span style=\"color: rgb(0, 0, 0); font-family: ProximaNova, Arial, sans-serif; font-size: 16px; font-weight: 400; font-style: normal\">&nbsp;<\/span>&nbsp;<\/span><br /> <\/font>\n                  <\/span>\n                <\/span>\n              <\/span>\n            <\/span>\n          <\/span>\n        <\/span>\n      <\/span>\n    <\/span>\n  <\/p>\n  <p><span field-item=\"Subscription_Id\"><font style=\"font-size: 16px\">${Subscription_Id}<\/font><\/span><span style=\"color: rgb(0, 0, 0); font-family: ProximaNova, Arial, sans-serif; font-size: 12px; font-weight: 400; font-style: normal\">&nbsp;<\/span><br /><\/p>\n<\/div>"}}]}]}},{"type":"text","element":{"id":"elem_167169c6804","fields":[],"content":"<div style=\"\"><br /><br /><br /><\/div>"}},{"type":"text","element":{"id":"elem_167169e5e9c","fields":[],"content":"<div style=\"\"><br /><\/div>"}},{"type":"text","element":{"id":"elem_167169e86bf","fields":[],"content":"<div style=\"\"><p><font size=\"3\">We make sure you get what you want!<\/font><\/p><\/div>"}},{"type":"text","element":{"id":"elem_167169f55b1","fields":[],"content":"<div style=\"\"><br /><\/div>"}},{"type":"text","element":{"id":"elem_167169f7f0e","fields":[],"content":"<div style=\"\"><p><font size=\"3\">We look forward to assist you!<\/font><\/p><\/div>"}},{"type":"text","element":{"id":"elem_167169fc086","fields":[],"content":"<div style=\"\"><br /><br /><br /><br /><br /><\/div>"}},{"type":"text","element":{"id":"elem_167169ff806","fields":[],"content":"<div style=\"\"><p><font size=\"3\">Best Regards,<\/font><\/p><\/div>"}},{"id":"elem_76716294592040523","type":"fields","element":{"Lookup_Label_Name":"Organisation","valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"1","labelText":"Organisation Name","wrapperStyle":"","labelStyle":"width: 50%; display: none","Label_Name":"Organisation_Name","labelTextStyle":""}}],"id":1}],"resize":"A4","header":{"elements":[{"type":"text","element":{"id":"elem_9216704000000027","fields":[],"content":"<div style=\"background: rgba(0, 0, 0, 0); padding: 0px\"><h1 style=\"text-align: center; color: rgb(0, 0, 0); font-weight: 400; font-style: normal\"><font style=\"font-size: 36px\">INVOICE<\/font><\/h1><\/div>"}}],"style":"border-color: rgb(255, 255, 255); background-color: rgb(255, 255, 255); display: block","bgImg":""},"themeFont":"ntent-wrapper builderContent builder_body_outer_wrapper recordSummarybuilder","templateStyle":"text-align: left; width: 793.7px; margin: 0px auto; padding: 30px","isHeaderEnabled":true,"version":"2"}
				}
			}
		}
		list Transaction_History
		{
			displayName = "Transaction History"
			print template = Renewal_Invoice
			show all rows from Add_Transaction    
			(
				Transaction_Id as "Transaction Id"
				Billed_On as "Billed On"
				Valid_Till as "Valid Till"
				Subscription_Charge as "Subscription Charge"
				Type
				Tax_Amount as "Tax Amount"
				Subscription_Id as "Subscription Id"
				Customer
				Total_Amount as "Total Amount"
			)
			options
			(
				icon = "business-payment"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Transaction_Id as "Transaction Id"
							Subscription_Id as "Subscription Id"
							Customer
							Type
							Billed_On as "Billed On"
							Valid_Till as "Valid Till"
							Subscription_Charge as "Subscription Charge"
							Tax_Amount as "Tax Amount"
							Total_Amount as "Total Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Transaction_Id as "Transaction Id"
							Subscription_Id as "Subscription Id"
							Billed_On as "Billed On"
							Valid_Till as "Valid Till"
							Subscription_Charge as "Subscription Charge"
							Tax_Amount as "Tax Amount"
							Total_Amount as "Total Amount"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Subscription"
		     			related field = Subscription_Id
						fields
						(
							Registered_On as "Registered On"
							Subscription_Id as "Subscription Id"
							Service
							Package
							Status
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Customer"
		     			related field = Customer
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
							Address
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Subscriptions
		{
			displayName = "All Subscriptions"
			show all rows from Add_New_Subscription    
			(
				Customer
				Package
				Status
				Registered_On as "Registered On"
				Expiry_Date as "Expiry Date"
				Subscription_Id as "Subscription Id"
				Transactions
				Service
				custom action "Renew"
				(
	  			workflow = Renew
				show action in edit record menu = true
				column header = "Renew"
				condition = (Status == "Validity Expired" || Status == "Usage Limit Reached")
				)
				custom action "Cancel"
				(
	  			workflow = Cancel
				show action in edit record menu = true
				column header = "Cancel"
				condition = (Status != "Cancelled")
				)
				Reason
				Refund_Amount as "Refund Amount"
			)
			sort by
			(
				Status ascending
			)
			options
			(
				icon = "design-window-paragraph"
	 		)
			conditional formatting
			(
				"Active"
				{
				condition = (Status == "Active")
				fields = [Status]
				format = "color:#19bc9f;"
				}
				"Cancelled"
				{
				condition = (Status == "Cancelled")
				fields = [Status]
				format = "text-decoration:line-through;color:#e77f06;"
				}
				"Validity Expired"
				{
				condition = (Status == "Validity Expired")
				fields = [Status]
				format = "color:#e64d3b;"
				}
				"Usage Limit"
				{
				condition = (Status == "Usage Limit Reached")
				fields = [Status]
				format = "color:#ef1616;"
				}
				"Pickup Limit"
				{
				condition = (Status == "Pickup Limit Reached")
				fields = [Status]
				format = "color:#f1c50e;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Subscription_Id as "Subscription Id"
							Registered_On as "Registered On"
							Service
							Customer
							Package
							Status
							Expiry_Date as "Expiry Date"
				"Renew"
				"Cancel"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Customer
							Package
							Status
							Registered_On as "Registered On"
							Expiry_Date as "Expiry Date"
							Subscription_Id as "Subscription Id"
							Transactions
							Service
							Reason
							Refund_Amount as "Refund Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary My_Subscriptions
		{
			displayName = "My Subscriptions"
			show all rows from Add_New_Subscription  [Customer.Email == zoho.loginuserid]  
			(
				Registered_On as "Registered On"
				Subscription_Id as "Subscription Id"
				Customer
				Service
				Package
				Expiry_Date as "Expiry Date"
				Status
				Transactions
				custom action "Usage Details"
				(
	  			workflow = Usage_Details
				show action in edit record menu = true
				column header = "Usage Details"
				condition = (Status != "Cancelled")
				)
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "business-cheque"
			)
			conditional formatting
			(
				"Active"
				{
				condition = (Status == "Active")
				fields = [Status]
				format = "color:#19bc9f;"
				}
				"Expired"
				{
				condition = (Status == "Validity Expired")
				fields = [Status]
				format = "color:#e64d3b;"
				}
				"Cancelled"
				{
				condition = (Status == "Cancelled")
				fields = [Status]
				format = "text-decoration:line-through;color:#e77f06;"
				}
				"Pickup"
				{
				condition = (Status == "Pickup Limit Reached")
				fields = [Status]
				format = "color:#c7c116;"
				}
				"Usage"
				{
				condition = (Status == "Usage Limit Reached")
				fields = [Status]
				format = "color:#ef1616;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Registered_On as "Registered On"
							Subscription_Id as "Subscription Id"
							Customer
							Service
							Package
							Expiry_Date as "Expiry Date"
							Status
				"Usage Details"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								"Usage Details"
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Registered_On as "Registered On"
							Subscription_Id as "Subscription Id"
							Customer
							Service
							Package
							Expiry_Date as "Expiry Date"
							Status
							Transactions
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Customer
	{
		icon = "users-contacts"
		form Add_Customer
		{
			displayname = "Add Customer"
			success message = "Customer Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = true
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Send_Portal_Invitation
			(
    			type = checkbox
				displayname = "Send Portal Invitation"
				initial value = false
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-woman-up"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		custom All_Customers
		{
			displayName = "All Customers"
			show all rows from Add_Customer    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Phone_Number as "Phone"
				Email
				Send_Portal_Invitation as "Send Portal Invitation"
			)
			group by
			(
				Send_Portal_Invitation ascending
			)
			options
			(
				icon = "users-parent"
	 		)
			quickview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
		     			title = "Overview"
						fields
						(
							Name
							Address
							Phone_Number as "Phone"
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Phone_Number as "Phone"
							Address
							Email
							Send_Portal_Invitation as "Send Portal Invitation"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary My_Profile
		{
			displayName = "My Profile"
			show all rows from Add_Customer  [Email == zoho.loginuserid]  
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Phone_Number as "Phone"
				Email
				Send_Portal_Invitation as "Send Portal Invitation"
			)
			options
			(
				display rows = 10
				display records per row = 1
				icon = "shopping-mobile-touch"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
							Address
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
							Address
							Send_Portal_Invitation as "Send Portal Invitation"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Staff
	{
		icon = "business-business-contact-89"
		form Add_Delivery_Staff
		{
			displayname = "Add Delivery Staff"
			success message = "Delivery Staff Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			Image
			(
    			type = image
				source  = public_url,file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		custom Delivery_Staffs
		{
			displayName = "Delivery Staffs"
			show all rows from Add_Delivery_Staff    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Phone_Number as "Phone"
				Email
				Image
			)
			options
			(
				icon = "users-2-b-add"
	 		)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 19
		     			title = "Overview"
						fields
						(
							Image
							Name
							Phone_Number as "Phone"
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom My_Profile1
		{
			displayName = "My Profile"
			show all rows from Add_Delivery_Staff  [Email == zoho.loginuserid]  
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Phone_Number as "Phone"
				Email
				Image
			)
			options
			(
				icon = "shopping-mobile-touch"
	 		)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 25
		     			title = "Overview"
						fields
						(
							Image
							Name
							Phone_Number as "Phone"
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Packages
	{
		icon = "shopping-box"
		form Add_New_Package
		{
			displayname = "Add New Package"
			success message = "New Package Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Service
			(
				type = picklist	
				values  = Add_Service.ID
    			displayformat = [Service_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Package_Name
			(
    			type = text
				displayname = "Package Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Validity_In_Months
			(
				type = number
				displayname = "Validity In Months"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Product_Usage_Limit
			(
				type = number
				displayname = "Product Usage Limit"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Pick_Up_Delivery
			(
				type = picklist
				displayname = "Pick Up & Delivery"
				values = {"Nil","Limited","Unlimited"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Limit
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Amount
			(
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "clothes-backpack"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Products
	{
		icon = "shopping-gift"
		form Add_Product
		{
			displayname = "Add Product"
			success message = "Product Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Product_Name
			(
    			type = text
				displayname = "Product Name"
    			description
    			[
    				type = help_text
    			 	message = "Eg : Shirt, Pant"
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Image
			(
    			type = image
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Services_and_Rates
			(
				type = grid
				displayname = "Services and Rates"
				values  = Add_Rate.ID
    			bidirectional = Product
	 			row = 2
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-woman-up"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Services
	{
		icon = "travel-church"
		form Add_Service
		{
			displayname = "Add Service"
			success message = "Service Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Service_Name
			(
    			type = text
				displayname = "Service Name"
    			description
    			[
    				type = help_text
    			 	message = "Eg : Dry Cleaning, Laundry"
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
    			description
    			[
    				type = help_text
    			 	message = "Inclusion of processes."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Tax_Percent
			(
    			type = percentage
				displayname = "Tax Percent"
    			description
    			[
    				type = help_text
    			 	message = "Enter tax percent for this service."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-2-l-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Settings
	{
		icon = "ui-1-settings-gear-65"
		form Add_Organisation_Info
		{
			displayname = "Add Organisation Info"
			success message = "Organisation Detail Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Organisation_Name
			(
    			type = text
				displayname = "Organisation Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Logo
			(
    			type = image
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			plain
			(
    			type = plaintext
				value = "<b><font color=\"#ff3333\">Info</font> : Enable customer portal before sharing portal invitation to customers.</b>"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		properties
		{
			total entries
			{
				allowed count = 1
			}
		}
		}
		summary Organisation_Info
		{
			displayName = "Organisation Info"
			show all rows from Add_Organisation_Info    
			(
				Organisation_Name as "Organisation Name"
				Phone_Number as "Phone"
				Email
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
			)
			options
			(
				display rows = 10
				display records per row = 1
				icon = "business-hierarchy-53"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Organisation_Name as "Organisation Name"
							Phone_Number as "Phone"
							Email
							Address
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Organisation_Name as "Organisation Name"
							Phone_Number as "Phone"
							Email
							Address
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom Available_Services
		{
			displayName = "Available Services"
			show all rows from Add_Service    
			(
				Service_Name as "Service Name"
				Description
				Tax_Percent as "Tax Percent"
			)
			options
			(
				icon = "travel-church"
	 		)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Service_Name as "Service Name"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Service_Name as "Service Name"
							Description
							Tax_Percent as "Tax Percent"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom Products
		{
			displayName = "Products"
			show all rows from Add_Product    
			(
				Product_Name as "Product Name"
				Image
			)
			options
			(
				icon = "design-2-group"
	 		)
			quickview
			(
				layout
				(
		 			type = 3
					datablock1
					(
			 			layout type = 7
		     			title = "Overview"
						fields
						(
							Image
							Product_Name as "Product Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Product_Name as "Product Name"
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Rate Chart"
		     			related field = Services_and_Rates
						fields
						(
							Service
							Charge
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom Rate_Chart
		{
			displayName = "Rate Chart"
			show all rows from Add_Rate    
			(
				Service
				Charge
				Product
				Product.Image
			)
			group by
			(
				Service ascending
			)
			options
			(
				icon = "social-1-logo-yelp"
	 		)
			quickview
			(
				layout
				(
		 			type = 3
					datablock1
					(
			 			layout type = 7
		     			title = "Overview"
						fields
						(
							Product.Image as "Image"
							Product
							Charge
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Service
							Product
							Charge
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary All_Packages
		{
			displayName = "All Packages"
			show all rows from Add_New_Package    
			(
				Service
				Package_Name as "Package Name"
				Amount
				Validity_In_Months as "Validity In Months"
				Product_Usage_Limit as "Product Usage Limit"
				Pick_Up_Delivery as "Pick Up & Delivery"
				Limit
				Service.Tax_Percent as "Tax Percent"
			)
			group by
			(
				Service ascending
			)
			options
			(
				display rows = 10
				display records per row = 3
				icon = "shopping-box"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 3
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Service
							Package_Name as "Package Name"
							Validity_In_Months as "Validity In Months"
							Product_Usage_Limit as "Product Usage Limit"
							Pick_Up_Delivery as "Pick Up & Delivery"
							Limit
							Amount
							Service.Tax_Percent as "Tax Percent"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Service
							Package_Name as "Package Name"
							Validity_In_Months as "Validity In Months"
							Product_Usage_Limit as "Product Usage Limit"
							Pick_Up_Delivery as "Pick Up & Delivery"
							Limit
							Amount
							Service.Tax_Percent as "Tax Percent"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Rates
	{
		icon = "social-1-logo-yelp"
		form Add_Rate
		{
			displayname = "Add Rate"
			success message = "Rate Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Product
			(
				type = picklist	
				values  = Add_Product.ID
    			bidirectional = Services_and_Rates
    			displayformat = [Product_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Service
			(
				type = picklist	
				values  = Add_Service.ID
    			displayformat = [Service_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Charge
			(
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "social-1-logo-yelp"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Transactions
	{
		icon = "social-1-logo-buysellads"
		form Add_Transaction
		{
			displayname = "Add Transaction"
			success message = "Renew Subscription Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Transaction_Id
			(
    			type = autonumber
				displayname = "Transaction Id"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Subscription_Id
			(
				type = picklist	
				displayname = "Subscription Id"
				values  = Add_New_Subscription.ID
    			bidirectional = Transactions
    			displayformat = [Subscription_Id]
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Type
			(
				type = picklist
				values = {"Activation","Renewal","Refund"}
				initial value = "Renewal"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Customer
			(
				type = picklist	
				values  = Add_Customer.ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Service
			(
				type = picklist	
				values  = Add_Service.ID
    			displayformat = [Service_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Package
			(
				type = picklist	
				values  = Add_New_Package.ID
    			displayformat = [Package_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Billed_On
			(
    			type = date
				displayname = "Billed On"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Valid_Till
			(
    			type = date
				displayname = "Valid Till"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Subscription_Charge
			(
				displayname = "Subscription Charge"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Tax_Amount
			(
				displayname = "Tax Amount"
				type = USD
				initial value = 0
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Total_Amount
			(
				displayname = "Total Amount"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "business-award-49"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		print template
			{
				Renewal_Invoice
				{
						displayname = "Renewal Invoice"
						content = {"layout":"1","pageNumberOption":null,"orientation":"null","isFooterEnabled":false,"containerStyle":"","mainLayout":[{"elements":[{"type":"columns","element":{"split":"6,44,50","id":"elem_166a0dcd6671","elemStyle":"","collayouts":[{"colElements":[]},{"colElements":[{"type":"text","element":{"id":"elem_1671146a042","fields":[],"content":"<div style=\"outline: none\">\n  <p style=\"margin-top: 9px\">\n    <span>${Subscription_Id.Organisation.Organisation_Name}<\/span>\n    <span style=\"color: rgb(0, 0, 0); font-family: ProximaNova, Arial, sans-serif; font-size: 12px; font-weight: 400; font-style: normal\">&nbsp;<\/span>\n    <br />\n  <\/p>\n  <p>\n    <span>${Subscription_Id.Organisation.Address}<\/span>\n    <span style=\"color: rgb(0, 0, 0); font-family: ProximaNova, Arial, sans-serif; font-size: 12px; font-weight: 400; font-style: normal\">&nbsp;<\/span>\n    <br />\n  <\/p>\n<\/div>"}}]},{"colElements":[{"type":"columns","element":{"split":"30,70","id":"elem_1671148eb9d1","elemStyle":"","collayouts":[{"colElements":[]},{"colElements":[{"type":"text","element":{"id":"elem_1668b7cf51d","fields":[],"content":"<div style=\"\"><p style=\"text-align: left\"><font size=\"7\">INVOICE<\/font><\/p><\/div>"}}]}]}}]}]}},{"type":"text","element":{"id":"elem_166a0dea26f","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}},{"type":"text","element":{"id":"elem_167114ae18f","fields":[],"content":"<div style=\"\"><hr style=\"border-color: rgb(240, 240, 240)\" /> <p>   <br /> <\/p><\/div>"}},{"type":"columns","element":{"split":"100","id":"elem_16a91be7c5d1","elemStyle":"","collayouts":[{"colElements":[]}]}},{"type":"columns","element":{"split":"34,33,33","id":"elem_1668b8156801","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"Fields":[{"Related_Fields":["Address"],"Label_Name":"Customer"},{"Related_Fields":["Name"],"Label_Name":"Customer"}],"content":"<div style=\"\"><p>\n  <font size=\"3\"><b style=\"\">Bill To<\/b><\/font><\/p><p><font size=\"3\">${Customer.Name}&nbsp;<\/font><\/p><p>&nbsp;${Customer.Address}<\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_1668b815681","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"Fields":[{"Label_Name":"Billed_On"},{"Label_Name":"Transaction_Id"},{"Label_Name":"Type"}],"content":"<div style=\"\"><p>\n  <font size=\"3\"><b style=\"\">Billed On&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;:<\/b>\n    <b style=\"\">&nbsp;<\/b>&nbsp; ${Billed_On}<\/font>\n<\/p>\n<p>\n  <span>\n    <span>\n      <span>\n        <span>\n          <span>\n            <span>\n              <span>\n                <span>\n                  <span>\n                    <span>\n                      <span>\n                        <span>\n                          <span>\n                            <span>\n                              <span>\n                                <span>\n                                  <font size=\"3\">\n                                    <span><b>Transaction#&nbsp; :<\/b><span><span><span>&nbsp;<span>&nbsp; &nbsp;${Transaction_Id}<\/span>\n                                          <\/span>\n                                        <\/span>\n                                      <\/span>\n                                    <\/span>\n                                  <\/font>\n                                <\/span>\n                              <\/span>\n                            <\/span>\n                          <\/span>\n                        <\/span>\n                      <\/span>\n                    <\/span>\n                  <\/span>\n                <\/span>\n              <\/span>\n            <\/span>\n          <\/span>\n        <\/span>\n      <\/span>\n    <\/span>\n  <\/span>\n<\/p>\n<p>\n  <font size=\"3\"><b style=\"\">Type&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<\/b><b style=\"\">:<\/b>&nbsp; &nbsp;${Type}<\/font>\n<\/p><\/div>"}}]}]}},{"type":"text","element":{"id":"elem_1668b82cda1","fields":[],"content":"<div style=\"\"><br /><\/div>"}},{"type":"text","element":{"id":"elem_16a91ca5c9b","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}},{"id":"elem_41335882296740399","type":"lookupfields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"1","related_Form":"Add_New_Subscription","labelText":"Subscription Id","wrapperStyle":"","labelStyle":"width: 50%; display: none","Label_Name":"Subscription_Id","refFields":[{"valueStyle":"text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em","fieldLayoutType":"2","labelText":"Subscription Id","labelStyle":"width: 25%; text-align: left; font-weight: bold; background-color: rgb(244, 244, 244)","Label_Name":"Subscription_Id"},{"valueStyle":"text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em","fieldLayoutType":"2","labelText":"Service","labelStyle":"width: 25%; text-align: left; font-weight: bold; background-color: rgb(244, 244, 244)","Label_Name":"Service"},{"valueStyle":"text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em","fieldLayoutType":"2","labelText":"Package","labelStyle":"width: 25%; text-align: left; font-weight: bold; background-color: rgb(244, 244, 244)","Label_Name":"Package"},{"valueStyle":"text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em","fieldLayoutType":"2","labelText":"Expiry Date","labelStyle":"width: 25%; text-align: left; font-weight: bold; background-color: rgb(244, 244, 244)","Label_Name":"Expiry_Date"}],"labelTextStyle":"font-weight: bold"}},{"type":"text","element":{"id":"elem_167118ce800","fields":[],"content":"<div style=\"\"> <br /><\/div>"}},{"type":"columns","element":{"split":"65,30,5","id":"elem_1668b83c9e11","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_1668b83c9e1","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}}]},{"colElements":[{"id":"elem_41335882296766662","type":"fields","element":{"valueStyle":"width: 35%","valueTextStyle":"text-align: right","fieldLayoutType":"2","labelText":"Subscription Charge","wrapperStyle":"","labelStyle":"width: 65%; background-color: rgb(255, 255, 255)","Label_Name":"Subscription_Charge","labelTextStyle":"background-color: rgb(255, 255, 255); text-align: right; font-weight: bold"}},{"id":"elem_41335882296769728","type":"fields","element":{"valueStyle":"width: 35%","valueTextStyle":"text-align: right","fieldLayoutType":"2","labelText":"Tax Amount","wrapperStyle":"","labelStyle":"width: 65%; background-color: rgb(255, 255, 255)","Label_Name":"Tax_Amount","labelTextStyle":"background-color: rgb(255, 255, 255); text-align: right; font-weight: bold"}},{"id":"elem_41335882296771986","type":"fields","element":{"valueStyle":"width: 35%","valueTextStyle":"text-align: right","fieldLayoutType":"2","labelText":"Total Amount","wrapperStyle":"","labelStyle":"width: 65%; background-color: rgb(255, 255, 255)","Label_Name":"Total_Amount","labelTextStyle":"text-align: right; background-color: rgb(255, 255, 255); font-weight: bold"}}]},{"colElements":[{"type":"text","element":{"id":"elem_167119a9409","fields":[],"content":"<div style=\"\"><p><br /><\/p><\/div>"}}]}]}},{"type":"text","element":{"id":"elem_16711929ba4","fields":[],"content":"<div style=\"\"><div style=\"border-bottom: 1px solid rgb(240, 240, 240)\"><br /><\/div><\/div>"}},{"type":"text","element":{"id":"elem_16753f53c7b","fields":[],"content":"<div style=\"\"><br /><\/div>"}}],"id":1}],"resize":"A4","themeFont":"ntent-wrapper builderContent builder_body_outer_wrapper recordSummarybuilder","templateStyle":"text-align: left; width: 793.7px; margin: 0px; padding: 30px","isHeaderEnabled":false,"version":"2"}
				}
			}
		}
	}
	section Order_Details
	{
		displayname= "Order Details"
		icon = "shopping-basket-edit"
		form Add_Order_Details
		{
			displayname = "Add Order Details"
			success message = "Order Detail Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Order_Id
			(
				type = picklist	
				displayname = "Order Id"
				values  = Place_New_Order.ID
    			bidirectional = Order_Details
    			displayformat = [Order_Id]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Product
			(
				type = picklist	
				values  = Add_Product.ID
    			displayformat = [Product_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Quantity
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
			Unit_Price
			(
				displayname = "Unit Price"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			Amount
			(
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-basket-edit"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
		 functions
		 {
			 Deluge
			 {
				 map Details.Subscription_usage(int Sub_id)
         {
         	return_map = Map();
         	subs_rec = Add_New_Subscription[Subscription_Id == input.Sub_id];
         	last_transaction = Add_Transaction[Subscription_Id == subs_rec.ID] sort by Billed_On desc range from 0 to 1;
         	package_details = Add_New_Package[ID == subs_rec.Package];
         	product_usage = Place_New_Order[Customer == subs_rec.Customer && Service == subs_rec.Service && Added_Time >= last_transaction.Billed_On && Added_Time <= last_transaction.Valid_Till && Order_Type == "Package"].sum(Product_Quantity);
         	max_usage_limit = package_details.Product_Usage_Limit;
         	remaining_product_usage = max_usage_limit - product_usage;
         	return_map.put("Remaining_Usage",remaining_product_usage);
         	pickup = package_details.Pick_Up_Delivery;
         	if(pickup == "Nil")
         	{
         		return_map.put("Pickup",0);
         	}
         	else if(pickup == "Unlimited")
         	{
         		return_map.put("Pickup","Unlimited");
         	}
         	else if(pickup == "Limited")
         	{
         		max_pickup_limit = package_details.Limit;
         		pickup_usage = Place_New_Order[Customer == subs_rec.Customer && Service == subs_rec.Service && Added_Time >= last_transaction.Billed_On && Added_Time <= last_transaction.Valid_Till && Order_Type == "Package" && Pickup_Type == "Door Pickup" || Delivery_Type == "Door Delivery"].count(Order_Id);
         		remaining_pickup = max_pickup_limit - pickup_usage;
         		if(pickup_usage >= max_pickup_limit)
         		{
         			return_map.put("Pickup",0);
         		}
         		else
         		{
         			return_map.put("Pickup",remaining_pickup);
         		}
         	}
         	return return_map;
         }
				 void Notification.Send_Notification(string userEmail)
         {
         	appname = zoho.appname;
         	sendmail
         	[
         		from :zoho.adminuserid
         		to :userEmail
         		subject :"Invitation to access '" + zoho.appname + "' "
         		message :"<div style='width:100%;display:inline-block;box-sizing:border-box;border:1px solid #ddd;'><div style='padding:2%;text-align:center;'>You've been invited to use an application built on Zoho Creator by \"" + zoho.adminuserid + "\".</div><div style='background: #efefef; padding: 20.0px;margin: 20.0px 0 10.0px;text-align:center;'><h2>" + appname.toUpperCase() + "</h2><div style='margin: 20.0px 0 10.0px;'><a style='padding:10px;background-color: rgb(62,149,205);text-decoration: none;color: rgb(255,255,255);font-size: 14.0px;' href='https://creator.zoho.in" + zoho.appuri + "' target='_blank'> Go to application </a></div></div></div>"
         	]
         }
				 void Order.assign_pickup(Place_New_Order form)
         {
         	url = zoho.appuri + "#Form:Place_New_Order?Order_Status=Pickup%20Pending&recLinkID=" + form.ID + "&viewLinkName=Pickup_Requests&zc_NextUrl=#Report:Pickup_Requests";
         	openUrl(url,"popup window");
         }
				 void Order.Delivery(Place_New_Order form)
         {
         	if(form.Delivery_Type == "Door Delivery")
         	{
         		url = zoho.appuri + "#Form:Place_New_Order?Order_Status=Delivered&recLinkID=" + form.ID + "&viewLinkName=Pickup_Map&zc_NextUrl=#Report:My_Pickup";
         	}
         	else
         	{
         		url = zoho.appuri + "#Form:Place_New_Order?Order_Status=Delivered&recLinkID=" + form.ID + "&viewLinkName=Customer_Pickups&zc_NextUrl=#Report:Customer_Pickups";
         	}
         	openUrl(url,"popup window");
         }
				 map Order.Fetch_Subscription_Details(int service_id, int customer)
         {
         	return_map = Map();
         	subscription_rec = Add_New_Subscription[Customer == input.customer && Service == input.service_id && Status != "Cancelled"];
         	if(subscription_rec == 0)
         	{
         		return_map.put("Subscription",false);
         		return return_map;
         	}
         	else
         	{
         		return_map.put("Subscription",true);
         		return_map.put("Status",subscription_rec.Status);
         		if(subscription_rec.Status == "Validity Expired" || subscription_rec.Status == "Usage Limit Reached")
         		{
         			return return_map;
         		}
         		else
         		{
         			last_transaction = Add_Transaction[Subscription_Id == subscription_rec.ID] sort by Billed_On desc range from 0 to 1;
         			package_details = Add_New_Package[ID == subscription_rec.Package];
         			product_usage = Place_New_Order[Customer == input.customer && Service == input.service_id && Added_Time >= last_transaction.Billed_On && Added_Time <= last_transaction.Valid_Till && Order_Type == "Package"].sum(Product_Quantity);
         			max_usage_limit = package_details.Product_Usage_Limit;
         			remaining_product_usage = max_usage_limit - product_usage;
         			return_map.put("Remaining_Usage",remaining_product_usage);
         			pickup = package_details.Pick_Up_Delivery;
         			if(pickup == "Nil")
         			{
         				return_map.put("Pickup","Not Available");
         			}
         			else if(pickup == "Unlimited")
         			{
         				return_map.put("Pickup","Available");
         			}
         			else if(pickup == "Limited")
         			{
         				max_pickup_limit = package_details.Limit;
         				pickup_usage = Place_New_Order[Customer == input.customer && Service == input.service_id && Added_Time >= last_transaction.Billed_On && Added_Time <= last_transaction.Valid_Till && Order_Type == "Package" && Pickup_Type == "Door Pickup" || Delivery_Type == "Door Delivery"].count(Order_Id);
         				if(pickup_usage >= max_pickup_limit)
         				{
         					return_map.put("Pickup","Not Available");
         				}
         				else
         				{
         					return_map.put("Pickup","Available");
         				}
         			}
         			return return_map;
         		}
         	}
         	return return_map;
         }
				 void Order.pickup_done(Place_New_Order form)
         {
         	url = zoho.appuri + "#Form:Place_New_Order?Order_Status=Pending&recLinkID=" + form.ID + "&viewLinkName=Pickup_Map&zc_NextUrl=#Report:Pickup_Map";
         	openUrl(url,"popup window");
         }
				 void Order.Ready_For_Delivery(Place_New_Order form)
         {
         	if(form.Delivery_Type == "Door Delivery")
         	{
         		url = zoho.appuri + "#Form:Place_New_Order?Order_Status=Ready%20For%20Delivery&recLinkID=" + form.ID + "&viewLinkName=In_Process&zc_NextUrl=#Report:In_Process";
         		openUrl(url,"popup window");
         	}
         	else
         	{
         		form.Order_Status="Ready For Delivery";
         	}
         }
				 void Order.Start_Process(Place_New_Order form)
         {
         	url = zoho.appuri + "#Form:Place_New_Order?recLinkID=" + form.ID + "&Order_Status=In%20Process&viewLinkName=Pending_Orders&zc_NextUrl=#Report:Pending_Orders";
         	openUrl(url,"popup window");
         }
				 void Subscription.Cancel(Add_New_Subscription form)
         {
         	url = zoho.appuri + "#Form:Add_New_Subscription?Status=Cancelled&recLinkID=" + form.ID + "&viewLinkName=All_Subscriptions&zc_NextUrl=#Report:All_Subscriptions";
         	openUrl(url,"popup window");
         }
				 void Subscription.Renew(Add_New_Subscription form)
         {
         	openUrl("#Form:Add_Transaction?Subscription_Id=" + form.ID,"popup window");
         }
				 void Subscription.Usage(Add_New_Subscription form)
         {
         	openUrl("#Page:Service_Usage_Details?sub_id=" + form.Subscription_Id,"popup window");
         }
			 }
		 }




		workflow
		{
		form
		{
			Direct_to_Form_Properties as "Direct to - Form Properties"
			{
				type =  presuccess
				form = Add_Organisation_Info
				on start
				{
					actions 
					{
						openURL("#Form:Add_Service","new window");
					}
				}
			}
			Run_Scripts_While_Adding_1 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on add

				field rules
				{
					actions 
					{
						hide Delivery_Charge,Pickup_Charge,Customer_Signature,Customer_Signature1,Delivery_Address,Delivery_Date,Delivery_Staff,Pickup_Address,Pickup_Staff,Preferred_Pickup_Time,Tag_Id;
					}
				}

			}
			Run_Scripts_While_Adding_6 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											org_details = Add_Organisation_Info[ID != 0];
										if(org_details.count() == 1)
										{
											input.Organisation = org_details.ID;
										}
										customer_check = Add_Customer[Email = zoho.loginuserid];
										if(customer_check.count() == 1)
										{
											input.Customer = customer_check.ID;
											pickup_list = {"Door Pickup"};
											input.Pickup_Type:ui.add(pickup_list);
										}
										if(zoho.adminuserid != zoho.loginuserid)
										{
											disable Customer;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_7 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on add

				on validate
				{
					actions  (Pickup_Type == "Door Pickup")
					{
						custom deluge script
						(
											if(Pickup_Address == null)
										{
											alert "Please give pickup address to finish this.";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_8 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on add

				on success
				{
					actions  (Order_Type == "Ordinary")
					{
						sendmail
						(
							from : "zoho.adminuserid"
							to : Customer.Email
							subject : "New Order Invoice"
							message : "Hi ${Customer.Name},<div><br></div><div>&nbsp; &nbsp; &nbsp; You have ordered for&nbsp;${Service.Service_Name} and your order id is&nbsp;${Order_Id}, attaching your invoice below.</div>"
							attachments : template : Order_Invoice as pdf
						)
					}
					actions  (Pickup_Type == "Door Pickup")
					{
						custom deluge script
						(
											if(Pickup_Staff != null)
										{
											input.Order_Status = "Pickup Pending";
										}
										else if(Pickup_Staff == null)
										{
											input.Order_Status = "Waiting For Staff";
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_9 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on add

				on user input of Pickup_Staff
				{
					actions  (Pickup_Type == "Door Pickup")
					{
						custom deluge script
						(
											if(Pickup_Staff != null)
										{
											input.Pickup_Staff_User.Email = input.Pickup_Staff.Email;
										}
										else
										{
											input.Pickup_Staff_User = null;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_10 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on add

				on user input of Preferred_Pickup_Time
				{
					actions 
					{
						custom deluge script
						(
											if(Preferred_Pickup_Time != null)
										{
											if(Preferred_Pickup_Time <= zoho.currenttime)
											{
												alert "Please select a future time";
												input.Preferred_Pickup_Time = null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_11 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on add

				on user input of Pickup_Type
				{
					actions 
					{
						custom deluge script
						(
											customer_check = Add_Customer[Email = zoho.loginuserid].count();
										if(Pickup_Type != "")
										{
											if(Pickup_Type == "Door Pickup")
											{
												show Pickup_Address;
												show Preferred_Pickup_Time;
												if(customer_check == 0)
												{
													show Pickup_Staff;
													show Pickup_Charge;
												}
											}
											else
											{
												hide Pickup_Charge;
												hide Pickup_Staff;
												hide Pickup_Address;
												hide Preferred_Pickup_Time;
											}
										}
										else
										{
											hide Pickup_Charge;
											hide Pickup_Staff;
											hide Pickup_Address;
											hide Preferred_Pickup_Time;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_12 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on add

				on user input of Order_Type
				{
					actions 
					{
						custom deluge script
						(
											if(Order_Type != "")
										{
											if(Order_Type == "Package")
											{
												hide Order_Details.Unit_Price;
												hide Order_Details.Amount;
												detail_map = thisapp.Order.Fetch_Subscription_Details(input.Service,input.Customer);
												input.plain2 = "You can place order for quantities upto " + detail_map.get("Remaining_Usage");
												if(detail_map.get("Pickup") == "Available")
												{
													input.plain2 = input.plain2 + "<br>Free Pickup and delivery available";
													hide Pickup_Charge;
													input.Pickup_Charge = 0;
												}
												else
												{
													input.plain2 = input.plain2 + "<br>Pickup and delivery will cost additional if used";
												}
											}
											else
											{
												show Order_Details.Unit_Price;
												show Order_Details.Amount;
												input.plain2 = "";
											}
										}
										else
										{
											show Order_Details.Unit_Price;
											show Order_Details.Amount;
											input.plain2 = "";
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_13 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on add

				on user input of Delivery_Type
				{
					actions 
					{
						custom deluge script
						(
											customer_check = Add_Customer[Email = zoho.loginuserid].count();
										if(Delivery_Type != "")
										{
											if(Delivery_Type == "Door Delivery")
											{
												show Delivery_Address;
												if(customer_check == 0)
												{
													show Delivery_Charge;
												}
											}
											else
											{
												hide Delivery_Charge;
												hide Delivery_Address;
											}
										}
										else
										{
											hide Delivery_Charge;
											hide Delivery_Address;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_14 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on add

				on user input of Service
				{
					actions 
					{
						custom deluge script
						(
											if(Customer != null && Service != null)
										{
											detail_map = thisapp.Order.Fetch_Subscription_Details(input.Service,input.Customer);
											if(detail_map.get("Subscription") == true)
											{
												if(detail_map.get("Status") == "Active" || detail_map.get("Status") == "Pickup Limit Reached")
												{
													show Order_Type;
												}
												else
												{
													input.Order_Type = "Ordinary";
													hide Order_Type;
												}
											}
											else
											{
												input.Order_Type = "Ordinary";
												hide Order_Type;
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_15 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on add

				on user input of Customer
				{
					actions 
					{
						custom deluge script
						(
											if(Customer != null && Service != null)
										{
											detail_map = thisapp.Order.Fetch_Subscription_Details(input.Service,input.Customer);
											if(detail_map.get("Subscription") == true)
											{
												if(detail_map.get("Status") == "Active" || detail_map.get("Status") == "Pickup Limit Reached")
												{
													show Order_Type;
												}
												else
												{
													input.Order_Type = "Ordinary";
													hide Order_Type;
												}
											}
											else
											{
												input.Order_Type = "Ordinary";
												hide Order_Type;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always8 as "Run Scripts On Always"
			{
				type =  form
				form = Add_New_Package
				record event = on add or edit

				field rules
				{
					actions  (Pick_Up_Delivery == "Limited")
					{
						show Limit;
					}
				}

			}
			Run_Scripts_On_Always9 as "Run Scripts On Always"
			{
				type =  form
				form = Add_New_Package
				record event = on add or edit

				on validate
				{
					actions  (Pick_Up_Delivery == "Limited")
					{
						custom deluge script
						(
											if(Limit == null)
										{
											alert "Enter a pick up limit to finish this";
											cancel submit;
										}
						)
					}
					actions 
					{
						custom deluge script
						(
											if(Pick_Up_Delivery != "Limited")
										{
											input.Limit = null;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always10 as "Run Scripts On Always"
			{
				type =  form
				form = Add_New_Package
				record event = on add or edit

				on user input of Limit
				{
					actions  (Pick_Up_Delivery == "Limited")
					{
						custom deluge script
						(
											if(Limit != null)
										{
											if(Limit < 1)
											{
												alert "Enter a valid pick up limit";
												input.Limit = null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always11 as "Run Scripts On Always"
			{
				type =  form
				form = Add_New_Package
				record event = on add or edit

				on user input of Amount
				{
					actions 
					{
						custom deluge script
						(
											if(Amount != null)
										{
											if(Amount <= 0)
											{
												alert "Enter a valid amount";
												input.Amount = null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always12 as "Run Scripts On Always"
			{
				type =  form
				form = Add_New_Package
				record event = on add or edit

				on user input of Validity_In_Months
				{
					actions 
					{
						custom deluge script
						(
											if(input.Validity_In_Months != null)
										{
											if(Validity_In_Months < 1)
											{
												alert "Enter a valid value for month";
												input.Validity_In_Months = null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always13 as "Run Scripts On Always"
			{
				type =  form
				form = Add_New_Package
				record event = on add or edit

				on user input of Product_Usage_Limit
				{
					actions 
					{
						custom deluge script
						(
											if(Product_Usage_Limit != null)
										{
											if(Product_Usage_Limit < 1)
											{
												alert "Enter a valid usage limit";
												input.Product_Usage_Limit = null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_16 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_New_Subscription
				record event = on add

				field rules
				{
					actions 
					{
						hide Reason,Refund_Amount;
					}
				}

			}
			Run_Scripts_While_Adding_17 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_New_Subscription
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											clear Package;
										org_details = Add_Organisation_Info[ID != 0];
										if(org_details.count() == 1)
										{
											input.Organisation = org_details.ID;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_18 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_New_Subscription
				record event = on add

				on success
				{
					actions 
					{
						sendmail
						(
							from : "zoho.adminuserid"
							to : Customer.Email
							subject : "New Subscription - ${Service.Service_Name}"
							message : "Hi&nbsp;${Customer.Name},&nbsp;<div><br></div><div>&nbsp; &nbsp; &nbsp; You have successfully subscribed to our&nbsp;${Service.Service_Name} service. your next renewal date is&nbsp;${Expiry_Date}. you can find your invoice below.</div>"
							attachments : template : Subscription_Invoice as pdf
						)
					}
					actions 
					{
						custom deluge script
						(
											tax = input.Service.Tax_Percent;
										tax_amount = 0;
										if(tax != null)
										{
											tax_amount = input.Package.Amount * tax / 100;
										}
										insert into Add_Transaction
										[
											Added_User=zoho.loginuser
											Subscription_Id=input.ID
											Customer=input.Customer
											Service=input.Service
											Billed_On=input.Registered_On
											Valid_Till=input.Expiry_Date
											Subscription_Charge=input.Package.Amount
											Tax_Amount=tax_amount
											Total_Amount=input.Package.Amount + tax_amount
											Package=input.Package
											Type="Activation"
										]
						)
					}
				}

			}
			Run_Scripts_While_Adding_19 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_New_Subscription
				record event = on add

				on user input of Service
				{
					actions 
					{
						custom deluge script
						(
											if(Service != null)
										{
											available_packages = Add_New_Package[Service == input.Service].ID.getAll();
											input.Package:ui.add(available_packages);
										}
										else
										{
											clear Package;
											input.Subscription_Charge = 0;
											input.Tax_Amount = 0;
											input.Total_Amount = 0;
											input.Expiry_Date = null;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_20 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_New_Subscription
				record event = on add

				on user input of Customer
				{
					actions 
					{
						custom deluge script
						(
											if(input.Customer != null)
										{
											registered_services = Add_New_Subscription[Customer == input.Customer && Status != "Cancelled"].Service.getAll();
											all_services = Add_Service[ID != 0].ID.getAll();
											all_services.removeAll(registered_services);
											input.Service:ui.add(all_services);
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_21 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_New_Subscription
				record event = on add

				on user input of Package
				{
					actions 
					{
						custom deluge script
						(
											if(Package != null)
										{
											input.Expiry_Date = input.Registered_On.addMonth(input.Package.Validity_In_Months);
										}
										else
										{
											input.Expiry_Date = null;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always14 as "Run Scripts On Always"
			{
				type =  form
				form = Add_New_Subscription
				record event = on add or edit

				field rules
				{
					actions 
					{
						disable Registered_On,Expiry_Date,Tax_Amount,Total_Amount,Subscription_Charge;
						hide Transactions,Status,Organisation;
					}
				}

			}
			Run_Scripts_On_Always15 as "Run Scripts On Always"
			{
				type =  form
				form = Add_New_Subscription
				record event = on add or edit

				on user input of Package
				{
					actions 
					{
						custom deluge script
						(
											if(Package != null)
										{
											input.Subscription_Charge = input.Package.Amount;
											if(input.Service.Tax_Percent != null)
											{
												input.Tax_Amount = input.Subscription_Charge * input.Service.Tax_Percent / 100;
											}
											input.Total_Amount = input.Subscription_Charge + input.Tax_Amount;
										}
										else
										{
											Valid_Till = null;
											input.Subscription_Charge = null;
											input.Total_Amount = 0;
											input.Tax_Amount = 0;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always16 as "Run Scripts On Always"
			{
				type =  form
				form = Add_Service
				record event = on add or edit

				on user input of Tax_Percent
				{
					actions 
					{
						custom deluge script
						(
											if(Tax_Percent != null)
										{
											if(Tax_Percent <= 0)
											{
												alert "Enter a valid tax percent";
												input.Tax_Percent = null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always17 as "Run Scripts On Always"
			{
				type =  form
				form = Add_Product
				record event = on add or edit

				on user input of Services_and_Rates.Charge
				{
					actions 
					{
						custom deluge script
						(
											if(row.Charge != null)
										{
											if(row.Charge <= 0)
											{
												alert "Enter a valid amount";
												row.Charge=null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always18 as "Run Scripts On Always"
			{
				type =  form
				form = Add_Product
				record event = on add or edit

				on add row of Services_and_Rates
				{
					actions 
					{
						custom deluge script
						(
											available_services = Add_Service[ID != 0].ID.getAll();
										selected_services = input.Services_and_Rates.Service.getall();
										available_services.removeall(selected_services);
										row.Service:ui.add(available_services);
						)
					}
				}

			}
			Run_Scripts_On_Always19 as "Run Scripts On Always"
			{
				type =  form
				form = Add_Product
				record event = on add or edit

				on delete row of Services_and_Rates
				{
					actions 
					{
						custom deluge script
						(
											available_services = Add_Service[ID != 0].ID.getAll();
										selected_services = input.Services_and_Rates.Service.getall();
										available_services.removeall(selected_services);
										row.Service:ui.add(available_services);
						)
					}
				}

			}
			Run_Scripts_On_Always20 as "Run Scripts On Always"
			{
				type =  form
				form = Add_Rate
				record event = on add or edit

				on user input of Charge
				{
					actions 
					{
						custom deluge script
						(
											if(input.Charge != null)
										{
											if(input.Charge <= 0)
											{
												alert "Enter a valid amount";
												input.Charge = null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always21 as "Run Scripts On Always"
			{
				type =  form
				form = Add_Customer
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(Send_Portal_Invitation == true)
										{
											if(Email == null || Email == "")
											{
												alert "Enter a email to share portal invitation";
												cancel submit;
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_22 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Customer
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(Send_Portal_Invitation == true && Email != null)
										{
											thisapp.portal.assignUserInProfile(input.Email,"Customer Profile");
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Add_Customer
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(Email != old.Email)
										{
											thisapp.portal.deleteuser(old.Email);
										}
										if(Send_Portal_Invitation == true)
										{
											thisapp.portal.assignUserInProfile(input.Email,"Customer Profile");
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin5 as "Run Scripts While Deleting a Record"
			{
				type =  form
				form = Add_Customer
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											thisapp.portal.deleteuser(input.Email);
						)
					}
				}

			}
			Run_Scripts_While_Adding_23 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Delivery_Staff
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(Email != null)
										{
											thisapp.permissions.assignUserInProfile(input.Email,"Delivery Staff");
											thisapp.Notification.Send_Notification(input.Email);
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing5 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Add_Delivery_Staff
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(Email != old.Email)
										{
											thisapp.permissions.deleteuser(old.Email);
											thisapp.permissions.assignUserInProfile(input.Email,"Delivery Staff");
											thisapp.Notification.Send_Notification(input.Email);
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin6 as "Run Scripts While Deleting a Record"
			{
				type =  form
				form = Add_Delivery_Staff
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											thisapp.permissions.deleteuser(input.Email);
						)
					}
				}

			}
			Run_Scripts_While_Deletin7 as "Run Scripts While Deleting a Record"
			{
				type =  form
				form = Add_Organisation_Info
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											alert "You cannot delete this record";
										cancel delete;
						)
					}
				}

			}
			Run_Scripts_While_Adding_24 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Transaction
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(input.Subscription_Id != null)
										{
											input.Billed_On = zoho.currentdate;
											input.Service = input.Subscription_Id.Service;
											input.Customer = input.Subscription_Id.Customer;
											input.Package = input.Subscription_Id.Package;
											input.Valid_Till = input.Billed_On.addMonth(input.Package.Validity_In_Months);
											input.Subscription_Charge = input.Package.Amount;
											if(input.Service.Tax_Percent != null)
											{
												input.Tax_Amount = input.Subscription_Charge * input.Service.Tax_Percent / 100;
											}
											input.Total_Amount = input.Subscription_Charge + input.Tax_Amount;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_25 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Transaction
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											subscription_rec = Add_New_Subscription[ID == input.Subscription_Id];
										subscription_rec.Status="Active";
										subscription_rec.Package=input.Package;
										subscription_rec.Subscription_Charge=input.Subscription_Charge;
										subscription_rec.Tax_Amount=input.Tax_Amount;
										subscription_rec.Total_Amount=input.Total_Amount;
										openUrl("#Script:page.refresh","same window");
						)
					}
					actions 
					{
						sendmail
						(
							from : "zoho.adminuserid"
							to : Customer.Email
							subject : "Renewal of Subscription on  ${Billed_On}"
							message : "Hi&nbsp;${Customer.Name},<div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; you have successfully renewed to our&nbsp;${Service.Service_Name} service with pack of&nbsp;${Package.Package_Name}, which contains a validity of&nbsp;${Package.Validity_In_Months} months.&nbsp;<br>Your next renewal date is&nbsp;${Valid_Till}.</div><div><br></div><div>Thank you</div>"
							attachments : template : Renewal_Invoice as pdf
						)
					}
				}

			}
			Run_Scripts_While_Adding_26 as "Run Scripts While Adding a Record"
			{
				type =  form
				form = Add_Transaction
				record event = on add

				on user input of Package
				{
					actions 
					{
						custom deluge script
						(
											if(Package != null)
										{
											input.Valid_Till = input.Billed_On.addMonth(input.Package.Validity_In_Months);
											input.Subscription_Charge = input.Package.Amount;
											if(input.Service.Tax_Percent != null)
											{
												input.Tax_Amount = input.Subscription_Charge * input.Service.Tax_Percent / 100;
											}
											input.Total_Amount = input.Subscription_Charge + input.Tax_Amount;
										}
										else
										{
											input.Valid_Till = null;
											input.Subscription_Charge = null;
											input.Total_Amount = 0;
											input.Tax_Amount = 0;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always22 as "Run Scripts On Always"
			{
				type =  form
				form = Add_Transaction
				record event = on add or edit

				field rules
				{
					actions 
					{
						disable Subscription_Charge,Tax_Amount,Total_Amount,Subscription_Id,Customer,Billed_On,Service,Valid_Till,Type;
					}
				}

			}
			Run_Scripts_While_Editing6 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Add_New_Subscription
				record event = on edit

				field rules
				{
					actions 
					{
						disable Customer,Package,Service,Expiry_Date,Status;
						show Status;
					}
				}

			}
			Run_Scripts_While_Editing7 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Add_New_Subscription
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(old.Status != "Cancelled" && Status == "Cancelled" && Refund_Amount != null)
										{
											insert into Add_Transaction
											[
												Total_Amount=input.Refund_Amount * -1
												Customer=input.Customer
												Tax_Amount=0
												Billed_On=zoho.currentdate
												Type="Refund"
												Subscription_Charge=0
												Package=input.Package
												Subscription_Id=input.ID
												Service=input.Service
												Added_User=zoho.loginuser
											]
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing8 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Add_New_Subscription
				record event = on edit

				on user input of Refund_Amount
				{
					actions 
					{
						custom deluge script
						(
											if(Refund_Amount != null)
										{
											if(Refund_Amount <= 0)
											{
												alert "Enter a valid amount for refund";
												input.Refund_Amount = null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing9 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on edit

				field rules
				{
					actions  (Order_Status == "Delivered")
					{
						show Customer_Signature;
					}
					actions  (Order_Status == "Ready For Delivery" && Delivery_Type == "Door Delivery")
					{
						show Delivery_Staff,Delivery_Address;
					}
					actions  (Order_Status != "Pending")
					{
					hide add row of Order_Details;
					hide delete row of Order_Details;
					}
					actions  (Order_Status == "In Process")
					{
						show Tag_Id,Delivery_Date;
					}
					actions  (Order_Status == "Pending" && Pickup_Type == "Door Pickup")
					{
						show Customer_Signature1;
						hide Delivery_Type,Delivery_Charge;
						disable Pickup_Address,Pickup_Staff,Preferred_Pickup_Time,Pickup_Charge;
					}
				}

			}
			Run_Scripts_While_Editing10 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											disable Order_Details.Product;
										disable Order_Details.Quantity;
										disable Customer;
										disable Service;
										disable Order_Type;
										disable Pickup_Type;
										disable Delivery_Type;
										if(Order_Type == "Package")
										{
											hide Order_Details.Unit_Price;
											hide Order_Details.Amount;
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing11 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on edit

				on validate
				{
					actions  (Order_Status == "Ready For Delivery" && Delivery_Type == "Door Delivery")
					{
						custom deluge script
						(
											if(Delivery_Staff == null)
										{
											alert "Select any staff for delivery";
											cancel submit;
										}
										if(Delivery_Address == null)
										{
											alert "Please give delivery address to finish this.";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing12 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on edit

				on success
				{
					actions  (Order_Status == "Ready For Delivery" && Delivery_Type == "Door Delivery")
					{
					pushnotification
					(
						sender type : "fields"
						to : "${Delivery_Staff_User}"
						title : "New Delivery Assigned"
						message : " ${zoho.loginuserid} has assigned a new delivery for you."
						view : "Delivery_Map"
					)
					}
					actions  (Order_Status == "In Process")
					{
						sendmail
						(
							from : "zoho.adminuserid"
							to : Customer.Email
							subject : "Order - In process"
							message : "Hi ${Customer.Name},<div><br></div><div>&nbsp; &nbsp; &nbsp; Your order has been taken into process, will be delivered by ${Delivery_Date}.</div><div><br></div><div>&nbsp; &nbsp; &nbsp; Order Id : ${Order_Id}<br>&nbsp; &nbsp; &nbsp; Amount Due : ${Total_Amount}</div><div><br></div><div>Thank you.</div>"
						)
					}
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:page.refresh","same window");
						)
					}
				}

			}
			Run_Scripts_While_Editing13 as "Run Scripts While Editing a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on edit

				on user input of Delivery_Staff
				{
					actions  (Order_Status == "Ready For Delivery" && Delivery_Type == "Door Delivery")
					{
						custom deluge script
						(
											if(input.Delivery_Staff != null)
										{
											input.Delivery_Staff_User.Email = input.Delivery_Staff.Email;
										}
										else
										{
											input.Delivery_Staff_User = null;
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin8 as "Run Scripts While Deleting a Record"
			{
				type =  form
				form = Place_New_Order
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											delete from Add_Order_Details[Order_Id == input.ID];
						)
					}
				}

			}
			Run_Scripts_While_Deletin9 as "Run Scripts While Deleting a Record"
			{
				type =  form
				form = Add_New_Subscription
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											delete from Add_Transaction[Subscription_Id == input.ID];
						)
					}
				}

			}
			Run_Scripts_On_Always23 as "Run Scripts On Always"
			{
				type =  form
				form = Place_New_Order
				record event = on add or edit

				field rules
				{
					actions  (Order_Type == "Package")
					{
						hide Subtotal,Total_Amount,Tax_Amount;
					}
					actions 
					{
						disable Tax_Amount,Total_Amount,Subtotal;
						hide Hidden_Fields;
					}
				}

			}
			Run_Scripts_On_Always24 as "Run Scripts On Always"
			{
				type =  form
				form = Place_New_Order
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											disable Order_Details.Unit_Price;
										disable Order_Details.Amount;
										hide Order_Type;
										hide Order_Status;
						)
					}
				}

			}
			Run_Scripts_On_Always25 as "Run Scripts On Always"
			{
				type =  form
				form = Place_New_Order
				record event = on add or edit

				on validate
				{
					actions  (Order_Type == "Package")
					{
						custom deluge script
						(
											input.Product_Quantity = input.Order_Details.sum(Quantity);
										if(Order_Type == "Package")
										{
											detail_map = thisapp.Order.Fetch_Subscription_Details(input.Service,input.Customer);
											usage = detail_map.get("Remaining_Usage");
											if(input.Product_Quantity > usage)
											{
												alert "You can only place order upto " + usage + " quantities or use ordinary";
												cancel submit;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always26 as "Run Scripts On Always"
			{
				type =  form
				form = Place_New_Order
				record event = on add or edit

				on success
				{
					actions  (Pickup_Type == "Door Pickup" && Pickup_Staff is not null)
					{
					pushnotification
					(
						sender type : "fields"
						to : "${Pickup_Staff_User}"
						title : "New Pickup assigned for you"
						message : "${zoho.loginuserid} has assigned a new pickup for you"
						view : "Pickup_Map"
					)
					}
					actions  (Order_Type == "Package")
					{
						custom deluge script
						(
											detail_map = thisapp.Order.Fetch_Subscription_Details(input.Service,input.Customer);
										if(detail_map.get("Subscription") == true && detail_map.get("Status") == "Active" || detail_map.get("Status") == "Pickup Limit Reached")
										{
											subscription_rec = Add_New_Subscription[Customer == input.Customer && Service == input.Service];
											if(detail_map.get("Pickup") == "Not Available")
											{
												subscription_rec.Status="Pickup Limit Reached";
											}
											if(detail_map.get("Remaining_Usage") == 0)
											{
												subscription_rec.Status="Usage Limit Reached";
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always27 as "Run Scripts On Always"
			{
				type =  form
				form = Place_New_Order
				record event = on add or edit

				on user input of Order_Details.Product
				{
					actions  (Order_Type == "Ordinary")
					{
						custom deluge script
						(
											if(row.Product != null)
										{
											row.Unit_Price=Add_Rate[Product == row.Product && Service == input.Service].Charge;
											if(row.Quantity != null)
											{
												row.Amount=row.Unit_Price * row.Quantity;
												input.Subtotal = input.Order_Details.sum(Amount);
												tax = input.Service.Tax_Percent;
												if(tax != null)
												{
													input.Tax_Amount = input.Subtotal * tax / 100;
												}
												input.Total_Amount = input.Tax_Amount + input.Subtotal;
											}
										}
										else
										{
											row.Unit_Price=null;
											row.Amount=null;
											input.Subtotal = input.Order_Details.sum(Amount);
											tax = input.Service.Tax_Percent;
											if(tax != null)
											{
												input.Tax_Amount = input.Subtotal * tax / 100;
											}
											input.Total_Amount = input.Tax_Amount + input.Subtotal;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always28 as "Run Scripts On Always"
			{
				type =  form
				form = Place_New_Order
				record event = on add or edit

				on user input of Pickup_Type
				{
					actions 
					{
						custom deluge script
						(
											if(Pickup_Type != null)
										{
											if(Pickup_Type == "Door Pickup")
											{
												input.Pickup_Address = input.Customer.Address;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always29 as "Run Scripts On Always"
			{
				type =  form
				form = Place_New_Order
				record event = on add or edit

				on user input of Delivery_Type
				{
					actions 
					{
						custom deluge script
						(
											if(Delivery_Type != null)
										{
											if(Delivery_Type == "Door Delivery")
											{
												input.Delivery_Address = input.Customer.Address;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always30 as "Run Scripts On Always"
			{
				type =  form
				form = Place_New_Order
				record event = on add or edit

				on user input of Order_Details.Quantity
				{
					actions  (Order_Type == "Ordinary")
					{
						custom deluge script
						(
											if(row.Quantity != null)
										{
											if(row.Quantity < 1)
											{
												alert "Enter a valid quantity";
												row.Quantity=null;
											}
											else
											{
												if(row.Unit_Price != null)
												{
													row.Amount=row.Unit_Price * row.Quantity;
													input.Subtotal = input.Order_Details.sum(Amount);
													tax = input.Service.Tax_Percent;
													if(tax != null)
													{
														input.Tax_Amount = input.Subtotal * tax / 100;
													}
													input.Total_Amount = input.Tax_Amount + input.Subtotal;
												}
											}
										}
										else
										{
											row.Amount=null;
											input.Subtotal = input.Order_Details.sum(Amount);
											tax = input.Service.Tax_Percent;
											if(tax != null)
											{
												input.Tax_Amount = input.Subtotal * tax / 100;
											}
											input.Total_Amount = input.Tax_Amount + input.Subtotal;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always31 as "Run Scripts On Always"
			{
				type =  form
				form = Place_New_Order
				record event = on add or edit

				on add row of Order_Details
				{
					actions  (Order_Type == "Ordinary")
					{
						custom deluge script
						(
											all_products = Add_Product[ID != 0].ID.getAll();
										selected_products = input.Order_Details.Product.getall();
										all_products.removeAll(selected_products);
										row.Product:ui.add(all_products);
						)
					}
				}

			}
			Run_Scripts_On_Always32 as "Run Scripts On Always"
			{
				type =  form
				form = Place_New_Order
				record event = on add or edit

				on delete row of Order_Details
				{
					actions  (Order_Type == "Ordinary")
					{
						custom deluge script
						(
											input.Subtotal = input.Subtotal - ifnull(row.Amount,0);
										tax = input.Service.Tax_Percent;
										if(tax != null)
										{
											input.Tax_Amount = input.Subtotal * tax / 100;
										}
										input.Total_Amount = input.Tax_Amount + input.Subtotal;
										all_products = Add_Product[ID != 0].ID.getAll();
										selected_products = input.Order_Details.Product.getall();
										all_products.removeAll(selected_products);
										row.Product:ui.add(all_products);
						)
					}
				}

			}
		}

		schedule
		{
			Renewal_Reminder as "Renewal Reminder"
			{
				type =  schedule
				form = Add_New_Subscription[Status != "Cancelled"]
				start = Expiry_Date at "11:00:00"
				frequency = daily
				time zone = "Asia/Kolkata"
				on start
				{
					actions  (Expiry_Date is today)
					{
						sendmail
						(
							from : "zoho.adminuserid"
							to : Customer.Email
							subject : "Package Expiry Alert"
							message : "Hi ${Customer.Name},<div><br></div><div>&nbsp; &nbsp; &nbsp; Your pack for ${Package.Package_Name} will be expired by today(${Expiry_Date}). So kindly contact admin for your package renewal.</div><div><br></div><div>Thank you.</div>"
						)
					}
				}
			}
			Expiry_Updation as "Expiry Updation"
			{
				type =  schedule
				form = Add_New_Subscription[Status != "Cancelled"]
				start = Expiry_Date at "23:00:00"
				frequency = daily
				time zone = "Asia/Kolkata"
				on start
				{
					actions  (Expiry_Date is today)
					{
					on load
					(
						rec = Add_New_Subscription[ID == input.ID];
										rec.Status="Validity Expired";
					)
						sendmail
						(
							from : "zoho.adminuserid"
							to : Customer.Email
							subject : "Package Expired"
							message : "Hi ${Customer.Name},<div><br></div><div>&nbsp; &nbsp; &nbsp; Your pack for&nbsp;${Package.Package_Name} has been expired, For renewal please contact admin.</div><div><br></div><div>Thank you.</div>"
						)
					}
				}
			}
		}



		functions
		{
			Usage_Details as "Usage Details"
			{
				type =  functions
				form = Add_New_Subscription
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.Subscription.Usage(Add_New_Subscription);
					}
				}
			}
			Start_Process as "Start Process"
			{
				type =  functions
				form = Place_New_Order
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.Order.Start_Process(Place_New_Order);
					}
				}
			}
			Renew as "Renew"
			{
				type =  functions
				form = Add_New_Subscription
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.Subscription.Renew(Add_New_Subscription);
					}
				}
			}
			Cancel as "Cancel"
			{
				type =  functions
				form = Add_New_Subscription
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.Subscription.Cancel(Add_New_Subscription);
					}
				}
			}
			Ready_For_Delivery as "Ready For Delivery"
			{
				type =  functions
				form = Place_New_Order
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.Order.Ready_For_Delivery(Place_New_Order);
					}
				}
			}
			Delivered as "Delivered"
			{
				type =  functions
				form = Place_New_Order
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.Order.Delivery(Place_New_Order);
					}
				}
			}
			Delivered1 as "Delivered"
			{
				type =  functions
				form = Place_New_Order
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.Order.Delivery(Place_New_Order);
					}
				}
			}
			Pickup_Done as "Pickup Done"
			{
				type =  functions
				form = Place_New_Order
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.Order.pickup_done(Place_New_Order);
					}
				}
			}
			Assign_Pickup as "Assign Pickup"
			{
				type =  functions
				form = Place_New_Order
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.Order.assign_pickup(Place_New_Order);
					}
				}
			}
		}
	}
	share_settings
	{
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have all the permissions.\n"
			}
			"Delivery Staff"
			{
				name = "Delivery Staff"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Delivery Staff Profile\n"
				ModulePermissions
				{
					Place_New_Order
					{
						enabled= Viewall,Modifyall 
						ReportPermissions
						{
							My_Pickups={"View"}
							Pickup_Map={"View","Edit"}
							My_Deliveries={"View"}
							Delivery_Map={"View","Edit"}
						}
						FieldPermissions
						{
							Order_Id{visibility:true,readonly:false}
							Order_Status{visibility:true,readonly:false}
							Customer_Signature{visibility:true,readonly:false}
							Delivery_Address{visibility:true,readonly:false}
							Total_Amount{visibility:true,readonly:false}
							Pickup_Staff{visibility:false,readonly:false}
							Customer{visibility:true,readonly:false}
							Pickup_Address{visibility:false,readonly:false}
							Customer_Signature1{visibility:false,readonly:false}
							Pickup_Staff_User{visibility:false,readonly:false}
							Tax_Amount{visibility:true,readonly:false}
							Order_Type{visibility:true,readonly:false}
							plain2{visibility:true,readonly:false}
							Charges{visibility:true,readonly:false}
							Delivery_Type{visibility:true,readonly:false}
							Organisation{visibility:true,readonly:false}
							Order_Details{visibility:true,readonly:false}
							Pickup{visibility:false,readonly:false}
							Delivery_Staff{visibility:true,readonly:false}
							Delivery_Date{visibility:true,readonly:false}
							Delivery_Staff_User{visibility:true,readonly:false}
							Subtotal{visibility:true,readonly:false}
							Service{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Product_Quantity{visibility:true,readonly:false}
							Preferred_Pickup_Time{visibility:false,readonly:false}
							Hidden_Fields{visibility:false,readonly:false}
							Pickup_Type{visibility:false,readonly:false}
							Delivery_Charge{visibility:true,readonly:false}
							Tag_Id{visibility:true,readonly:false}
							Pickup_Charge{visibility:true,readonly:false}
						}
					}
					Add_New_Package
					{
						FieldPermissions
						{
							Pick_Up_Delivery{visibility:true,readonly:false}
							Amount{visibility:true,readonly:false}
							Product_Usage_Limit{visibility:true,readonly:false}
							Service{visibility:true,readonly:false}
							Validity_In_Months{visibility:true,readonly:false}
							Limit{visibility:true,readonly:false}
							Package_Name{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
						}
					}
					Add_Product
					{
						FieldPermissions
						{
							Services_and_Rates{visibility:true,readonly:false}
							Product_Name{visibility:true,readonly:false}
							Image{visibility:false,readonly:false}
							Section{visibility:true,readonly:false}
						}
					}
					Add_Order_Details
					{
						FieldPermissions
						{
							Order_Id{visibility:true,readonly:false}
							Amount{visibility:true,readonly:false}
							Quantity{visibility:true,readonly:false}
							Product{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Unit_Price{visibility:true,readonly:false}
						}
					}
					Add_Organisation_Info
					{
						FieldPermissions
						{
							Organisation_Name{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							Phone_Number{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Logo{visibility:false,readonly:false}
						}
					}
					Add_New_Subscription
					{
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Expiry_Date{visibility:true,readonly:false}
							Organisation{visibility:false,readonly:false}
							Total_Amount{visibility:false,readonly:false}
							Customer{visibility:true,readonly:false}
							Service{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Reason{visibility:true,readonly:false}
							Tax_Amount{visibility:false,readonly:false}
							Registered_On{visibility:true,readonly:false}
							Transactions{visibility:true,readonly:false}
							Subscription_Charge{visibility:false,readonly:false}
							Refund_Amount{visibility:true,readonly:false}
							Package{visibility:true,readonly:false}
							Subscription_Id{visibility:true,readonly:false}
						}
					}
					Add_Customer
					{
						FieldPermissions
						{
							Email{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							Send_Portal_Invitation{visibility:true,readonly:false}
							Phone_Number{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Name{visibility:true,readonly:false}
						}
					}
					Add_Transaction
					{
						FieldPermissions
						{
							Total_Amount{visibility:true,readonly:false}
							Customer{visibility:true,readonly:false}
							Service{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Tax_Amount{visibility:true,readonly:false}
							Billed_On{visibility:true,readonly:false}
							Type{visibility:true,readonly:false}
							Subscription_Charge{visibility:true,readonly:false}
							Valid_Till{visibility:true,readonly:false}
							Package{visibility:true,readonly:false}
							Subscription_Id{visibility:true,readonly:false}
							Transaction_Id{visibility:true,readonly:false}
						}
					}
					Add_Delivery_Staff
					{
						enabled= Viewall 
						ReportPermissions
						{
							My_Profile1={"View"}
						}
						FieldPermissions
						{
							Phone_Number{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Image{visibility:false,readonly:false}
							Section{visibility:true,readonly:false}
							Name{visibility:true,readonly:false}
						}
					}
					Add_Service
					{
						FieldPermissions
						{
							Tax_Percent{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Service_Name{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
						}
					}
					Add_Rate
					{
						FieldPermissions
						{
							Charge{visibility:true,readonly:false}
							Service{visibility:true,readonly:false}
							Product{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
						}
					}
				}
			}
			"Customer Profile"
			{
				name = "Customer Profile"
				type = Customer_Portal
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Customer Profile Profile\n"
				ModulePermissions
				{
					Place_New_Order
					{
						enabled= Create,Viewall,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Orders={"View"}
						}
					}
					Add_New_Package
					{
						enabled= Viewall 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Packages={"View"}
						}
					}
					Add_New_Subscription
					{
						enabled= Viewall 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Subscriptions={"View"}
						}
					}
					Add_Customer
					{
						enabled= Viewall 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Profile={"View"}
						}
					}
					Add_Rate
					{
						enabled= Viewall 
						allFieldsVisible= true 
						ReportPermissions
						{
							Rate_Chart={"View"}
						}
					}
					Service_Usage_Details
					{
						enabled = tab
					}
				}
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users.\n\n"
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 9
		icons = true
		icons style = outline
		font = "lato"
		color options
    	{
        color = "5"
    	}
    	icon
    	{
        	type = "1"
        	name = "zc-ab-finance6"
        	background color = "green"
        	foreground color = "#FFFFFF"
    	}
    	logo
    	{
        	preference = "none"
        	placement = "left"
    	}
	}


	phone
	{
		section  Dashboard
		{
			icon = "ui-1-dashboard-half"
			page Service_Usage_Details
			{
				icon = "business-scale"
				hide = true
			}
			page Dashboard
			{
				icon = "ui-1-dashboard-half"
			}
		}
		section  Requests
		{
			icon = "ui-3-phone-call"
		}
		section  Pickup1
		{
			displayname= "Pickup"
		}
		section  Orders
		{
			icon = "shopping-list"
			list All_Order_Details
			{
				icon = "travel-world"
				hide = true
			}
			form  Place_New_Order
			{
				layout = auto
				icon = "users-2-child"
			}
			list Pending_Orders
			{
				icon = "travel-world"
			}
			list In_Process
			{
				icon = "shopping-list"
			}
			summary My_Orders
			{
				icon = "shopping-pos"
			}
			list All_Orders
			{
				icon = "shopping-box"
			}
			calendar Pickup_Calendar
			{
				icon = "ui-1-calendar-60"
			}
			map Pickup_Map
			{
				icon = "users-2-pin"
			}
			list My_Pickups
			{
				icon = "users-man-glasses"
			}
			list Pickup_Requests
			{
				icon = "tech-2-l-system-update"
			}
		}
		section  Delivery
		{
			icon = "shopping-delivery"
			calendar Delivery_Calendar
			{
				icon = "ui-1-calendar-60"
			}
			list Customer_Pickups
			{
				icon = "envir-car"
			}
			map Delivery_Map
			{
				icon = "location-map-pin"
			}
			list My_Deliveries
			{
				icon = "shopping-delivery-time"
			}
		}
		section  Subscriptions
		{
			icon = "users-badge-13"
			form  Add_New_Subscription
			{
				layout = auto
				icon = "food-hob"
			}
			list All_Subscriptions
			{
				icon = "travel-world"
			}
			list Transaction_History
			{
				icon = "travel-world"
			}
			summary My_Subscriptions
			{
				icon = "business-cheque"
			}
		}
		section  Customer1
		{
			displayname= "Customer"
			form  Add_Customer
			{
				layout = auto
				icon = "users-2-woman-up"
			}
			custom All_Customers
			{
				icon = "travel-world"
			}
			summary My_Profile
			{
				icon = "shopping-mobile-touch"
			}
		}
		section  Staff1
		{
			displayname= "Staff"
			icon = "shopping-delivery"
			form  Add_Delivery_Staff
			{
				layout = auto
				icon = "shopping-delivery-time"
			}
			custom Delivery_Staffs
			{
				icon = "shopping-delivery-time"
			}
			custom My_Profile1
			{
				icon = "shopping-mobile-touch"
			}
		}
		section  Packages
		{
			icon = "shopping-box"
			form  Add_New_Package
			{
				layout = auto
				icon = "clothes-backpack"
				hide = true
			}
		}
		section  Products
		{
			icon = "shopping-gift"
			form  Add_Product
			{
				layout = auto
				icon = "users-2-woman-up"
				hide = true
			}
		}
		section  Services
		{
			icon = "travel-church"
			form  Add_Service
			{
				layout = auto
				icon = "tech-2-l-add"
				hide = true
			}
		}
		section  Settings
		{
			icon = "ui-1-settings-gear-65"
			form  Add_Organisation_Info
			{
				layout = auto
				icon = "users-2-a-add"
				hide = true
			}
			summary Organisation_Info
			{
				icon = "travel-world"
			}
			custom Available_Services
			{
				icon = "travel-church"
			}
			custom Products
			{
				icon = "travel-world"
			}
			custom Rate_Chart
			{
				icon = "social-1-logo-yelp"
			}
			summary All_Packages
			{
				icon = "travel-world"
			}
		}
		section  Rates
		{
			icon = "social-1-logo-yelp"
			form  Add_Rate
			{
				layout = auto
				icon = "social-1-logo-yelp"
				hide = true
			}
		}
		section  Transactions
		{
			icon = "social-1-logo-buysellads"
			form  Add_Transaction
			{
				layout = auto
				icon = "business-award-49"
				hide = true
			}
		}
		section  Order_Details
		{
			displayname= "Order Details"
			icon = "shopping-basket-edit"
			form  Add_Order_Details
			{
				layout = auto
				icon = "shopping-basket-edit"
				hide = true
			}
		}
		customize
		{
        	layout = onecolumn
		 	icons style = outline
        	font = "lato"
            style = "3"
        	color options
        	{
             	color = green
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	tablet
	{
		section  Dashboard
		{
			page Service_Usage_Details
			{
				icon = "business-scale"
				hide = true
			}
			page Dashboard
			{
				icon = "ui-1-dashboard-half"
			}
		}
		section  Requests
		{
		}
		section  Pickup1
		{
			displayname= "Pickup"
		}
		section  Orders
		{
			list All_Order_Details
			{
				icon = "travel-world"
				hide = true
			}
			form  Place_New_Order
			{
				layout = auto
				icon = "users-2-child"
			}
			list Pending_Orders
			{
				icon = "travel-world"
			}
			list In_Process
			{
				icon = "shopping-list"
			}
			summary My_Orders
			{
				icon = "shopping-pos"
			}
			list All_Orders
			{
				icon = "shopping-box"
			}
			calendar Pickup_Calendar
			{
				icon = "ui-1-calendar-60"
			}
			map Pickup_Map
			{
				icon = "users-2-pin"
			}
			list My_Pickups
			{
				icon = "users-man-glasses"
			}
			list Pickup_Requests
			{
				icon = "tech-2-l-system-update"
			}
		}
		section  Delivery
		{
			calendar Delivery_Calendar
			{
				icon = "ui-1-calendar-60"
			}
			list Customer_Pickups
			{
				icon = "envir-car"
			}
			map Delivery_Map
			{
				icon = "location-map-pin"
			}
			list My_Deliveries
			{
				icon = "shopping-delivery-time"
			}
		}
		section  Subscriptions
		{
			form  Add_New_Subscription
			{
				layout = auto
				icon = "food-hob"
			}
			list All_Subscriptions
			{
				icon = "travel-world"
			}
			list Transaction_History
			{
				icon = "travel-world"
			}
			summary My_Subscriptions
			{
				icon = "business-cheque"
			}
		}
		section  Customer1
		{
			displayname= "Customer"
			form  Add_Customer
			{
				layout = auto
				icon = "users-2-woman-up"
			}
			custom All_Customers
			{
				icon = "travel-world"
			}
			summary My_Profile
			{
				icon = "shopping-mobile-touch"
			}
		}
		section  Staff1
		{
			displayname= "Staff"
			form  Add_Delivery_Staff
			{
				layout = auto
				icon = "shopping-delivery-time"
			}
			custom Delivery_Staffs
			{
				icon = "shopping-delivery-time"
			}
			custom My_Profile1
			{
				icon = "shopping-mobile-touch"
			}
		}
		section  Packages
		{
			form  Add_New_Package
			{
				layout = auto
				icon = "clothes-backpack"
				hide = true
			}
		}
		section  Products
		{
			form  Add_Product
			{
				layout = auto
				icon = "users-2-woman-up"
				hide = true
			}
		}
		section  Services
		{
			form  Add_Service
			{
				layout = auto
				icon = "tech-2-l-add"
				hide = true
			}
		}
		section  Settings
		{
			form  Add_Organisation_Info
			{
				layout = auto
				icon = "users-2-a-add"
				hide = true
			}
			summary Organisation_Info
			{
				icon = "travel-world"
			}
			custom Available_Services
			{
				icon = "travel-church"
			}
			custom Products
			{
				icon = "travel-world"
			}
			custom Rate_Chart
			{
				icon = "social-1-logo-yelp"
			}
			summary All_Packages
			{
				icon = "travel-world"
			}
		}
		section  Rates
		{
			form  Add_Rate
			{
				layout = auto
				icon = "social-1-logo-yelp"
				hide = true
			}
		}
		section  Transactions
		{
			form  Add_Transaction
			{
				layout = auto
				icon = "business-award-49"
				hide = true
			}
		}
		section  Order_Details
		{
			displayname= "Order Details"
			form  Add_Order_Details
			{
				layout = auto
				icon = "shopping-basket-edit"
				hide = true
			}
		}
		customize
		{
        	layout = onecolumn
		 	icons style = outline
        	font = "lato"
            style = "3"
        	color options
        	{
             	color = green
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	
}
