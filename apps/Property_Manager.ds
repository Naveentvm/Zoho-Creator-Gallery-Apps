/*
 * Author       : wapope7431_asuflex
 * Generated on : 10-May-2023 16:18:14
 * Version      : 1.0
 */
 application "Property Manager"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "Asia/Kolkata"
 	time format = "24-hr"
 	section Hidden
	{
		icon = "ui-2-menu-bold"
		form Add_Property_type
		{
			displayname = "Add Property type"
			success message = "Property type is Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Property_Type
			(
    			type = text
				displayname = "Property Type"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Amenities
		{
			displayname = "Add Amenities"
			success message = "Amenity Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Amenities
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Block
		{
			displayname = "Add Block"
			success message = "Block Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Property_Name
			(
				type = picklist	
				displayname = "Property Name"
				values  = Add_Property.ID
    			bidirectional = Blocks
    			displayformat = [Property_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Block
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Floors
			(
				type = list	
				values  = Add_Floor.ID
    			bidirectional = Block
    			displayformat = [Floor]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Floor
		{
			displayname = "Add Floor"
			success message = "Floor Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Property_Name
			(
				type = picklist	
				displayname = "Property Name"
				values  = Add_Property.ID
    			displayformat = [Property_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Block
			(
				type = picklist	
				values  = Add_Block[Property_Name == input.Property_Name].ID
    			bidirectional = Floors
    			displayformat = [Block]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Floor
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Managers
		{
			displayname = "Add Managers"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Manager_Name
			(
    			type = name
				displayname = "Manager Name"
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Contact_Number
			(
    			type = phonenumber
				displayname = "Contact Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Manager_Signature
			(
    			type = signature
				displayname = "Manager Signature"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Managing_Units
			(
				type = list	
				displayname = "Managing Units"
				values  = Add_Unit_Details.ID
    			bidirectional = Manager_Email
    			displayformat = [Unit_Name]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Services
		{
			displayname = "Add Services"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Service
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Add_Services_Report
		{
			displayName = "Add Services Report"
   			hide = true
			show all rows from Add_Services    
			(
				Service
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Service
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Service
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Add_Location
		{
			displayname = "Add Location"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Location
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Add_Location_Report
		{
			displayName = "Add Location Report"
   			hide = true
			show all rows from Add_Location    
			(
				Location
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Location
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Location
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Assign_task
		{
			displayname = "Assign task"
			captcha = true
			store data in zc = false
			success message = ""
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Complaint_ID
			(
				type = picklist	
				displayname = "Complaint ID"
				values  = Raise_a_Complaint[Complaint_Status != "Completed" && Assigned_to is null].ID
    			displayformat = [Complaint_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Details
			(
    			type = plaintext
				value = ""
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Assign_to
			(
				type = picklist	
				displayname = "Assign to"
				values  = Add_Staff.ID
    			displayformat = [User_ID + " - " + Name.first_name]
				allow new entries = true
				[
					displayname = "Add New User"
				]
				sortorder = ascending
	 			row = 1
	 			column = 2   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				Assign
				(
   					type = submit
   					displayname = "Assign"
				)
				Reset
				(
   					type = reset
   					displayname = "Reset"
				)
			}
		}
	}
	section Dashboard
	{
		icon = "ui-1-dashboard-half"
				 page Dashboard 
	 	 { 
 	 	 displayname = "Dashboard"

 	 	 icon = "" 
	 	 Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Dashboard1' elementName=\"HTML Snippet\"\n bgColor=\"\" \n>\n\t<![CDATA[htmlpage Dashboard1()\ncontent\n&lt;%{\n\t%&gt;\n&lt;style&gt;\n\t\t\t\t\t\t\t\t\t  .container-fluid{\n\t\t\t\t\t\t\t\t\t  padding:0;\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  .color1{\n\t\t\t\t\t\t\t\t\t  color: #5faa87 !important;\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  .color2{\n\t\t\t\t\t\t\t\t\t    color: #39c7d5 !important;\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  .color3{\n\t\t\t\t\t\t\t\t\t      color: #a039d5 !important;\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  .co1s{\n\t\t\t\t\t\t\t\t\t\theight:400px;\n\t\t\t\t\t\t\t\t\t    margin:1% 0 2% 0;\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  .col-md-3{\n\t\t\t\t\t\t\t\t\t  padding:0;}\n\t\t\t\t\t\t\t\t\t  #zohoreportel{\n\t\t\t\t\t\t\t\t\t height:350px !important;\n\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  #prop_stats{\n\t\t\t\t\t\t\t\t\t  margin:1% 0;\n\t\t\t\t\t\t\t\t\t  box-sizing:border-box;\n\t\t\t\t\t\t\t\t\t  height: 100% !important;\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  #prop_stats .view-outer-wrapper{\n\t\t\t\t\t\t\t\t\t \t\theight:400px;\n\t\t\t\t\t\t\t\t\t        overflow:hidden;\n\t\t\t\t\t\t\t\t\t\t\tborder-radius:5px;\n\t\t\t\t\t\t\t\t\t  \t\tbox-sizing:border-box;\n\t\t\t\t\t\t\t\t\t\t  \tborder: 1px solid #ececec;\n\t\t\t\t\t\t\t\t\t  \t}\n\t\t\t\t\t\t\t\t\t.view-header&gt;.row h3 {\n\t\t\t\t\t\t\t\t\t    font-size: 21px;\n\t\t\t\t\t\t\t\t\t    color: #633f08;\n\t\t\t\t\t\t\t\t\t    font-weight: 300;\n\t\t\t\t\t\t\t\t\t    line-height: 40px;\n\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t\t  .tripleshot_box{\n\t\t\t\t\t\t\t\t\t  height:49%;\n\t\t\t\t\t\t\t\t\t  border:1px solid #efefef;\n\t\t\t\t\t\t\t\t\t  position:relative;\n\t\t\t\t\t\t\t\t\t  margin:1% 0 2% 0;\n\t\t\t\t\t\t\t\t\t  box-sizing:border-box;\n\t\t\t\t\t\t\t\t\t  border-radius:5px;\n\t\t\t\t\t\t\t\t\t  }\t\n\t\t\t\t\t\t\t\t\t  .tripleshot_headdiv{\n\t\t\t\t\t\t\t\t\t\t  height:28%;\n\t\t\t\t\t\t\t\t\t  border-bottom:1px solid #efefef;\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  .tripleshot_headtext{\n\t\t\t\t\t\t\t\t\t \theight: 100%;\n\t\t\t\t\t\t\t\t\t\/\/    padding: 3%;\n\t\t\t\t\t\t\t\t\t\tpadding:12px;\n\t\t\t\t\t\t\t\t\t    box-sizing: border-box;\n\t\t\t\t\t\t\t\t\t    font-size: 19px;\n\t\t\t\t\t\t\t\t\t    font-weight: 300;\n\t\t\t\t\t\t\t\t\t    color: #5e3900;}\n\t\t\t\t\t\t\t\t\t\t  .tripleshot_bodydiv{\n\t\t\t\t\t\t\t\t\t  \t\t\theight:68%;\n\t\t\t\t\t\t\t\t\t  \t\t\tmargin:1% 0 0 0 ;\n\t\t\t\t\t\t\t\t\t\/\/  \t\t\tbackground:#fefefe;\n\t\t\t\t\t\t\t\t\t\t\t\tbackground:#fcfcfc;\n\t\t\t\t\t\t\t\t\t  \t\t\tborder-top:1px solid #fdfdfd;\n\t\t\t\t\t\t\t\t\t  \t\t\tbox-sizing:border-box;\n\t\t\t\t\t\t\t\t\t  \t\t\t}\n\t\t\t\t\t\t\t\t\t  .tripleshot_singlebox{\n\t\t\t\t\t\t\t\t\t  width:30%;\n\t\t\t\t\t\t\t\t\t  height:90%;\n\t\t\t\t\t\t\t\t\t  margin:2% 1%;\n\t\t\t\t\t\t\t\t\t  float:left;\n\t\t\t\t\t\t\t\t\t  white-space:nowrap;\n\t\t\t\t\t\t\t\t\t  overflow:hidden;\n\t\t\t\t\t\t\t\t\t  text-overflow:ellipsis; \n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  .tripleshot_bodydesc{\n\t\t\t\t\t\t\t\t\t  font-size:14px;\n\t\t\t\t\t\t\t\t\t  color:#7f7474;\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  .tripleshot_bodycounttext{\n\t\t\t\t\t\t\t\t\t  font-size:17px;\n\t\t\t\t\t\t\t\t\t  color:#5e3900;}  \n\t\t\t\t\t\t\t\t\t  .zc-calendar-width{\n\t\t\t\t\t\t\t\t\t  max-height:100% !important;}\n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t  .quicklinks_li{\n\t\t\t\t\t\t\t\t\t  height: 42px;\n\t\t\t\t\t\t\t\t\t\/\/    width: 45%;\n\t\t\t\t\t\t\t\t\t\/\/  float: left;\n\t\t\t\t\t\t\t\t\t\/\/    margin: 2%;\n\t\t\t\t\t\t\t\t\t\/\/    text-align: center;\n\t\t\t\t\t\t\t\t\t    box-sizing: border-box;\n\t\t\t\t\t\t\t\t\t    font-size: 16px;\n\t\t\t\t\t\t\t\t\t\/\/    padding: 5px;\n\t\t\t\t\t\t\t\t\t  overflow:hidden;\n\t\t\t\t\t\t\t\t\t  text-indent:15px;\n\t\t\t\t\t\t\t\t\t  text-overflow:ellipsis;\n\t\t\t\t\t\t\t\t\t  white-space:nowrap;\n\t\t\t\t\t\t\t\t\t  font-weight:300;\n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t .quicklinks_li a{\n\t\t\t\t\t\t\t\t\t  color:#5e3900;\n\t\t\t\t\t\t\t\t\t  font-weight:300;}\n\t\t\t\t\t\t\t\t\t  .form_overlay{\n\t\t\t\t\t\t\t\t\t  width:100%;}\n\t\t\t\t\t\t\t\t\t  .form_embed{\n\t\t\t\t\t\t\t\t\t      position: absolute;\n\t\t\t\t\t\t\t\t\t    z-index: 99;\n\t\t\t\t\t\t\t\t\t    margin: 8%;\n\t\t\t\t\t\t\t\t\t    background: #d8d0d0;\n\t\t\t\t\t\t\t\t\t    height: 65% !important;\n\t\t\t\t\t\t\t\t\t    width: 75%;\n\t\t\t\t\t\t\t\t\t    overflow: hidden;}\n\t\t\t\t\t\t\t\t\t  &lt;\/style&gt;\n&lt;%\n\tgetPropRec = Add_Property[ID != 0];\n\tif(getPropRec.count() == 0)\n\t{\n\t\topenUrl(&quot;#Form:Add_Property&quot;,&quot;popup window&quot;);\n\t}\n\t%&gt;\n&lt;div class=&quot;container-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t  &lt;div class=&quot;row&quot; style=&quot;margin:1%;display:inline-block;width:98%;margin-bottom:0;&quot;&gt;\n\t\t\t\t\t\t\t\t\t  \t&lt;div class=&quot;col-md-3  co1s&quot;&gt;\n\t\t\t\t\t\t\t\t\t    &lt;div class=&quot;tripleshot_box&quot;&gt; &lt;div class=&quot;tripleshot_headdiv&quot;&gt; &lt;div class=&quot;tripleshot_headtext&quot;&gt; Revenue &lt;\/div&gt; &lt;\/div&gt;&lt;div class=&quot;tripleshot_bodydiv&quot;&gt;&lt;div class=&quot;tripleshot_singlebox&quot;&gt;&lt;div style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;#Report:Rental_Payment_Details?Status=Not Paid&quot; target=&quot;_blank&quot;&gt;&lt;h3 class=&quot;tripleshot_bodycounttext color1&quot;&gt;&lt;%=thisapp.AdminDashboard.Revenue_Rent()%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;span class=&quot;tripleshot_bodydesc&quot;&gt; Rent &lt;\/span&gt;&lt;div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;div class=&quot;tripleshot_singlebox&quot; style=&quot;width:33%;&quot;&gt;&lt;div style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;#Report:Rental_Payment_Details?Status=Overdue&quot; target=&quot;_blank&quot;&gt;&lt;h3 class=&quot;tripleshot_bodycounttext color2&quot;&gt;&lt;%=thisapp.AdminDashboard.Revenue_Overdue()%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;span class=&quot;tripleshot_bodydesc&quot;&gt; Overdue &lt;\/span&gt;&lt;div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;div class=&quot;tripleshot_singlebox&quot;&gt;&lt;div style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;#Report:Rental_Payment_Details?Status=Paid&quot; target=&quot;_blank&quot;&gt;&lt;h3 class=&quot;tripleshot_bodycounttext color3&quot;&gt;&lt;%=thisapp.AdminDashboard.Revenue_Paid()%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;span class=&quot;tripleshot_bodydesc&quot;&gt; Received &lt;\/span&gt;&lt;div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t    &lt;div class=&quot;tripleshot_box&quot;&gt; &lt;div class=&quot;tripleshot_headdiv&quot;&gt; &lt;div class=&quot;tripleshot_headtext&quot;&gt; Complaints &lt;\/div&gt; &lt;\/div&gt;&lt;div class=&quot;tripleshot_bodydiv&quot;&gt;&lt;div class=&quot;tripleshot_singlebox&quot;&gt;&lt;div style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;#Report:Complaints_List&quot; target=&quot;_blank&quot;&gt;&lt;h3 class=&quot;tripleshot_bodycounttext color1&quot;&gt;&lt;%=thisapp.AdminDashboard.Complaints_Reported()%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;span class=&quot;tripleshot_bodydesc&quot;&gt; Reported &lt;\/span&gt;&lt;div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;div class=&quot;tripleshot_singlebox&quot; style=&quot;width:33%;&quot;&gt;&lt;div style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;#Report:Complaints_List?Complaint_Status=Overdue&quot; target=&quot;_blank&quot;&gt;&lt;h3 class=&quot;tripleshot_bodycounttext color2&quot;&gt;&lt;%=thisapp.AdminDashboard.Complaints_Overdue()%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;span class=&quot;tripleshot_bodydesc&quot;&gt; Overdue  &lt;\/span&gt;&lt;div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;div class=&quot;tripleshot_singlebox&quot;&gt;&lt;div style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;#Report:Complaints_List?Complaint_Status=Completed&quot; target=&quot;_blank&quot;&gt;&lt;h3 class=&quot;tripleshot_bodycounttext color3&quot;&gt;&lt;%=thisapp.AdminDashboard.Complaints_Completed()%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;span class=&quot;tripleshot_bodydesc&quot;&gt; Completed &lt;\/span&gt;&lt;div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t  \t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-6&quot; id=&quot;prop_stats&quot; zc_mobileView=&apos;inline&apos; elName=&apos;zc-component&apos; reportLinkName=&apos;Property_Stats&apos; params=&apos;zc_Header=true&apos;&gt;Loading Report...&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t   \t&lt;div class=&quot;col-md-3 co1s&quot;&gt;\n\t\t\t\t\t\t\t\t\t      &lt;div class=&quot;tripleshot_box&quot;&gt; &lt;div class=&quot;tripleshot_headdiv&quot;&gt; &lt;div class=&quot;tripleshot_headtext&quot;&gt; Visitors &lt;\/div&gt; &lt;\/div&gt;&lt;div class=&quot;tripleshot_bodydiv&quot;&gt;&lt;div class=&quot;tripleshot_singlebox&quot;&gt;&lt;div style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;#Report:Visitors_Details?Check_in_op=32&quot; target=&quot;_blank&quot;&gt;&lt;h3 class=&quot;tripleshot_bodycounttext color1&quot;&gt;&lt;%=thisapp.AdminDashboard.Visitors_Today()%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;span class=&quot;tripleshot_bodydesc&quot;&gt; Today &lt;\/span&gt;&lt;div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;div class=&quot;tripleshot_singlebox&quot; style=&quot;width:33%;&quot;&gt;&lt;div style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;#Report:Visitors_Details?Check_in_op=34&quot; target=&quot;_blank&quot;&gt;&lt;h3 class=&quot;tripleshot_bodycounttext color2&quot;&gt;&lt;%=thisapp.AdminDashboard.Visitors_Thisweek()%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;span class=&quot;tripleshot_bodydesc&quot;&gt; This Week  &lt;\/span&gt;&lt;div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;div class=&quot;tripleshot_singlebox&quot;&gt;&lt;div style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;#Report:Visitors_Details?Check_in_op=45&quot; target=&quot;_blank&quot;&gt;&lt;h3 class=&quot;tripleshot_bodycounttext color3&quot;&gt;&lt;%=thisapp.AdminDashboard.Visitors_Thismonth()%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;span class=&quot;tripleshot_bodydesc&quot;&gt; This Month &lt;\/span&gt;&lt;div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t  &lt;div class=&quot;tripleshot_box&quot;&gt; &lt;div class=&quot;tripleshot_headdiv&quot;&gt; &lt;div class=&quot;tripleshot_headtext&quot;&gt; Properties &lt;\/div&gt; &lt;\/div&gt;&lt;div class=&quot;tripleshot_bodydiv&quot;&gt;&lt;div class=&quot;tripleshot_singlebox&quot;&gt;&lt;div style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;#Report:Vacant_Units&quot; target=&quot;_blank&quot;&gt;&lt;h3 class=&quot;tripleshot_bodycounttext color1&quot;&gt;&lt;%=thisapp.AdminDashboard.Properties_Vacant()%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;span class=&quot;tripleshot_bodydesc&quot;&gt; Vacant &lt;\/span&gt;&lt;div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;div class=&quot;tripleshot_singlebox&quot; style=&quot;width:33%;&quot;&gt;&lt;div style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;#Report:Renovating_Units&quot; target=&quot;_blank&quot;&gt;&lt;h3 class=&quot;tripleshot_bodycounttext color2&quot;&gt;&lt;%=thisapp.AdminDashboard.Properties_Renovation()%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;span class=&quot;tripleshot_bodydesc&quot;&gt; Renovation  &lt;\/span&gt;&lt;div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;div class=&quot;tripleshot_singlebox&quot;&gt;&lt;div style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;#Report:Occupied_Units&quot; target=&quot;_blank&quot;&gt;&lt;h3 class=&quot;tripleshot_bodycounttext color3&quot;&gt;&lt;%=thisapp.AdminDashboard.Properties_CheckedIn()%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;span class=&quot;tripleshot_bodydesc&quot;&gt; Occupied &lt;\/span&gt;&lt;div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t    &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t \t&lt;div class=&quot;row&quot; style=&quot;margin:0 1% 1% 1%;display:inline-block;width:98%;&quot;&gt;\n\t\t\t\t\t\t\t\t\t  &lt;div class=&quot;col-md-9&quot; id=&quot;prop_stats&quot;  zc_mobileView=&apos;inline&apos; style=&quot;padding-left:0;margin:0;&quot; elName=&apos;zc-component&apos; reportLinkName=&apos;Complaint_Stats&apos; params=&apos;zc_Header=true&apos;&gt;Loading Report...&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t  &lt;div class=&quot;col-md-3&quot; style=&quot;height:400px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  &lt;div class=&quot;tripleshot_box&quot; style=&quot;height:100%;&quot;&gt;\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t&lt;div class=&quot;tripleshot_headdiv&quot; style=&quot;height:50px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t&lt;div class=&quot;tripleshot_headtext&quot;&gt; Quick Links\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;tripleshot_bodydiv&quot; style=&quot;display: -webkit-inline-box;width:100%;height:calc(100% - 55px)&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  &lt;ul style=&quot;list-style:none;width:100%;box-sizing:border-box;padding:0;&quot;&gt;\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t&lt;li class=&quot;quicklinks_li&quot;&gt;&lt;a href=&quot;#Form:Add_Property&quot; target=&quot;_blank&quot;&gt; Add Property &lt;\/a&gt;&lt;\/li&gt;\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t&lt;li class=&quot;quicklinks_li&quot;&gt;&lt;a href=&quot;#Form:Add_Unit_Details&quot; target=&quot;_blank&quot;&gt; Add Unit Details &lt;\/a&gt;&lt;\/li&gt;\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t&lt;li class=&quot;quicklinks_li&quot;&gt;&lt;a href=&quot;#Form:Add_Tenant_Details&quot; target=&quot;_blank&quot;&gt; Add New Tenants &lt;\/a&gt;&lt;\/li&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;li class=&quot;quicklinks_li&quot;&gt;&lt;a href=&quot;#Form:Add_Owner&quot; target=&quot;_blank&quot;&gt; Add Owner &lt;\/a&gt;&lt;\/li&gt;\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t&lt;li class=&quot;quicklinks_li&quot;&gt;&lt;a href=&quot;#Form:Raise_a_Complaint&quot; target=&quot;_blank&quot;&gt; Add Complaint &lt;\/a&gt;&lt;\/li&gt;\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t&lt;li class=&quot;quicklinks_li&quot;&gt;&lt;a href=&quot;#Form:Add_Contact&quot; target=&quot;_blank&quot;&gt; Add Contact &lt;\/a&gt;&lt;\/li&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    &lt;li class=&quot;quicklinks_li&quot;&gt;&lt;a href=&quot;#Form:Rental_Payment&quot; target=&quot;_blank&quot;&gt; Add Payment &lt;\/a&gt;&lt;\/li&gt;\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t&lt;li class=&quot;quicklinks_li&quot;&gt;&lt;a href=&quot;#Form:Add_Policy&quot; target=&quot;_blank&quot;&gt; Add Policy &lt;\/a&gt;&lt;\/li&gt;\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t  &lt;\/ul&gt;\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t  \t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t  \t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t    &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t &lt;\/div&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Properties
	{
		icon = "business-building"
		form Add_Property
		{
			displayname = "Add Property"
			success message = "Property Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Property_Name
			(
    			type = text
				displayname = "Property Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Property_type
			(
				type = picklist	
				displayname = "Property type"
				values  = Add_Property_type.ID
    			displayformat = [Property_Type]
				allow new entries = true
				[
					displayname = "Add New Property Type"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Size
			(
				type = number
				displayname = "Size (in Sq. ft)"
	 			row = 1
	 			column = 1   
				width = medium
			)
			No_of_Blocks
			(
				type = number
				displayname = "No. of Blocks"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Location
			(
				type = picklist	
				displayname = "Location / Area"
				values  = Add_Location.ID
    			displayformat = [Location]
				allow new entries = true
				[
					displayname = "Add New Location"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Manager
			(
				type = picklist	
				values  = Add_Managers.ID
    			displayformat = [Email]
				allow new entries = true
				[
					displayname = "Add New Manager"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Blocks
			(
				type = list	
				values  = Add_Block.ID
    			bidirectional = Property_Name
    			displayformat = [Block]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Policies
			(
				type = list	
				values  = Add_Policy.ID
    			bidirectional = Property_Name
    			displayformat = [Policy_Name]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Property_Details
		{
			displayName = "All Property Details"
			show all rows from Add_Property    
			(
				Size as "Size (in Sq. ft)"
				No_of_Blocks as "No. of Blocks"
				Manager
				Location as "Location / Area"
				Address 
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
				Property_Name as "Property Name"
				Property_type as "Property type"
			)
			group by
			(
				Property_type ascending
			)
			options
			(
				icon = "travel-temple-02"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Property_type as "Property type"
							Property_Name as "Property Name"
							Size as "Size (in Sq. ft)"
							No_of_Blocks as "No. of Blocks"
							Manager
							Location as "Location / Area"
							Address
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Property_type as "Property type"
							Property_Name as "Property Name"
							Size as "Size (in Sq. ft)"
							No_of_Blocks as "No. of Blocks"
							Manager
							Location as "Location / Area"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Unit_Details
	{
		displayname= "Unit Details"
		icon = "ui-1-home-52"
		form Add_Unit_Details
		{
			displayname = "Add Unit Details"
			success message = "Unit Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Property_Name
			(
				type = picklist	
				displayname = "Property Name"
				values  = Add_Property.ID
    			displayformat = [Property_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Block
			(
				type = picklist	
				values  = Add_Block[Property_Name == input.Property_Name].ID
    			displayformat = [Block]
				allow new entries = true
				[
					displayname = "Add New Block"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Floor
			(
				type = picklist	
				values  = Add_Floor[Block == input.Block].ID
    			displayformat = [Floor]
				allow new entries = true
				[
					displayname = "Add New Floor"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Unit_Name
			(
    			type = text
				displayname = "Unit Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Area
			(
				type = number
				displayname = "Area (in Sq. ft)"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Bedrooms
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
			Bathrooms
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
			Amenities
			(
				type = list	
				values  = Add_Amenities.ID
    			displayformat = [Amenities]
				allow new entries = true
				[
					displayname = "Add New Amenities"
				]
				searchable = true
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Owner_Email
			(
				type = picklist	
				displayname = "Owner Email"
				values  = Add_Owner.ID
    			bidirectional = Unit_Name
    			displayformat = [Email]
				allow new entries = true
				[
					displayname = "Add New Owner"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Manager_Email
			(
				type = picklist	
				displayname = "Manager Email"
				values  = Add_Managers.ID
    			bidirectional = Managing_Units
    			displayformat = [Email]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Status
			(
				type = picklist
				values = {"Vacant","Occupied","Renovation"}
				initial value = "Vacant"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Tenant_Name
			(
				type = picklist	
				displayname = "Tenant Name"
				values  = Add_Tenant_Details.ID
    			bidirectional = Unit_Name
    			displayformat = [Name.first_name + " " + Name.last_name]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Old_Tenants
			(
				type = list	
				displayname = "Old Tenants"
				values  = Add_Tenant_Details.ID
    			displayformat = [" - " + Name.first_name + Email]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Location
			(
				type = picklist	
				values  = Add_Location.ID
    			displayformat = [Location]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Complaint_IDs
			(
				type = list	
				displayname = "Complaint IDs"
				values  = Raise_a_Complaint.ID
    			bidirectional = Unit_Name
    			displayformat = [Complaint_ID]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Unit_Details
		{
			displayName = "All Unit Details"
			show all rows from Add_Unit_Details    
			(
				Area as "Area (in Sq. ft)"
				custom action "Add Tenant"
				(
	  			workflow = Add_Tenant
				show action in view header = true
				show action in edit record menu = true
				column header = "Add Tenant"
				success message = ""
				condition = (Status != "Occupied" && Status != "Renovation")
				)
				Bedrooms
				Bathrooms
				Amenities
				Owner_Email as "Owner Email"
				Status
				Tenant_Name as "Tenant Name"
				(
					view = Tenants_Details
				)
				Manager_Email as "Manager Email"
				Old_Tenants as "Old Tenants"
				Location
				Floor
				Block
				Property_Name as "Property Name"
				Unit_Name as "Unit Name"
				custom action "Renovate"
				(
	  			workflow = Renovate
				show action in view header = true
				show action in edit record menu = true
				execute action for collection of records
				column header = "Renovate"
				success message = ""
				)
				custom action "Complaint"
				(
	  			workflow = Complaint
				show action in view header = true
				show action in edit record menu = true
				column header = "Complaint"
				success message = "Please register  your complaint here!"
				)
			)
			options
			(
				icon = "nature-dog-house"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Add Tenant"
							Unit_Name as "Unit Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Property_Name as "Property Name"
							Owner_Email as "Owner Email"
							Status
							Tenant_Name as "Tenant Name"
							Manager_Email as "Manager Email"
							Old_Tenants as "Old Tenants"
							Location
				"Renovate"
				"Complaint"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Add Tenant"
							Unit_Name as "Unit Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Property_Name as "Property Name"
							Owner_Email as "Owner Email"
							Status
							Tenant_Name as "Tenant Name"
							Manager_Email as "Manager Email"
							Old_Tenants as "Old Tenants"
							Location
				"Renovate"
				"Complaint"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Vacant_Units
		{
			displayName = "Vacant Units"
			show all rows from Add_Unit_Details  [Status == "Vacant"]  
			(
				Area as "Area (in Sq. ft)"
				custom action "Add Tenant"
				(
	  			workflow = Add_Tenant1
				column header = "Add Tenant"
				success message = ""
				condition = (Status != "Occupied" && Status != "Renovation")
				)
				Bedrooms
				Bathrooms
				Amenities
				Owner_Email as "Owner Email"
				custom action "Renovate"
				(
	  			workflow = Renovate1
				column header = "Renovate"
				success message = ""
				)
				Status
				Tenant_Name as "Tenant Name"
				(
					view = Tenants_Details
				)
				Manager_Email as "Manager Email"
				Old_Tenants as "Old Tenants"
				Location
				Block
				Floor
				Property_Name as "Property Name"
				Unit_Name as "Unit Name"
				custom action "Complaint"
				(
	  			workflow = Complaint1
				column header = "Complaint"
				success message = "Please register  your complaint here!"
				)
			)
			filters
			(
				Amenities
				Location
				Floor
				Block
			)
			group by
			(
				Property_Name ascending
				Location ascending
			)
			options
			(
				icon = "ui-3-card-add"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Add Tenant"
				"Renovate"
							Unit_Name as "Unit Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Property_Name as "Property Name"
							Owner_Email as "Owner Email"
							Manager_Email as "Manager Email"
				"Complaint"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Add Tenant"
				"Renovate"
							Unit_Name as "Unit Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Property_Name as "Property Name"
							Owner_Email as "Owner Email"
							Status
							Tenant_Name as "Tenant Name"
							Manager_Email as "Manager Email"
							Old_Tenants as "Old Tenants"
							Location
				"Complaint"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Occupied_Units
		{
			displayName = "Occupied Units"
			show all rows from Add_Unit_Details  [Status == "Occupied"]  
			(
				Unit_Name as "Unit Name"
				Block
				Floor
				Area as "Area (in Sq. ft)"
				Bedrooms
				Bathrooms
				Amenities
				Property_Name as "Property Name"
				Tenant_Name as "Tenant Name"
				(
					view = Tenants_Details
				)
				Manager_Email as "Manager Email"
				Owner_Email as "Owner Email"
				Location
				custom action "Check Out"
				(
	  			workflow = Check_Out
				show action in view header = true
				column header = "Check Out"
				success message = ""
				)
				custom action "Complaint"
				(
	  			workflow = Complaint2
				show action in view header = true
				column header = "Complaint"
				success message = "Please register  your complaint here!"
				)
			)
			filters
			(
				Amenities
				Location
				Floor
				Block
			)
			group by
			(
				Property_Name ascending
				Location ascending
			)
			options
			(
				icon = "ui-3-card-alert"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Property_Name as "Property Name"
							Unit_Name as "Unit Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Tenant_Name as "Tenant Name"
							Manager_Email as "Manager Email"
							Owner_Email as "Owner Email"
							Location
				"Check Out"
				"Complaint"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Property_Name as "Property Name"
							Tenant_Name as "Tenant Name"
							Manager_Email as "Manager Email"
							Owner_Email as "Owner Email"
							Location
				"Check Out"
				"Complaint"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Check Out"
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
			 			"Complaint"
    	 			)
    			)
			)
		}
		list Renovating_Units
		{
			displayName = "Renovation Units"
			show all rows from Add_Unit_Details  [Status == "Renovation"]  
			(
				Unit_Name as "Unit Name"
				Block
				Floor
				Area as "Area (in Sq. ft)"
				Bedrooms
				Bathrooms
				Amenities
				Property_Name as "Property Name"
				Owner_Email as "Owner Email"
				Manager_Email as "Manager Email"
				Location
				custom action "Vacant"
				(
	  			workflow = Vacant
				column header = "Vacant"
				success message = ""
				)
			)
			filters
			(
				Amenities
				Location
				Floor
				Block
			)
			group by
			(
				Property_Name ascending
				Location ascending
			)
			options
			(
				icon = "ui-3-select"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Property_Name as "Property Name"
							Owner_Email as "Owner Email"
							Manager_Email as "Manager Email"
							Location
				"Vacant"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Property_Name as "Property Name"
							Owner_Email as "Owner Email"
							Manager_Email as "Manager Email"
							Location
				"Vacant"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Owner_View
		{
			displayName = "Owner View"
			show all rows from Add_Unit_Details  [Owner_Email.Email == zoho.loginuserid]  
			(
				Unit_Name as "Unit Name"
				Property_Name as "Property Name"
				Block
				Floor
				Area as "Area (in Sq. ft)"
				Bedrooms
				Bathrooms
				Amenities
				Owner_Email as "Owner Email"
				Status
				Tenant_Name as "Tenant Name"
				Old_Tenants as "Old Tenants"
				Complaint_IDs as "Complaints"
				(
					view = Complaints_Owner_View
					delimiter = newline
				)
				custom action "Complaint"
				(
	  			workflow = Complaint5
				column header = "Complaint"
				success message = "Please register  your complaint here!"
				)
				custom action "Add Tenant"
				(
	  			workflow = Add_Tenant3
				column header = "Add Tenant"
				success message = ""
				condition = (Status != "Occupied" && Status != "Renovation")
				)
				custom action "Check Out"
				(
	  			workflow = Check_Out3
				column header = "Check Out"
				success message = ""
				condition = (Tenant_Name is not null)
				)
			)
			options
			(
				icon = "location-position-user"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Property_Name as "Property Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Owner_Email as "Owner Email"
							Status
							Tenant_Name as "Tenant Name"
							Old_Tenants as "Old Tenants"
							Complaint_IDs as "Complaints"
				"Complaint"
				"Add Tenant"
				"Check Out"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Property_Name as "Property Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Owner_Email as "Owner Email"
							Status
							Tenant_Name as "Tenant Name"
							Old_Tenants as "Old Tenants"
							Complaint_IDs as "Complaints"
				"Complaint"
				"Add Tenant"
				"Check Out"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Ready_to_Move_in_Units
		{
			displayName = "Ready to Move in Units"
			show all rows from Add_Unit_Details  [Status == "Vacant"]  
			(
				Area as "Area (in Sq. ft)"
				custom action "Add Tenant"
				(
	  			workflow = Add_Tenant1
				column header = "Add Tenant"
				success message = ""
				condition = (Status != "Occupied" && Status != "Renovation")
				)
				Bedrooms
				Bathrooms
				Amenities
				Owner_Email as "Owner Email"
				custom action "Renovate"
				(
	  			workflow = Renovate1
				column header = "Renovate"
				success message = ""
				)
				Status
				Tenant_Name as "Tenant Name"
				(
					view = Tenants_Details
				)
				Manager_Email as "Manager Email"
				Old_Tenants as "Old Tenants"
				Location
				Block
				Floor
				Property_Name as "Property Name"
				Unit_Name as "Unit Name"
				custom action "Complaint"
				(
	  			workflow = Complaint1
				column header = "Complaint"
				success message = "Please register  your complaint here!"
				)
			)
			filters
			(
				Amenities
				Location
				Floor
				Block
			)
			group by
			(
				Property_Name ascending
				Location ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Property_Name as "Property Name"
							Owner_Email as "Owner Email"
							Manager_Email as "Manager Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Property_Name as "Property Name"
							Owner_Email as "Owner Email"
							Status
							Tenant_Name as "Tenant Name"
							Manager_Email as "Manager Email"
							Old_Tenants as "Old Tenants"
							Location
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Tenants_Details
	{
		displayname= "Tenants Details"
		icon = "users-single-03"
		form Add_Tenant_Details
		{
			displayname = "Add Tenant Details"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Property_Name
			(
				type = picklist	
				displayname = "Property Name"
				values  = Add_Property.ID
    			displayformat = [Property_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Unit_Name
			(
				type = picklist	
				displayname = "Unit Name"
				values  = Add_Unit_Details[Status == "Vacant" && Property_Name == input.Property_Name].ID
    			bidirectional = Tenant_Name
    			displayformat = [Unit_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Owner_Name
			(
				type = picklist	
				displayname = "Owner Name"
				values  = Add_Owner[Unit_Name == input.Unit_Name].ID
    			displayformat = [Owner_Name.first_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			plain1
			(
    			type = plaintext
				value = "<div style=\"width: 80%; border-bottom: 1px solid rgb(221, 221, 221)\"><font size=\"4\" color=\"#666666\">Tenant Details</font></div>"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 2
	 			column = 1   
				width = medium
			)
			Age
			(
				type = number
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Gender
			(
				type = picklist
				values = {"Male","Female"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Occupation
			(
				type = picklist
				values = {"Kid","Student","Business","Doctor","Engineer","Lawyer","Army / Ex- Army","Elderly","Others"}
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Date_of_birth
			(
    			type = date
				displayname = "Date of birth"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 1   
				width = medium
			)
			Contact_Number
			(
    			type = phonenumber
				displayname = "Contact Number"
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Email
			(
    			type = email
	 			row = 2
	 			column = 1   
				width = medium
			)
			Add_to_Contact_list
			(
    			type = checkbox
				displayname = "Add to Contact list"
				initial value = false
	 			row = 2
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"Moved Out","Claimed","Move in"}
				initial value = "Claimed"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Number_of_Occupants
			(
				type = number
				displayname = "Number of Occupants"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Occupants_Details
			(
				type = grid
				displayname = "Other Occupants Details"
				Name
				(
    				type = name
     				prefix
     				(
	     				 type = prefix
	     				 displayname ="Prefix"
	     				 visibility = false
	     				 value = {"Mr.","Mrs.","Ms."}
     				) 
     				first_name
     				(
	     				 type = first_name
	     				 displayname ="First Name"
     				) 
     				last_name
     				(
	     				 type = last_name
	     				 displayname ="Last Name"
     				) 
     				suffix
     				(
	     				 type = suffix
	     				 displayname ="Suffix"
	     				 visibility = false
     				) 
					width = medium
				)
				must have Date_of_birth
				(
    				type = date
					displayname = "Date of birth"
					alloweddays = 0,1,2,3,4,5,6
					width = medium
				)
				Age
				(
					type = number
					width = medium
				)
				must have Gender
				(
					type = picklist
					values = {"Male","Female","Third Gender"}
					width = medium
				)
				must have Occupation
				(
					type = picklist
					values = {"Student","Kid","Business","Doctor","Engineer","Army / Ex- Army","Elderly","Others","Lawyer"}
					width = medium
				)
				Email
				(
    				type = email
					width = medium
				)
				Contact_Number
				(
    				type = phonenumber
					displayname = "Contact Number"
					width = medium
				)
				Add_to_Contact_list
				(
    				type = checkbox
					displayname = "Add to Contact list"
					initial value = false
					width = medium
				)
	 			row = 3
	 			column = 1   
				width = medium
			)
			Section2
			(
				type = section
				displayname = "Section"
	 			row = 2
	 			column = 0   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 4
	 			column = 0   
				width = medium
			)
			plain3
			(
    			type = plaintext
				value = ""
	 			row = 4
	 			column = 1   
				width = medium
			)
			must have Acknowledgement
			(
    			type = checkbox
				displayname = "Hereby, Tenant accept all the Terms and Condition"
				initial value = false
	 			row = 4
	 			column = 1   
				width = medium
			)
			Tenant_Signature
			(
    			type = signature
				displayname = "Tenant Signature"
	 			row = 4
	 			column = 1   
				width = medium
			)
			plain
			(
    			type = plaintext
				value = "<div style=\"width: 100%; border-bottom: 1px solid rgb(221, 221, 221); margin: auto\"><font size=\"4\" color=\"#666666\">Lease Details</font></div>"
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Base_Rent
			(
				type = number
				displayname = "Base Rent"
				initial value = 0
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Taxes
			(
				type = number
				initial value = 0
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Insurance
			(
				type = number
				initial value = 0
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Maintainance
			(
				type = number
				initial value = 0
	 			row = 2
	 			column = 2   
				width = medium
			)
			Additional_Charges
			(
				type = number
				displayname = "Additional Charges"
				initial value = 0
	 			row = 2
	 			column = 2   
				width = medium
			)
			Net_Payable
			(
    			type = formula
				displayname = "Net Payable"
				value =  input.Base_Rent + input.Taxes + input.Insurance + input.Maintainance + input.Additional_Charges
				visibility = true
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Lease_Cycle
			(
				type = radiobuttons
				displayname = "Lease Cycle"
				values = {"Monthly","Yearly"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Months
			(
				type = picklist
				displayname = "Month(s)"
				values = {"1","2","3","4","5","6","7","8","9","10","11"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			Years
			(
				type = number
				displayname = "Year(s)"
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Starting_Date
			(
    			type = date
				displayname = "Lease Starting Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 2   
				width = medium
			)
			Lease_Ending_Date
			(
    			type = date
				displayname = "Lease Ending Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 2   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		print template
			{
				Invoice
				{
						content = {"layout":"1","pageNumberOption":"null","orientation":"null","isFooterEnabled":false,"mainLayout":[{"elements":[{"type":"columns","element":{"split":"34,33,33","id":"elem_15ca0783e7f1","elemStyle":"background:#4d4d4f;padding:5px;height:150px;","collayouts":[{"colElements":[{"type":"text","element":{"Fields":[{"Label_Name":"Unit_Name"},{"Related_Fields":["Block"],"Label_Name":"Unit_Name"},{"Related_Fields":["Floor"],"Label_Name":"Unit_Name"},{"Related_Fields":["Property_Name"],"Label_Name":"Unit_Name"}],"content":"<div><blockquote style=\"margin: 0 0 0 40.0px;border: none;padding: 0.0px;height: 100.0%;\">   <div style=\"background: rgb(77,77,79);\">     <p style=\"text-align: justify;\"><font color=\"#ffffff\">To:<\/font>     <\/p>   <\/div>   <div style=\"background: rgb(77,77,79);color: white;\">     <h1 style=\"text-align: justify;\">       <font face=\"timesnewroman, times, serif\" size=\"5\">         <span style=\"color: white;\">${Unit_Name}<\/span>       <\/font>     <\/h1>   <\/div>   <div style=\"background: rgb(77,77,79);color: rgb(243,243,245);\">     <p style=\"text-align: justify;\">       <span style=\"color: rgb(243,243,245);\">         <font size=\"2\">${Unit_Name.Block} -&nbsp;           <span style=\"color: rgb(243,243,245);\">${Unit_Name.Floor}&nbsp;<\/span>         <\/font>       <\/span>     <\/p>     <p style=\"text-align: justify;\">       <span style=\"color: rgb(243,243,245);\">         <font size=\"2\">           <span style=\"color: rgb(243,243,245);\">             <span>               <span>${Unit_Name.Property_Name}<\/span>             <\/span>             <br />           <\/span>         <\/font>       <\/span>     <\/p>   <\/div> <\/blockquote><\/div>"}}]},{"colElements":[{"type":"text","element":{"Fields":[{"Label_Name":"Property_Name"},{"Related_Fields":["Location"],"Label_Name":"Property_Name"}],"content":"<div><div style=\"border-right: 1.0px solid white;height: 100.0px;margin: 25.0px 0;\">   <span>     <div style=\"color: rgb(243,243,245);margin-bottom: 3.0px;\">       <span class=\"fa fa-map-marker\" style=\"color: white;\"><\/span>&nbsp;<\/div>     <div style=\"color: rgb(243,243,245);\">       <span class=\"fa fa-map-pin\" style=\"color: white;\"><\/span>&nbsp;${Property_Name.Location}<\/div>   <\/span> <\/div><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_15ca0783e7f","fields":[],"content":"<div><h1 style=\"text-align: center;\">   <p>     <br />   <\/p> <\/h1> <div>   <h1 style=\"text-align: center;\">     <font color=\"#ffffff\" size=\"7\" face=\"timesnewroman, times, serif\">INVOICE &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<\/font>&nbsp; &nbsp;<\/h1> <\/div> <div>   <p>     <br />   <\/p> <\/div><\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"elem_15ca0b40c6b1","elemStyle":"background:#616264;height:50px;","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_15ca0b40c6b","fields":[],"content":"<div><p><br /><\/p><\/div>"}}]}]}},{"type":"text","element":{"Fields":[{"Label_Name":"Additional_Charges"},{"Label_Name":"Base_Rent"},{"Label_Name":"Insurance"},{"Label_Name":"Maintainance"},{"Label_Name":"Net_Payable"},{"Label_Name":"Lease_Ending_Date"},{"Label_Name":"Starting_Date"},{"Label_Name":"Taxes"}],"content":"<div><table style=\"margin: 0.0px auto;width: 100.0%;border-collapse: collapse;\">   <tbody>     <tr style=\"height: 50.0px;background: rgb(0,172,221);color: white;text-align: center;border-bottom: 1.0px solid rgb(0,158,203);\">       <th width=\"33%\" style=\"border-right: 1.0px solid rgb(0,158,203);color: white;\">Sl No.<\/th>       <th width=\"33%\" style=\"border-right: 1.0px solid rgb(0,158,203);color: white;\">         <span>           <span>\u200aAmount type<\/span>         <\/span>       <\/th>       <th width=\"33%\" style=\"border-right: 1.0px solid rgb(0,158,203);color: white;\">         <span>           <span>\u200aAmount<\/span>         <\/span>       <\/th>     <\/tr>     <tr style=\"height: 50.0px;text-indent: 5.0px;border-bottom: 1.0px solid rgb(236,236,236);\">       <td style=\"text-align: center;\">\u200a1<\/td>       <td style=\"text-align: justify;\">\u200aBase Rent<\/td>       <td style=\"text-align: right;background: rgb(215,222,226);\">\u200a         <span>           <span>${Base_Rent}<\/span>         <\/span>       <\/td>     <\/tr>     <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;border-bottom: 1.0px solid rgb(236,236,236);\">       <td style=\"text-align: center;\">2<\/td>       <td style=\"text-align: justify;\">\u200aTaxes<\/td>       <td style=\"text-align: right;background: rgb(215,222,226);\">\u200a         <span>           <span style=\"text-align: right;\">${Taxes}<\/span>         <\/span>       <\/td>     <\/tr>     <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;border-bottom: 1.0px solid rgb(236,236,236);\">       <td style=\"text-align: center;\">\u200a3<\/td>       <td style=\"text-align: justify;\">\u200aInsurance<\/td>       <td style=\"text-align: right;background: rgb(215,222,226);\">\u200a         <span>           <span>${Insurance}<\/span>         <\/span>       <\/td>     <\/tr>     <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;border-bottom: 1.0px solid rgb(236,236,236);\">       <td style=\"text-align: center;\">\u200a4<\/td>       <td style=\"text-align: justify;\">\u200aMaintenance         <br />       <\/td>       <td style=\"text-align: right;background: rgb(215,222,226);\">\u200a         <span>           <span>${Maintainance}<\/span>         <\/span>       <\/td>     <\/tr>     <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;border-bottom: 1.0px solid rgb(236,236,236);\">       <td style=\"text-align: center;\">\u200a5<\/td>       <td style=\"text-align: justify;\">\u200aAdditional Charges<\/td>       <td style=\"text-align: right;background: rgb(215,222,226);\">\u200a         <span>           <span>${Additional_Charges}<\/span>         <\/span>       <\/td>     <\/tr>    <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;\">     <td>&nbsp; Date &nbsp;: &nbsp;<span><span>${currentdate}<\/span><\/span><br /><\/td>     <td>\u200a<div style=\"padding-bottom: 5.0px;\">Rent Period&nbsp;<\/div>   <div style=\"padding: 7.0px 0;\">     <span> <font face=\"georgia, timesnewroman, times, serif\"><b>${Starting_Date}<\/b><\/font><\/span>&nbsp;to&nbsp;<span><font face=\"georgia, timesnewroman, times, serif\"><b>${Lease_Ending_Date}<\/b><\/font><\/span><\/div><\/td>     <td style=\"text-align: right;background: rgb(215,222,226);\">\u200a<span><span>${Net_Payable}<\/span><\/span><\/td>    <\/tr>     <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;\">       <td>\u200a<\/td>       <td style=\"text-align: justify;background: rgb(80,80,82);color: white;font-size: 15.0px;\">TOTAL<\/td>       <td style=\"text-align: right;background: rgb(0,172,221);color: white;font-size: 15.0px;\">         <span>           <span>${Net_Payable}<\/span>         <\/span>         <br />       <\/td>     <\/tr>   <\/tbody> <\/table><\/div>"}},{"type":"columns","element":{"split":"50,50","id":"elem_15ca1b628261","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_15ca1b62827","fields":[],"content":"<div><p><br /><\/p><p>Owner Signature<\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_15ca1b62827","fields":[],"content":"<div><p style=\"text-align: right;\"><br /><\/p><p style=\"text-align: right;\">Tenant Signature<\/p><\/div>"}}]}]}},{"type":"columns","element":{"split":"50,50","id":"elem_15ca1b33d491","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"Fields":[{"Label_Name":"Owner_Name"},{"Related_Fields":["Owner_Signature"],"Label_Name":"Owner_Name"}],"content":"<div><p>${Owner_Name.Owner_Signature}<\/p><p><span><span><\/span><\/span><br /><\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{}}]}]}}],"id":1}],"resize":"default","templateStyle":"text-align: left; width: 100%; margin: 0 auto;","isHeaderEnabled":false}
				}
			}
		}
		list Tenants_Details
		{
			displayName = "Tenants Details"
			show all rows from Add_Tenant_Details    
			(
				Status
				Gender
				Occupation
				Date_of_birth as "Date of birth"
				Age
				Email
				Starting_Date as "Lease Starting Date"
				Lease_Ending_Date as "Lease Ending Date"
				Unit_Name as "Unit Name"
				Base_Rent as "Base Rent"
				Additional_Charges as "Additional Charges"
				Taxes
				Insurance
				Maintainance
				Lease_Cycle as "Lease Cycle"
				Months as "Month(s)"
				Years as "Year(s)"
				Net_Payable as "Net Payable"
				Add_to_Contact_list as "Contact list"
				Acknowledgement as "Hereby, Tenant accept all the Terms and Condition"
				Tenant_Signature as "Tenant Signature"
				Property_Name as "Property Name"
				Owner_Name as "Owner Name"
				custom action "Check Out"
				(
	  			workflow = Check_Out1
				column header = "Check Out"
				success message = ""
				)
			)
			options
			(
				icon = "users-2-family"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Status
							Gender
							Occupation
							Date_of_birth as "Date of birth"
							Age
							Email
							Starting_Date as "Lease Starting Date"
							Unit_Name as "Unit Name"
							Base_Rent as "Base Rent"
							Additional_Charges as "Additional Charges"
							Taxes
							Insurance
							Maintainance
							Lease_Cycle as "Lease Cycle"
							Months as "Month(s)"
							Years as "Year(s)"
							Net_Payable as "Net Payable"
							Add_to_Contact_list as "Contact list"
							Tenant_Signature as "Tenant Signature"
							Property_Name as "Property Name"
							Owner_Name as "Owner Name"
				"Check Out"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Status
							Gender
							Occupation
							Date_of_birth as "Date of birth"
							Age
							Email
							Starting_Date as "Lease Starting Date"
							Lease_Ending_Date as "Lease Ending Date"
							Unit_Name as "Unit Name"
							Base_Rent as "Base Rent"
							Additional_Charges as "Additional Charges"
							Taxes
							Insurance
							Maintainance
							Lease_Cycle as "Lease Cycle"
							Months as "Month(s)"
							Years as "Year(s)"
							Net_Payable as "Net Payable"
							Add_to_Contact_list as "Contact list"
							Acknowledgement as "Hereby, Tenant accept all the Terms and Condition"
							Tenant_Signature as "Tenant Signature"
							Property_Name as "Property Name"
							Owner_Name as "Owner Name"
				"Check Out"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Rental_Payment
	{
		displayname= "Rental Payment"
		icon = "shopping-credit-card"
		form Rental_Payment
		{
			displayname = "Rental Payment"
			success message = "Payment Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			open
			(
				type = picklist
				values = {"custom_action"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Property_Name
			(
				type = picklist	
				displayname = "Property Name"
				values  = Add_Property.ID
    			displayformat = [Property_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Unit_Name
			(
				type = picklist	
				displayname = "Unit Name"
				values  = Add_Unit_Details.ID
    			displayformat = [Unit_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Owner_Name
			(
				type = picklist	
				displayname = "Owner Name"
				values  = Add_Owner.ID
    			displayformat = [Owner_Name.first_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Tenant_Name
			(
				type = picklist	
				displayname = "Tenant Name"
				values  = Add_Tenant_Details.ID
    			displayformat = [Name.first_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Starting_Date
			(
    			type = date
				displayname = "Starting Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Next_Due_Date
			(
    			type = date
				displayname = "Next Due Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Archive
			(
    			type = checkbox
				initial value = false
	 			row = 1
	 			column = 1   
				width = medium
			)
			Rent_Amount
			(
				type = number
				displayname = "Rent Amount"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Overdue_Amount
			(
				type = number
				displayname = "Overdue Amount"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Amount_to_be_Paid
			(
				type = number
				displayname = "Amount to be Paid"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Amount_Paid
			(
				type = number
				displayname = "Amount Paid"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Next_Due
			(
				type = number
				displayname = "Next Due"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Mode_of_Payment
			(
				type = radiobuttons
				displayname = "Mode of Payment"
				values = {"DD","Cash","Cheque"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"Not Paid","Paid","Overdue"}
	 			row = 1
	 			column = 2   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		print template
			{
				Invoice1
				{
						displayname = "Invoice"
						content = {"layout":"1","pageNumberOption":"null","orientation":"null","isFooterEnabled":false,"mainLayout":[{"elements":[{"type":"columns","element":{"split":"34,33,33","id":"elem_15ca0783e7f1","elemStyle":"background:#4d4d4f;padding:5px;height:150px;","collayouts":[{"colElements":[{"type":"text","element":{"Fields":[{"Related_Fields":["Property_Name"],"Label_Name":"Property_Name"},{"Related_Fields":["Block"],"Label_Name":"Unit_Name"},{"Related_Fields":["Floor"],"Label_Name":"Unit_Name"},{"Related_Fields":["Unit_Name"],"Label_Name":"Unit_Name"}],"content":"<div><blockquote style=\"margin: 0 0 0 40.0px;border: none;padding: 0.0px;height: 100.0%;\">   <div style=\"background: rgb(77,77,79);\">     <p style=\"text-align: justify;\">       <font color=\"#ffffff\">To:<\/font>     <\/p>   <\/div>   <div style=\"background: rgb(77,77,79);color: white;\">     <h1 style=\"text-align: justify;\">       <span>         <span style=\"color: white;\">${Unit_Name.Unit_Name}<\/span>       <\/span>       <font face=\"timesnewroman, times, serif\" size=\"5\">         <span style=\"color: white;\"><\/span>       <\/font>     <\/h1>   <\/div>   <div style=\"background: rgb(77,77,79);color: rgb(243,243,245);\">     <p style=\"text-align: justify;\"><span style=\"color: rgb(243,243,245);\"><font size=\"2\"><span style=\"color: rgb(243,243,245);\"><span><span>${Unit_Name.Block} -&nbsp;<\/span><span>${Unit_Name.Floor}<\/span><\/span><\/span>         <\/font>       <\/span>     <\/p>     <p style=\"text-align: justify;\">       <span style=\"color: rgb(243,243,245);\">         <font size=\"2\">           <span style=\"color: rgb(243,243,245);\">             <span>               <span><\/span><span><span>${Property_Name.Property_Name}<\/span><\/span>            <\/span>             <br />           <\/span>         <\/font>       <\/span>     <\/p>   <\/div> <\/blockquote><\/div>"}}]},{"colElements":[{"type":"text","element":{"Fields":[{"Label_Name":"Property_Name"},{"Related_Fields":["Location"],"Label_Name":"Property_Name"}],"content":"<div><div style=\"border-right: 1.0px solid white;height: 100.0px;margin: 25.0px 0;\">   <span>     <div style=\"color: rgb(243,243,245);margin-bottom: 3.0px;\">       <span class=\"fa fa-map-marker\" style=\"color: white;\"><\/span>&nbsp;<\/div>     <div style=\"color: rgb(243,243,245);\">       <span class=\"fa fa-map-pin\" style=\"color: white;\"><\/span>&nbsp;${Property_Name.Location}<\/div>   <\/span> <\/div><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_15ca0783e7f","fields":[],"content":"<div><h1 style=\"text-align: center;\">   <p>     <br />   <\/p> <\/h1> <div>   <h1 style=\"text-align: center;\">     <font color=\"#ffffff\" size=\"7\" face=\"timesnewroman, times, serif\">INVOICE &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<\/font>&nbsp; &nbsp;<\/h1> <\/div> <div>   <p>     <br />   <\/p> <\/div><\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"elem_15ca0b40c6b1","elemStyle":"background:#616264;height:50px;","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_15ca0b40c6b","fields":[],"content":"<div><p><br /><\/p><\/div>"}}]}]}},{"type":"text","element":{"Fields":[{"Label_Name":"Amount_Paid"},{"Label_Name":"Amount_to_be_Paid"},{"Label_Name":"Next_Due_Date"},{"Label_Name":"Overdue_Amount"},{"Label_Name":"Starting_Date"},{"Related_Fields":["Additional_Charges"],"Label_Name":"Tenant_Name"},{"Related_Fields":["Base_Rent"],"Label_Name":"Tenant_Name"},{"Related_Fields":["Insurance"],"Label_Name":"Tenant_Name"},{"Related_Fields":["Maintainance"],"Label_Name":"Tenant_Name"},{"Related_Fields":["Net_Payable"],"Label_Name":"Tenant_Name"},{"Related_Fields":["Taxes"],"Label_Name":"Tenant_Name"}],"content":"<div><table style=\"margin: 0.0px auto;width: 100.0%;border-collapse: collapse;\">   <tbody>     <tr style=\"height: 50.0px;background: rgb(0,172,221);color: white;text-align: center;border-bottom: 1.0px solid rgb(0,158,203);\">       <th width=\"33%\" style=\"border-right: 1.0px solid rgb(0,158,203);color: white;\">Sl No.<\/th>       <th width=\"33%\" style=\"border-right: 1.0px solid rgb(0,158,203);color: white;\">         <span>           <span>\u200aAmount type<\/span>         <\/span>       <\/th>       <th width=\"33%\" style=\"border-right: 1.0px solid rgb(0,158,203);color: white;\">         <span>           <span>\u200aAmount<\/span>         <\/span>       <\/th>     <\/tr>     <tr style=\"height: 50.0px;text-indent: 5.0px;border-bottom: 1.0px solid rgb(236,236,236);\">       <td style=\"text-align: center;\">\u200a1<\/td>       <td style=\"text-align: justify;\">\u200aBase Rent<\/td>       <td style=\"text-align: right;background: rgb(215,222,226);\">\u200a<span><span><span><span>${Tenant_Name.Base_Rent}<\/span><\/span><\/span><\/span><span><span><\/span><\/span><\/td>     <\/tr>     <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;border-bottom: 1.0px solid rgb(236,236,236);\">       <td style=\"text-align: center;\">2<\/td>       <td style=\"text-align: justify;\">\u200aTaxes<\/td>       <td style=\"text-align: right;background: rgb(215,222,226);\"><span><span><span><span>${Tenant_Name.Taxes}<\/span><\/span><\/span><\/span><span><span style=\"text-align: right;\"><\/span>         <\/span>       <\/td>     <\/tr>     <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;border-bottom: 1.0px solid rgb(236,236,236);\">       <td style=\"text-align: center;\">\u200a3<\/td>       <td style=\"text-align: justify;\">\u200aInsurance<\/td>       <td style=\"text-align: right;background: rgb(215,222,226);\"><span><span><span><span>${Tenant_Name.Insurance}<\/span><\/span><\/span><\/span><span><span><\/span>         <\/span>       <\/td>     <\/tr>     <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;border-bottom: 1.0px solid rgb(236,236,236);\">       <td style=\"text-align: center;\">\u200a4<\/td>       <td style=\"text-align: justify;\">\u200aMaintenance         <br />       <\/td>       <td style=\"text-align: right;background: rgb(215,222,226);\"><br /><span><span><span><span>${Tenant_Name.Maintainance}<\/span><\/span><\/span><\/span><br /><\/td>     <\/tr>     <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;border-bottom: 1.0px solid rgb(236,236,236);\">       <td style=\"text-align: center;\">\u200a5<\/td>       <td style=\"text-align: justify;\">\u200aAdditional Charges<\/td>       <td style=\"text-align: right;background: rgb(215,222,226);\"><span><span><span><span>${Tenant_Name.Additional_Charges}<\/span><\/span><\/span><\/span><span><span><span><span><\/span><\/span><\/span>         <\/span>       <\/td>     <\/tr>    <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;\">     <td>&nbsp; Date &nbsp;: &nbsp;<span><span>${currentdate}<\/span><\/span><br /><\/td>     <td>\u200a<div style=\"padding-bottom: 5.0px;\">Rent Period&nbsp;<\/div>   <div style=\"padding: 7.0px 0;\">     <span> <font face=\"georgia, timesnewroman, times, serif\"><b>${Starting_Date}<\/b><\/font><\/span>&nbsp;to&nbsp;<span><font face=\"georgia, timesnewroman, times, serif\"><b>${Next_Due_Date}<\/b><\/font><\/span><\/div><\/td>     <td style=\"text-align: right;background: rgb(215,222,226);\"><span><span><span><span>${Tenant_Name.Net_Payable}<\/span><\/span><\/span><\/span><span><span><\/span><\/span><\/td>    <\/tr> <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;\"><td><\/td><td>Overdue Amount<\/td><td style=\"text-align: right;background: rgb(215,222,226);\"><span><span>${Overdue_Amount}<\/span><\/span><br /><\/td><\/tr><tr style=\"height: 50.0px;background: white;text-indent: 5.0px;\"><td><\/td><td>Amount to be Paid<\/td><td style=\"text-align: right;background: rgb(215,222,226);\"><span><span><span><span><span>${Amount_to_be_Paid}<\/span><\/span><span><span>&nbsp;<\/span><\/span><\/span><\/span><\/span><br /><\/td><\/tr>     <tr style=\"height: 50.0px;background: white;text-indent: 5.0px;\">       <td>\u200a<\/td>       <td style=\"text-align: justify;background: rgb(80,80,82);color: white;font-size: 15.0px;\">Total Amount Paid<\/td>       <td style=\"text-align: right;background: rgb(0,172,221);color: white;font-size: 15.0px;\"><span><span>${Amount_Paid}<\/span><\/span><br />       <\/td>     <\/tr>   <\/tbody> <\/table><\/div>"}},{"type":"columns","element":{"split":"50,50","id":"elem_15ca1b628261","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_15ca1b62827","fields":[],"content":"<div><p><br /><\/p><p>Owner Signature<\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_15ca1b62827","fields":[],"content":"<div><p style=\"text-align: right;\"><br /><\/p><p style=\"text-align: right;\">Tenant Signature<\/p><\/div>"}}]}]}},{"type":"columns","element":{"split":"50,50","id":"elem_15ca1b33d491","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"Fields":[{"Label_Name":"Owner_Name"},{"Related_Fields":["Owner_Signature"],"Label_Name":"Owner_Name"}],"content":"<div><p><br /><span><span>${Owner_Name.Owner_Signature}<\/span><\/span><\/p><p><span><span><\/span><\/span><br /><\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"Fields":[{"Label_Name":"Tenant_Name"},{"Related_Fields":["Tenant_Signature"],"Label_Name":"Tenant_Name"}],"content":"<div><p style=\"text-align: right;\"><br /><\/p><p style=\"text-align: right;\">${Tenant_Name.Tenant_Signature}<\/p><p style=\"text-align: right;\"><span><span><\/span><\/span><br /><\/p><\/div>"}}]}]}}],"id":1}],"resize":"default","templateStyle":"text-align: left; width: 100%; margin: 0 auto;","isHeaderEnabled":false}
				}
			}
		}
		list Rental_Payment_Details
		{
			displayName = "Rental Payment Details"
			template = Invoice1
			print template = Invoice1
			show all rows from Rental_Payment    
			(
				Next_Due_Date as "Next Due Date"
				custom action "Paid"
				(
	  			workflow = Paid
				show action in view header = true
				column header = "Paid"
				success message = ""
				condition = (Status != "Paid")
				)
				Owner_Name as "Owner Name"
				Status
				Overdue_Amount as "Overdue Amount"
				Amount_Paid as "Amount Paid"
				Next_Due as "Next Due"
				Mode_of_Payment as "Mode of Payment"
				Property_Name as "Property Name"
				Rent_Amount as "Rent Amount"
				Amount_to_be_Paid as "Amount to be Paid"
				Unit_Name as "Unit Name"
				Starting_Date as "Starting Date"
				Tenant_Name as "Tenant Name"
			)
			options
			(
				icon = "files-money"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Paid"
							Property_Name as "Property Name"
							Starting_Date as "Starting Date"
							Next_Due_Date as "Next Due Date"
							Unit_Name as "Unit Name"
							Owner_Name as "Owner Name"
							Tenant_Name as "Tenant Name"
							Status
							Rent_Amount as "Rent Amount"
							Overdue_Amount as "Overdue Amount"
							Amount_to_be_Paid as "Amount to be Paid"
							Amount_Paid as "Amount Paid"
							Next_Due as "Next Due"
							Mode_of_Payment as "Mode of Payment"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
								"Paid"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Paid"
							Property_Name as "Property Name"
							Starting_Date as "Starting Date"
							Next_Due_Date as "Next Due Date"
							Unit_Name as "Unit Name"
							Owner_Name as "Owner Name"
							Tenant_Name as "Tenant Name"
							Status
							Rent_Amount as "Rent Amount"
							Overdue_Amount as "Overdue Amount"
							Amount_to_be_Paid as "Amount to be Paid"
							Amount_Paid as "Amount Paid"
							Next_Due as "Next Due"
							Mode_of_Payment as "Mode of Payment"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Complaints
	{
		icon = "files-book-07"
		form Raise_a_Complaint
		{
			displayname = "Raise a Complaint"
			success message = "Your complaint is filed ! Thanks for your  support !\n"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Date_of_Incident
			(
    			type = date
				displayname = "Date of Reporting"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			unique Complaint_ID
			(
    			type = text
				displayname = "Complaint ID"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Property_Name
			(
				type = picklist	
				displayname = "Property Name"
				values  = Add_Property.ID
    			displayformat = [Property_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Location
			(
				type = picklist	
				values  = Add_Location.ID
    			displayformat = [Location]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Unit_Name
			(
				type = picklist	
				displayname = "Unit Name"
				values  = Add_Unit_Details.ID
    			bidirectional = Complaint_IDs
    			displayformat = [Unit_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Maintenance_Service
			(
				type = picklist	
				displayname = "Maintenance Service"
				values  = Add_Services.ID
    			displayformat = [Service]
				allow new entries = true
				[
					displayname = "Add New Service"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Complaint_about
			(
    			type = text
				displayname = "Complaint about"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Add_Image
			(
    			type = image
				displayname = "Add Image"
				source  = file
				aspect ratio = original
				camera = primary
				preview duration = 0
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Complaint_Details
			(
    			type = textarea
				displayname = "Complaint  Details"
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Complaint_Raised_By
			(
    			type = email
				displayname = "Complaint Raised By"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Complaint_Status
			(
				type = picklist
				displayname = "Complaint Status"
				values = {"Reported","In Progress","Completed","Overdue"}
				initial value = "Reported"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Owner_Email
			(
				type = picklist	
				displayname = "Owner Email"
				values  = Add_Owner.ID
    			displayformat = [Email]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Tenant_Email
			(
				type = picklist	
				displayname = "Tenant Email"
				values  = Add_Tenant_Details.ID
    			displayformat = [Email]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Manager_Email
			(
				type = picklist	
				displayname = "Manager Email"
				values  = Add_Managers.ID
    			displayformat = [Email]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assigned_to
			(
				type = picklist	
				displayname = "Assigned to"
				values  = Add_Staff.ID
    			bidirectional = Assigned_Tasks
    			displayformat = [User_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		calendar All_Complaints
		{
			displayName = "All Complaints"
			show all rows from Raise_a_Complaint    
			(
				Date_of_Incident as "Date of Reporting"
				Complaint_ID as "Complaint ID"
				Property_Name as "Property Name"
				Unit_Name as "Unit Name"
				Complaint_Details as "Complaint  Details"
				Complaint_about as "Complaint about"
				Complaint_Raised_By as "Complaint Raised By"
				Maintenance_Service as "Maintenance Service"
				Location
				Complaint_Status as "Complaint Status"
				Assigned_to as "Assigned to"
				custom action "Assign"
				(
	  			workflow = Assign
				show action in view header = true
				show action in edit record menu = true
				column header = "Assign"
				success message = ""
				condition = (Assigned_to is null)
				)
				custom action "Complete"
				(
	  			workflow = Complete
				show action in view header = true
				show action in edit record menu = true
				execute action for collection of records
				column header = "Complete"
				success message = ""
				condition = (Complaint_Status != "Completed" && Complaint_Status != "Reported")
				)
			)
			filters
			(
				Unit_Name
				Complaint_Status
				Maintenance_Service
				Date_of_Incident
				Owner_Email
				Tenant_Email
				Manager_Email
				Property_Name
				Location
				Assigned_to
			)
			options
			(
				display type = month
				week start day = sunday
				display field = Complaint_ID
				start date = Date_of_Incident
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "ui-1-calendar-60"
			)
			conditional formatting
			(
				"In Progress"
				{
				condition = (Complaint_Status == "In Progress")
				format = "color:#ffffff;background-color:#0598fa;"
				}
				"Over Due"
				{
				condition = (Complaint_Status == "Overdue")
				format = "color:#ffffff;background-color:#ff5252;"
				}
				"Completed"
				{
				condition = (Complaint_Status == "Completed")
				format = "color:#ffffff;background-color:#008a53;"
				}
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Date_of_Incident as "Date of Reporting"
							Complaint_ID as "Complaint ID"
							Property_Name as "Property Name"
							Unit_Name as "Unit Name"
							Complaint_Details as "Complaint  Details"
							Complaint_about as "Complaint about"
							Complaint_Raised_By as "Complaint Raised By"
							Maintenance_Service as "Maintenance Service"
							Location
							Complaint_Status as "Complaint Status"
							Assigned_to as "Assigned to"
				"Assign"
				"Complete"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Assign"
								"Complete"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Date_of_Incident as "Date of Reporting"
							Complaint_ID as "Complaint ID"
							Property_Name as "Property Name"
							Unit_Name as "Unit Name"
							Complaint_Details as "Complaint  Details"
							Complaint_about as "Complaint about"
							Complaint_Raised_By as "Complaint Raised By"
							Maintenance_Service as "Maintenance Service"
							Location
							Complaint_Status as "Complaint Status"
							Assigned_to as "Assigned to"
				"Assign"
				"Complete"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
			 			"Assign"
			 			"Complete"
    	 			)
    			)
			)
		}
		list Complaints_List
		{
			displayName = "Complaints List"
			show all rows from Raise_a_Complaint    
			(
				Date_of_Incident as "Date of Reporting"
				Complaint_Status as "Complaint Status"
				Complaint_ID as "Complaint ID"
				Unit_Name as "Unit Name"
				Add_Image as "Add Image"
				Property_Name as "Property Name"
				Complaint_Details as "Complaint  Details"
				Complaint_about as "Complaint about"
				Complaint_Raised_By as "Complaint Raised By"
				Maintenance_Service as "Maintenance Service"
				Location
				Assigned_to as "Assigned to"
				custom action "Assign"
				(
	  			workflow = Assign1
				show action in view header = true
				column header = "Assign"
				success message = ""
				condition = (Assigned_to is null)
				)
				custom action "Complete"
				(
	  			workflow = Complete1
				show action in view header = true
				execute action for collection of records
				column header = "Complete"
				success message = ""
				condition = (Complaint_Status != "Completed" && Complaint_Status != "Reported")
				)
			)
			filters
			(
				Unit_Name
				Complaint_Status
				Maintenance_Service
				Date_of_Incident
				Owner_Email
				Tenant_Email
				Manager_Email
				Property_Name
				Location
				Assigned_to
			)
			group by
			(
				Property_Name ascending
			)
			options
			(
				icon = "files-folder-exclamation"
	 		)
			conditional formatting
			(
				"In Progress"
				{
				condition = (Complaint_Status == "In Progress")
				fields = [Complaint_Status, Complaint_ID]
				format = "color:#0598fa;background-color:#ffffff;"
				}
				"Over Due"
				{
				condition = (Complaint_Status == "Overdue")
				fields = [Complaint_Status, Complaint_ID]
				format = "color:#ff5252;background-color:#ffffff;"
				}
				"Completed"
				{
				condition = (Complaint_Status == "Completed")
				fields = [Complaint_Status, Complaint_ID]
				format = "color:#008a53;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Date_of_Incident as "Date of Reporting"
							Complaint_Status as "Complaint Status"
							Complaint_ID as "Complaint ID"
							Unit_Name as "Unit Name"
							Add_Image as "Add Image"
							Property_Name as "Property Name"
							Complaint_Details as "Complaint  Details"
							Complaint_about as "Complaint about"
							Complaint_Raised_By as "Complaint Raised By"
							Maintenance_Service as "Maintenance Service"
							Location
							Assigned_to as "Assigned to"
				"Assign"
				"Complete"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
			 			"Assign"
			 			"Complete"
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
								"Assign"
								"Complete"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Date_of_Incident as "Date of Reporting"
							Complaint_Status as "Complaint Status"
							Complaint_ID as "Complaint ID"
							Unit_Name as "Unit Name"
							Add_Image as "Add Image"
							Property_Name as "Property Name"
							Complaint_Details as "Complaint  Details"
							Complaint_about as "Complaint about"
							Complaint_Raised_By as "Complaint Raised By"
							Maintenance_Service as "Maintenance Service"
							Location
							Assigned_to as "Assigned to"
				"Assign"
				"Complete"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
			 			"Complete"
			 			"Assign"
    	 			)
    			)
			)
		}
		list Complaints_Manager_View
		{
			displayName = "Complaints Manager View"
			show all rows from Raise_a_Complaint  [Manager_Email.Email == zoho.loginuserid]  
			(
				Date_of_Incident as "Date of Reporting"
				Unit_Name as "Unit Name"
				Complaint_Details as "Complaint  Details"
				Add_Image as "Add Image"
				Complaint_about as "Complaint about"
				Complaint_Raised_By as "Complaint Raised By"
				Maintenance_Service as "Maintenance Service"
				Complaint_ID as "Complaint ID"
				Complaint_Status as "Complaint Status"
				Assigned_to as "Assigned to"
				(
					view = All_Staffs
				)
				custom action "Assign"
				(
	  			workflow = Assign2
				show action in view header = true
				show action in edit record menu = true
				column header = "Assign"
				success message = ""
				condition = (Assigned_to is null)
				)
			)
			options
			(
				icon = "location-position-user"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Date_of_Incident as "Date of Reporting"
							Unit_Name as "Unit Name"
							Complaint_Details as "Complaint  Details"
							Add_Image as "Add Image"
							Complaint_about as "Complaint about"
							Complaint_Raised_By as "Complaint Raised By"
							Maintenance_Service as "Maintenance Service"
							Complaint_ID as "Complaint ID"
							Complaint_Status as "Complaint Status"
							Assigned_to as "Assigned to"
				"Assign"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Assign"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
								"Assign"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Date_of_Incident as "Date of Reporting"
							Unit_Name as "Unit Name"
							Complaint_Details as "Complaint  Details"
							Add_Image as "Add Image"
							Complaint_about as "Complaint about"
							Complaint_Raised_By as "Complaint Raised By"
							Maintenance_Service as "Maintenance Service"
							Complaint_ID as "Complaint ID"
							Complaint_Status as "Complaint Status"
							Assigned_to as "Assigned to"
				"Assign"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Assign"
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Complaints_Owner_View
		{
			displayName = "Complaints Owner View"
			show all rows from Raise_a_Complaint  [Owner_Email.Email == zoho.loginuserid]  
			(
				Date_of_Incident as "Date of Reporting"
				Unit_Name as "Unit Name"
				Complaint_Details as "Complaint  Details"
				Add_Image as "Add Image"
				Complaint_about as "Complaint about"
				Complaint_Raised_By as "Complaint Raised By"
				Maintenance_Service as "Maintenance Service"
				Complaint_ID as "Complaint ID"
				Complaint_Status as "Complaint Status"
				Assigned_to as "Assigned to"
				(
					view = All_Staffs
				)
				custom action "Assign"
				(
	  			workflow = Assign3
				show action in view header = true
				show action in edit record menu = true
				column header = "Assign"
				success message = ""
				condition = (Assigned_to is null)
				)
			)
			options
			(
				icon = "location-explore-user"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Date_of_Incident as "Date of Reporting"
							Unit_Name as "Unit Name"
							Complaint_Details as "Complaint  Details"
							Add_Image as "Add Image"
							Complaint_about as "Complaint about"
							Complaint_Raised_By as "Complaint Raised By"
							Maintenance_Service as "Maintenance Service"
							Complaint_ID as "Complaint ID"
							Complaint_Status as "Complaint Status"
							Assigned_to as "Assigned to"
				"Assign"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Assign"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
								"Assign"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Date_of_Incident as "Date of Reporting"
							Unit_Name as "Unit Name"
							Complaint_Details as "Complaint  Details"
							Add_Image as "Add Image"
							Complaint_about as "Complaint about"
							Complaint_Raised_By as "Complaint Raised By"
							Maintenance_Service as "Maintenance Service"
							Complaint_ID as "Complaint ID"
							Complaint_Status as "Complaint Status"
							Assigned_to as "Assigned to"
				"Assign"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Assign"
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Complaints_Tenant_View
		{
			displayName = "Complaints Tenant View"
			show all rows from Raise_a_Complaint  [Tenant_Email.Email == zoho.loginuserid]  
			(
				Date_of_Incident as "Date of Reporting"
				Unit_Name as "Unit Name"
				Add_Image as "Add Image"
				Complaint_Details as "Complaint  Details"
				Complaint_about as "Complaint about"
				Complaint_Raised_By as "Complaint Raised By"
				Maintenance_Service as "Maintenance Service"
				Complaint_ID as "Complaint ID"
				Complaint_Status as "Complaint Status"
				custom action "Assign"
				(
	  			workflow = Assign4
				column header = "Assign"
				success message = ""
				)
			)
			options
			(
				icon = "files-user"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Date_of_Incident as "Date of Reporting"
							Unit_Name as "Unit Name"
							Add_Image as "Add Image"
							Complaint_Details as "Complaint  Details"
							Complaint_about as "Complaint about"
							Complaint_Raised_By as "Complaint Raised By"
							Maintenance_Service as "Maintenance Service"
							Complaint_ID as "Complaint ID"
							Complaint_Status as "Complaint Status"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Date_of_Incident as "Date of Reporting"
							Unit_Name as "Unit Name"
							Add_Image as "Add Image"
							Complaint_Details as "Complaint  Details"
							Complaint_about as "Complaint about"
							Complaint_Raised_By as "Complaint Raised By"
							Maintenance_Service as "Maintenance Service"
							Complaint_ID as "Complaint ID"
							Complaint_Status as "Complaint Status"
				"Assign"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Tenant_Portal
	{
		displayname= "Tenant Portal"
		icon = "ui-1-home-52"
		summary My_Details_tenant
		{
			displayName = "My Details"
			show all rows from Add_Tenant_Details  [Email == zoho.loginuserid]  
			(
				Property_Name as "Property Name"
				Unit_Name as "Unit Name"
				Gender
				Occupation
				Date_of_birth as "Date of birth"
				Age
				Email
				Number_of_Occupants as "Number of Occupants"
				Starting_Date as "Lease Starting Date"
				Lease_Ending_Date as "Lease Ending Date"
				Base_Rent as "Base Rent"
				Additional_Charges as "Additional Charges"
				Taxes
				Insurance
				Maintainance
				Lease_Cycle as "Lease Cycle"
				Months as "Month(s)"
				Years as "Year(s)"
				Net_Payable as "Net Payable"
				Acknowledgement as "Hereby, Tenant accept all the Terms and Condition"
				Tenant_Signature as "Tenant Signature"
				Owner_Name as "Owner Name"
			)
			options
			(
				display rows = 1
				display records per row = 2
				icon = "users-single-03"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Property_Name as "Property Name"
							Unit_Name as "Unit Name"
							Gender
							Occupation
							Date_of_birth as "Date of birth"
							Age
							Email
							Number_of_Occupants as "Number of Occupants"
							Starting_Date as "Lease Starting Date"
							Lease_Ending_Date as "Lease Ending Date"
							Base_Rent as "Base Rent"
							Additional_Charges as "Additional Charges"
							Taxes
							Insurance
							Maintainance
							Lease_Cycle as "Lease Cycle"
							Months as "Month(s)"
							Years as "Year(s)"
							Net_Payable as "Net Payable"
							Acknowledgement as "Hereby, Tenant accept all the Terms and Condition"
							Tenant_Signature as "Tenant Signature"
							Owner_Name as "Owner Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Property_Name as "Property Name"
							Unit_Name as "Unit Name"
							Gender
							Occupation
							Date_of_birth as "Date of birth"
							Age
							Email
							Number_of_Occupants as "Number of Occupants"
							Starting_Date as "Lease Starting Date"
							Lease_Ending_Date as "Lease Ending Date"
							Base_Rent as "Base Rent"
							Additional_Charges as "Additional Charges"
							Taxes
							Insurance
							Maintainance
							Lease_Cycle as "Lease Cycle"
							Months as "Month(s)"
							Years as "Year(s)"
							Net_Payable as "Net Payable"
							Acknowledgement as "Hereby, Tenant accept all the Terms and Condition"
							Tenant_Signature as "Tenant Signature"
							Owner_Name as "Owner Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Tenants_View
		{
			displayName = "Tenants View"
			show all rows from Add_Unit_Details  [Tenant_Name.Email == zoho.loginuserid]  
			(
				Property_Name as "Property Name"
				Block
				Floor
				Area as "Area (in Sq. ft)"
				Bedrooms
				Bathrooms
				Amenities
				Owner_Email as "Owner Email"
				Status
				Tenant_Name as "Tenant Name"
				Old_Tenants as "Old Tenants"
				Unit_Name as "Unit Name"
				custom action "Complaint"
				(
	  			workflow = Complaint3
				show action in view header = true
				column header = "Complaint"
				success message = "Please register  your complaint here!"
				)
			)
			options
			(
				icon = "files-user"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Property_Name as "Property Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Owner_Email as "Owner Email"
							Status
							Tenant_Name as "Tenant Name"
							Old_Tenants as "Old Tenants"
				"Complaint"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
								"Complaint"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Property_Name as "Property Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Owner_Email as "Owner Email"
							Status
							Tenant_Name as "Tenant Name"
							Old_Tenants as "Old Tenants"
				"Complaint"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Payments
		{
			displayName = "My Payments"
			template = Invoice1
			print template = Invoice1
			show all rows from Rental_Payment  [(Tenant_Name.Email == zoho.loginuserid && Status == "Paid") || Added_User == zoho.loginuser]  
			(
				Property_Name as "Property Name"
				Starting_Date as "Starting Date"
				Next_Due_Date as "Next Due Date"
				Unit_Name as "Unit Name"
				Owner_Name as "Owner Name"
				Tenant_Name as "Tenant Name"
				Status
				Rent_Amount as "Rent Amount"
				Overdue_Amount as "Overdue Amount"
				Amount_to_be_Paid as "Amount to be Paid"
				Amount_Paid as "Amount Paid"
				Next_Due as "Next Due"
				Mode_of_Payment as "Mode of Payment"
				custom action "View Invoice"
				(
	  			workflow = View_Invoice
				column header = "View Invoice"
				success message = ""
				condition = (Status == "Paid")
				)
			)
			options
			(
				icon = "business-money-time"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Property_Name as "Property Name"
							Starting_Date as "Starting Date"
							Next_Due_Date as "Next Due Date"
							Unit_Name as "Unit Name"
							Owner_Name as "Owner Name"
							Tenant_Name as "Tenant Name"
							Status
							Rent_Amount as "Rent Amount"
							Overdue_Amount as "Overdue Amount"
							Amount_to_be_Paid as "Amount to be Paid"
							Amount_Paid as "Amount Paid"
							Next_Due as "Next Due"
							Mode_of_Payment as "Mode of Payment"
				"View Invoice"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Property_Name as "Property Name"
							Starting_Date as "Starting Date"
							Next_Due_Date as "Next Due Date"
							Unit_Name as "Unit Name"
							Owner_Name as "Owner Name"
							Tenant_Name as "Tenant Name"
							Status
							Rent_Amount as "Rent Amount"
							Overdue_Amount as "Overdue Amount"
							Amount_to_be_Paid as "Amount to be Paid"
							Amount_Paid as "Amount Paid"
							Next_Due as "Next Due"
							Mode_of_Payment as "Mode of Payment"
				"View Invoice"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Manager
	{
		icon = "users-2-standing-man"
		list My_Details_Manager
		{
			displayName = "My Details"
			show all rows from Add_Managers  [Email == zoho.loginuserid]  
			(
				Email
			)
			options
			(
				icon = "users-2-contacts-44"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Manager_View
		{
			displayName = "Manager View"
			show all rows from Add_Unit_Details  [Manager_Email.Email == zoho.loginuserid]  
			(
				Unit_Name as "Unit Name"
				Property_Name as "Property Name"
				Block
				Floor
				Area as "Area (in Sq. ft)"
				Bedrooms
				Bathrooms
				Amenities
				Owner_Email as "Owner Email"
				Status
				Tenant_Name as "Tenant Name"
				Complaint_IDs as "Complaints"
				(
					view = Complaints_Manager_View
					delimiter = newline
				)
				custom action "Complaint"
				(
	  			workflow = Complaint4
				column header = "Complaint"
				success message = "Please register  your complaint here!"
				)
				custom action "Add Tenant"
				(
	  			workflow = Add_Tenant2
				column header = "Add Tenant"
				success message = ""
				condition = (Status != "Occupied" && Status != "Renovation")
				)
				custom action "Check Out"
				(
	  			workflow = Check_Out2
				column header = "Check Out"
				success message = ""
				condition = (Tenant_Name is not null)
				)
			)
			options
			(
				icon = "location-explore-user"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Property_Name as "Property Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Owner_Email as "Owner Email"
							Status
							Tenant_Name as "Tenant Name"
							Complaint_IDs as "Complaints"
				"Complaint"
				"Add Tenant"
				"Check Out"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Property_Name as "Property Name"
							Block
							Floor
							Area as "Area (in Sq. ft)"
							Bedrooms
							Bathrooms
							Amenities
							Owner_Email as "Owner Email"
							Status
							Tenant_Name as "Tenant Name"
							Complaint_IDs as "Complaints"
				"Complaint"
				"Add Tenant"
				"Check Out"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Owner_Details
	{
		displayname= "Owner Details"
		icon = "users-2-standing-man"
	}
	section Maintenance_People
	{
		displayname= "Maintenance People"
		icon = "users-2-a-add"
		form Add_Staff
		{
			displayname = "Add Staff"
			success message = "User Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			unique User_ID
			(
    			type = text
				displayname = "User ID"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			User_Email
			(
    			type = email
				displayname = "User Email"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Contact_Number
			(
    			type = phonenumber
				displayname = "Contact Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Services
			(
				type = list	
				values  = Add_Services.ID
    			displayformat = [Service]
				allow new entries = true
				[
					displayname = "Add New Service"
				]
				searchable = true
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Working_Location
			(
				type = picklist	
				displayname = "Working Location"
				values  = Add_Location.ID
    			displayformat = [Location]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Current_Address
			(
    			type = address
				displayname = "Current Address"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Country
			(
				type = picklist
				values = {"Afghanistan","Albania","Algeria","AmericanSamoa","Andorra","Angola","Anguilla","AntiguaandBarbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bonaire","BosniaandHerzegovina","Botswana","Brazil","BritishIndianOceanTer","Brunei","Bulgaria","BurkinaFaso","Burundi","Cambodia","Cameroon","Canada","CanaryIslands","CapeVerde","CaymanIslands","CentralAfricanRepublic","Chad","ChannelIslands","Chile","China","ChristmasIsland","CocosIsland","Colombia","Comoros","Congo","CookIslands","CostaRica","CoteDIvoire","CoteD'Ivoire","Croatia","Cuba","Curaco","Curacao","Cyprus","CzechRepublic","Denmark","Djibouti","Dominica","DominicanRepublic","EastTimor","Ecuador","Egypt","ElSalvador","EquatorialGuinea","Eritrea","Estonia","Ethiopia","FalklandIslands","FaroeIslands","Fiji","Finland","France","FrenchGuiana","FrenchPolynesia","FrenchSouthernTer","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","GreatBritain","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guinea","Guyana","Haiti","Hawaii","Honduras","HongKong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","IsleofMan","Israel","Italy","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","KoreaNorth","KoreaSout","KoreaSouth","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macau","Macedonia","Madagascar","Malaysia","Malawi","Maldives","Mali","Malta","MarshallIslands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","MidwayIslands","Moldova","Monaco","Mongolia","Montserrat","Morocco","Mozambique","Myanmar","Nambia","Nauru","Nepal","NetherlandAntilles","Netherlands","Netherlands(Holland","Europe)","Nevis","NewCaledonia","NewZealand","Nicaragua","Niger","Nigeria","Niue","NorfolkIsland","Norway","Oman","Pakistan","PalauIsland","Palestine","Panama","PapuaNewGuinea","Paraguay","Peru","Phillipines","Philippines","PitcairnIsland","Poland","Portugal","PuertoRico","Qatar","RepublicofMontenegro","RepublicofSerbia","Reunion","Romania","Russia","Rwanda","StBarthelemy","StEustatius","StHelena","StKitts-Nevis","StLucia","StMaarten","StPierreandMiquelon","StVincentandGrenadines","Saipan","Samoa","SamoaAmerican","SanMarino","SaoTomeandPrincipe","SaudiArabia","Senegal","Serbia","Seychelles","SierraLeone","Singapore","Slovakia","Slovenia","SolomonIslands","Somalia","SouthAfrica","Spain","SriLanka","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Tahiti","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tokelau","Tonga","TrinidadandTobago","Tunisia","Turkey","Turkmenistan","TurksandCaicosIs","Tuvalu","Uganda","Ukraine","UnitedArabErimates","UnitedArabEmirates","UnitedKingdom","UnitedStatesofAmerica","Uraguay","Uruguay","Uzbekistan","Vanuatu","VaticanCityState","Venezuela","Vietnam","VirginIslands(Brit)","VirginIslands(USA)","WakeIsland","WallisandFutanaIs","Yemen","Zaire","Zambia","Zimbabwe"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Share_Visitor_Section
			(
    			type = checkbox
				displayname = "Allow user to access visitor records"
				initial value = false
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assigned_Tasks
			(
				type = list	
				displayname = "Assigned Tasks"
				values  = Raise_a_Complaint.ID
    			bidirectional = Assigned_to
    			displayformat = [Complaint_ID]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Staffs
		{
			displayName = "All Staffs"
			show all rows from Add_Staff    
			(
				User_ID as "User ID"
				Country
				Services
				Working_Location as "Working Location"
				Assigned_Tasks as "Assigned Tasks"
				Share_Visitor_Section as "Allow user to access visitor records"
				User_Email as "User Email"
			)
			options
			(
				icon = "users-2-contacts-45"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							User_ID as "User ID"
							Country
							Services
							Working_Location as "Working Location"
							Assigned_Tasks as "Assigned Tasks"
							Share_Visitor_Section as "Allow user to access visitor records"
							User_Email as "User Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							User_ID as "User ID"
							Country
							Services
							Working_Location as "Working Location"
							Assigned_Tasks as "Assigned Tasks"
							Share_Visitor_Section as "Allow user to access visitor records"
							User_Email as "User Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Contacts
	{
		icon = "users-multiple-11"
		form Add_Contact
		{
			displayname = "Add Contact"
			success message = "Contact Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contact_Number
			(
    			type = phonenumber
				displayname = "Contact Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Occupation
			(
				type = picklist
				values = {"Kid","Student","Business","Doctor","Engineer","Lawyer","Army / Ex- Army","Elderly"}
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Maintenance
			(
    			type = checkbox
				initial value = false
	 			row = 1
	 			column = 1   
				width = medium
			)
			Archive
			(
    			type = checkbox
				initial value = false
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Contacts
		{
			displayName = "All Contacts"
			show all rows from Add_Contact    
			(
				Email
				Occupation
				Maintenance
				Archive
			)
			options
			(
				icon = "users-badge-13"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Email
							Occupation
							Maintenance
							Archive
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Email
							Occupation
							Maintenance
							Archive
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Visitors
	{
		icon = "users-multiple-11"
		form Add_Visitors
		{
			displayname = "Add Visitors"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Unit_Name
			(
				type = picklist	
				displayname = "Unit Name"
				values  = Add_Unit_Details[Status == "Occupied"].ID
    			displayformat = [Unit_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Person_to_Meet
			(
				type = picklist	
				displayname = "Person to Meet"
				values  = Add_Tenant_Details[Unit_Name == input.Unit_Name].ID
    			displayformat = [Name.first_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contact_Number
			(
    			type = phonenumber
				displayname = "Contact Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Parking
			(
				type = picklist
				values = {"Yes","No"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have No_of_Visitors
			(
				type = number
				displayname = "No. of Visitors"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Check_in
			(
    			type = datetime
				displayname = "Check in"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Check_out
			(
    			type = datetime
				displayname = "Check out"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Visitors_Details
		{
			displayName = "All Visitors Details"
			show all rows from Add_Visitors    
			(
				Unit_Name as "Unit Name"
				Person_to_Meet as "Person to Meet"
				custom action "Check Out"
				(
	  			workflow = Check_Out4
				show action in view header = true
				execute action for collection of records
				column header = "Check Out"
				success message = ""
				condition = (Check_out is null)
				)
				Email
				Check_in as "Check in"
				Check_out as "Check out"
				Parking
				No_of_Visitors as "No. of Visitors"
			)
			options
			(
				icon = "users-2-focus"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Check Out"
							Unit_Name as "Unit Name"
							Person_to_Meet as "Person to Meet"
							Email
							Check_in as "Check in"
							Check_out as "Check out"
							Parking
							No_of_Visitors as "No. of Visitors"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
			 			"Check Out"
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Check Out"
							Unit_Name as "Unit Name"
							Person_to_Meet as "Person to Meet"
							Email
							Check_in as "Check in"
							Check_out as "Check out"
							Parking
							No_of_Visitors as "No. of Visitors"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Check Out"
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Visitors
		{
			displayName = "My Visitors"
			show all rows from Add_Visitors  [Person_to_Meet.Email == zoho.loginuserid]  
			(
				Unit_Name as "Unit Name"
				Person_to_Meet as "Person to Meet"
				Email
				Check_in as "Check in"
				Check_out as "Check out"
				Parking
				No_of_Visitors as "No. of Visitors"
			)
			options
			(
				icon = "users-2-family"
	 		)
			custom actions
			(
				"Check Out"
				(
	  			workflow = Check_Out5
				show action in view header = true
				execute action for collection of records
				success message = ""
				condition = (Check_out is null)
				)
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Person_to_Meet as "Person to Meet"
							Email
							Check_in as "Check in"
							Check_out as "Check out"
							Parking
							No_of_Visitors as "No. of Visitors"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
			 			"Check Out"
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Unit_Name as "Unit Name"
							Person_to_Meet as "Person to Meet"
							Email
							Check_in as "Check in"
							Check_out as "Check out"
							Parking
							No_of_Visitors as "No. of Visitors"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		pivotchart Weekly_Visitor_Stats
		{ 
			displayname = "Weekly Visitor Stats"
			legend = RIGHT
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1535366428334_Add_Visitors
							icon = "business-chart-bar-32"				show all rows from Add_Visitors
				(
			Contact_Number  as "Contact Number"
			Unit_Name  as "Unit Name"
			Parking 
			Email 
			Check_out  as "Check out"
			Person_to_Meet  as "Person to Meet"
			No_of_Visitors  as "No. of Visitors"
			Name 
 			(
 				first_name as "Name"
 				prefix as "Name.Prefix"
 				last_name as "Name.Last Name"
 				suffix as "Name.Suffix"
     			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
 			)
			Check_in  as "Check in"
				)
		}
		pivotchart Monthly_Visitor_Stats
		{ 
			displayname = "Monthly Visitor Stats"
			legend = RIGHT
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1535366428334_Add_Visitors
							icon = "business-chart-bar-32"				show all rows from Add_Visitors
				(
			Contact_Number  as "Contact Number"
			Unit_Name  as "Unit Name"
			Parking 
			Email 
			Check_out  as "Check out"
			Person_to_Meet  as "Person to Meet"
			No_of_Visitors  as "No. of Visitors"
			Name 
 			(
 				first_name as "Name"
 				prefix as "Name.Prefix"
 				last_name as "Name.Last Name"
 				suffix as "Name.Suffix"
     			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
 			)
			Check_in  as "Check in"
				)
		}
	}
	section Configurations
	{
		icon = "ui-1-lock-circle"
		list Property_types
		{
			displayName = "Property types"
			show all rows from Add_Property_type    
			(
				Property_Type as "Property Type"
			)
			options
			(
				icon = "business-hierarchy-54"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Property_Type as "Property Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Property_Type as "Property Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Add_Policy
		{
			displayname = "Add Policy"
			success message = "Policy Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Property_Name
			(
				type = picklist	
				displayname = "Property Name"
				values  = Add_Property.ID
    			bidirectional = Policies
    			displayformat = [Property_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Policy_Name
			(
    			type = text
				displayname = "Policy Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Policy
			(
    			type = richtext
				displayname = "Policy Terms"
				height = 200px
				toolbar = enable
				[
					style, font-color, background-color, alignment, link, table, bullets-and-numbering, 
					font-size : {1, 2, 3, 4, 5, 6, 7},
					font-family : {"Serif", "Arimo", "Ptmono", "Heuristica", "OpenSans", "Tinos", "Lato", "DejaVuSans", "ComicNeue"}
				]
	 			row = 1
	 			column = 1   
				width = 506px
			)
			Policy_Document
			(
    			type = upload file
				displayname = "Policy Document"
				browse = local_drive
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Amenities
		{
			displayName = "Amenities"
			show all rows from Add_Amenities    
			(
				Amenities
			)
			options
			(
				icon = "travel-pool"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Amenities
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Amenities
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Add_Owner
		{
			displayname = "Add Owner"
			success message = "Owner Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Owner_Name
			(
    			type = name
				displayname = "Owner Name"
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contact_Number
			(
    			type = phonenumber
				displayname = "Contact Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			Current_Address
			(
    			type = address
				displayname = "Current Address"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Owner_Signature
			(
    			type = signature
				displayname = "Owner Signature"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Unit_Name
			(
				type = list	
				displayname = "Unit Name"
				values  = Add_Unit_Details.ID
    			bidirectional = Owner_Email
    			displayformat = [Unit_Name]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Policies
		{
			displayName = "All Policies"
			show all rows from Add_Policy    
			(
				Policy_Name as "Policy Name"
				Policy as "Policy Terms"
				Policy_Document as "Policy Document"
				Property_Name as "Property Name"
			)
			options
			(
				icon = "business-agenda"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Policy_Name as "Policy Name"
							Policy as "Policy Terms"
							Policy_Document as "Policy Document"
							Property_Name as "Property Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Policy_Name as "Policy Name"
							Policy as "Policy Terms"
							Policy_Document as "Policy Document"
							Property_Name as "Property Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Blocks
		{
			displayName = "Blocks"
			show all rows from Add_Block    
			(
				Block
				Property_Name as "Property Name"
			)
			options
			(
				icon = "business-building"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Block
							Property_Name as "Property Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Block
							Property_Name as "Property Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Floors
		{
			displayName = "Floors"
			show all rows from Add_Floor    
			(
				Block
				Floor
				Property_Name as "Property Name"
			)
			options
			(
				icon = "holidays-chimney"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Block
							Floor
							Property_Name as "Property Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Block
							Floor
							Property_Name as "Property Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Managers_Details
		{
			displayName = "Managers Details"
			show all rows from Add_Managers    
			(
				Email
				Manager_Signature as "Manager Signature"
			)
			options
			(
				icon = "users-single-04"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Email
							Manager_Signature as "Manager Signature"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Email
							Manager_Signature as "Manager Signature"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Owner_Details
		{
			displayName = "Owner Details"
			show all rows from Add_Owner    
			(
				Email
				Unit_Name as "Unit Name"
				(
					view = Owner_View
					delimiter = newline
				)
				Owner_Signature as "Owner Signature"
			)
			options
			(
				icon = "users-single-04"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Email
							Unit_Name as "Unit Name"
							Owner_Signature as "Owner Signature"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Email
							Unit_Name as "Unit Name"
							Owner_Signature as "Owner Signature"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Charts
	{
		icon = "ui-2-menu-bold"
		pivotchart Property_Stats
		{ 
			displayname = "Property Stats"
			legend = RIGHT
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1535366878905_Add_Unit_Details
					hide = true
							icon = "business-chart-bar-32"				show all rows from Add_Unit_Details
				(
			Floor 
			Tenant_Name  as "Tenant Name"
			Unit_Name  as "Unit Name"
			Location 
			Property_Name  as "Property Name"
			Manager_Email  as "Manager Email"
			Block 
			Status 
			Bathrooms 
			Owner_Email  as "Owner Email"
			Area  as "Area (in Sq. ft)"
			Bedrooms 
				)
		}
		pivotchart Complaint_Stats
		{ 
			displayname = "Complaint Stats"
			legend = RIGHT
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1535367085979_Raise_a_Complaint
					hide = true
							icon = "business-chart-bar-32"				show all rows from Raise_a_Complaint
				(
			Date_of_Incident  as "Date of Reporting"
			Complaint_ID  as "Complaint ID"
			Manager_Email  as "Manager Email"
			Assigned_to  as "Assigned to"
			Owner_Email  as "Owner Email"
			Tenant_Email  as "Tenant Email"
			Complaint_Raised_By  as "Complaint Raised By"
			Complaint_Status  as "Complaint Status"
			Complaint_about  as "Complaint about"
			Complaint_Details  as "Complaint  Details"
			Unit_Name  as "Unit Name"
			Maintenance_Service  as "Maintenance Service"
			Property_Name  as "Property Name"
			Location 
				)
		}
	}
		 functions
		 {
			 Deluge
			 {
				 string AdminDashboard.Complaints_Completed()
         {
         	getCount = Raise_a_Complaint[ID != 0 && Complaint_Status == "Completed"].count();
         	return getCount.toString();
         }
				 string AdminDashboard.Complaints_Overdue()
         {
         	getCount = Raise_a_Complaint[ID != 0 && Complaint_Status == "Overdue"].count();
         	return getCount.toString();
         }
				 string AdminDashboard.Complaints_Reported()
         {
         	getCount = Raise_a_Complaint[ID != 0 && Complaint_Status == "Reported" || Complaint_Status == "In Progress"].count();
         	return getCount.toString();
         }
				 string AdminDashboard.Properties_CheckedIn()
         {
         	getCount = Add_Unit_Details[ID != 0 && Status == "Occupied"].count();
         	return getCount.toString();
         }
				 string AdminDashboard.Properties_Renovation()
         {
         	getCount = Add_Unit_Details[ID != 0 && Status == "Renovation"].count();
         	return getCount.toString();
         }
				 string AdminDashboard.Properties_Vacant()
         {
         	getCount = Add_Unit_Details[ID != 0 && Status == "Vacant"].count();
         	return getCount.toString();
         }
				 string AdminDashboard.Revenue_Overdue()
         {
         	sum = Rental_Payment[ID != 0 && Status == "Overdue"].sum(Amount_to_be_Paid);
         	return sum.toString();
         }
				 string AdminDashboard.Revenue_Paid()
         {
         	sum = Rental_Payment[ID != 0 && Status == "Paid"].sum(Amount_Paid);
         	return sum.toString();
         }
				 string AdminDashboard.Revenue_Rent()
         {
         	//     sum = Add_Tenant_Details[(ID != 0 && Status == "Move in")].sum(Net_Payable);
         	sum = Rental_Payment[ID != 0 && Status == "Not Paid"].sum(Amount_to_be_Paid);
         	return sum.toString();
         }
				 string AdminDashboard.Visitors_Thismonth()
         {
         	getThismonth_Visitors = Add_Visitors[Check_in in this month].sum(No_of_Visitors);
         	return getThismonth_Visitors.toString();
         }
				 string AdminDashboard.Visitors_Thisweek()
         {
         	// 	startofWeek = toStartOfWeek(zoho.currentdate);
         	// 	endofWeek = startofWeek.addDay(6);
         	//	getThisweek_Visitors = Add_Visitors[Check_in >= startofWeek &&  Check_in <= endofWeek].count();
         	getThisweek_Visitors = Add_Visitors[Check_in in this week].sum(No_of_Visitors);
         	return getThisweek_Visitors.toString();
         }
				 string AdminDashboard.Visitors_Today()
         {
         	getToday_Visitors = Add_Visitors[Check_in == today].sum(No_of_Visitors);
         	return getToday_Visitors.toString();
         }
				 void appSharing.toManager(string managerEmail)
         {
         	thisapp.permissions.assignUserInProfile(managerEmail,"Manager");
         }
				 void appSharing.toOwner(string ownerEmail)
         {
         	thisapp.permissions.assignUserInProfile(ownerEmail,"Owner");
         }
				 void appSharing.toSecurity(string securityEmail)
         {
         	thisapp.permissions.assignUserInProfile(securityEmail,"Security");
         }
				 void appSharing.toTenant(string tenantEmail)
         {
         	thisapp.permissions.assignUserInProfile(tenantEmail,"Tenant");
         }
				 void appUnsharing.toManager(string managerEmail)
         {
         	thisapp.permissions.deleteuser(managerEmail);
         }
				 void appUnsharing.toOwner(string ownerEmail)
         {
         	thisapp.permissions.deleteuser(ownerEmail);
         }
				 void appUnsharing.toSecurity(string securityEmail)
         {
         	thisapp.permissions.deleteuser(securityEmail);
         }
				 void appUnsharing.toTenant(string tenantEmail)
         {
         	thisapp.permissions.deleteuser(tenantEmail);
         }
				 void custom_actions.addTenant(int recid)
         {
         	getUnitDetails = Add_Unit_Details[ID == input.recid];
         	propertyID = getUnitDetails.Property_Name;
         	ownerID = getUnitDetails.Owner_Email;
         	openUrl("#Form:Add_Tenant_Details?Property_Name=" + propertyID + "&Unit_Name=" + recid + "&Owner_Name=" + ownerID,"popup window");
         }
				 void custom_actions.Assigned_to(int recID)
         {
         	openUrl("#Form:Assign_task?Complaint_ID=" + recID,"popup window");
         }
				 void custom_actions.checkOutTime(Add_Visitors visitorObject)
         {
         	visitorObject.Check_out=zoho.currenttime;
         }
				 void custom_actions.markasVacant(Add_Unit_Details recOBJ)
         {
         	recOBJ.Status="Vacant";
         }
				 void custom_actions.payAmount(int recID)
         {
         	openUrl("#Form:Rental_Payment?recLinkID=" + recID + "&viewLinkName=Rental_Payment_Details&open=custom_action","popup window");
         }
				 void custom_actions.Raise_A_Complaint(int recID)
         {
         	openUrl("#Form:Raise_a_Complaint?Unit_Name=" + recID,"popup window");
         	//     openUrl("#Form:Raise_a_Complaint?Unit_Name=" + input.recID, "same window");
         }
				 void custom_actions.taskComplete(Raise_a_Complaint recObj)
         {
         	recObj.Complaint_Status="Completed";
         }
				 void custom_actions.tenantCheckOut(int tenantRecID)
         {
         	recOBJ = Add_Tenant_Details[ID == input.tenantRecID];
         	recOBJ.Status="Moved Out";
         	getUnitDetails = Add_Unit_Details[ID == recOBJ.Unit_Name];
         	recOBJ.Lease_Ending_Date=zoho.currentdate;
         	//Adding Current Tenant to the Old Tenant List	
         	// trying to update Multiselect Lookup Directly. If it doesn't Help please try alternative method
         	// getUnitDetails.add(recOBJ.ID);
         	// Alternative Method 
         	preTenants = List:String();
         	preTenants = getUnitDetails.Old_Tenants;
         	preTenants.add(recOBJ.ID);
         	getUnitDetails.Old_Tenants=preTenants;
         	// Remvoing Current Tenant from the Unit Details	
         	getUnitDetails.Tenant_Name=null;
         	getUnitDetails.Status="Vacant";
         	//unshare this app with the Tenant
         	thisapp.appUnsharing.toTenant(recOBJ.Email);
         	// Make this Tenat's Payments Archive
         	for each  rec in Rental_Payment[Tenant_Name == recOBJ.ID]
         	{
         		rec.Archive=true;
         	}
         	for each  eachrec in recOBJ.Occupants_Details
         	{
         		getContactDetails = Add_Contact[Email == eachrec.Email || Contact_Number == eachrec.Contact_Number];
         		if(getContactDetails.count() != 0)
         		{
         			getContactDetails.Archive=true;
         		}
         	}
         	getMainContact = Add_Contact[Email == recOBJ.Email || Contact_Number == recOBJ.Contact_Number];
         	if(getMainContact.count() != 0)
         	{
         		getMainContact.Archive=true;
         	}
         }
				 void custom_actions.unitRenovate(Add_Unit_Details recObj)
         {
         	recObj.Status="Renovation";
         }
				 void custom_actions.viewInvoice(int recID)
         {
         	openUrl(zoho.appuri + "record-summary/My_Payments/" + recID,"new window");
         }
				 void Notification.Invitation(string userEmail)
         {
         	appname = zoho.appname;
         	sendmail
         	[
         		from :zoho.adminuserid
         		to :userEmail
         		subject :"Invitation to access '" + zoho.appname + "' "
         		message :"<div style='width:100%;display:inline-block;box-sizing:border-box;border:1px solid #ddd;'><div style='padding:2%;text-align:center;'>You've been invited to use an application built on Zoho Creator by \"" + zoho.adminuserid + "\".</div><div style='background: #efefef; padding: 20.0px;margin: 20.0px 0 10.0px;text-align:center;'><h2>" + appname.toUpperCase() + "</h2><div style='margin: 20.0px 0 10.0px;'><a style='padding:10px;background-color: rgb(62,149,205);text-decoration: none;color: rgb(255,255,255);font-size: 14.0px;' href='https://app.zohocreator.in" + zoho.appuri + "' target='_blank'> Go to application </a></div></div></div>"
         	]
         }
				 void Util.deleteContact(int tenantRecID)
         {
         	getTenantRec = Add_Tenant_Details[ID == input.tenantRecID];
         	if(getTenantRec.Add_to_Contact_list)
         	{
         		delete from Add_Contact[Contact_Number == getTenantRec.Contact_Number || Email == getTenantRec.Email];
         	}
         	for each  rec in getTenantRec.Occupants_Details
         	{
         		if(rec.Add_to_Contact_list)
         		{
         			delete from Add_Contact[Contact_Number == rec.Contact_Number || Email == rec.Email];
         		}
         	}
         }
			 }
		 }




		workflow
		{
		form
		{
			Run_Scripts_On_Button_Cli as "Run Scripts - On Button Click"
			{
				type =  form
				form = Assign_task
				button = Assign
				on click
				{
					actions 
					{
					on click
					(
						getComplaint = Raise_a_Complaint[ID == input.Complaint_ID];
										getComplaint.Assigned_to=input.Assign_to;
										getComplaint.Complaint_Status="In Progress";
										openUrl("#Script:dialog.close","same window");
					)
					}
				}
			}
			Hide_Floors_Field1 as "Hide Floors Field"
			{
				type =  form
				form = Add_Block
				record event = on add

				field rules
				{
					actions 
					{
						hide Floors;
					}
				}

			}
			Run_Scripts_While_Adding_9 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Managers
				record event = on add

				field rules
				{
					actions 
					{
						hide Managing_Units;
					}
				}

			}
			Run_Scripts_While_Adding_10 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Managers
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(input.Email != zoho.adminuserid)
										{
											thisapp.appSharing.toManager(input.Email);
											thisapp.Notification.Invitation(input.Email);
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing6 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Managers
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Email != old.Email)
										{
											// 	unshare with old.email
											thisapp.appUnsharing.toManager(old.Email);
											thisapp.appSharing.toManager(input.Email);
											thisapp.Notification.Invitation(input.Email);
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin6 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Add_Managers
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Email != zoho.adminuserid)
										{
											thisapp.appUnsharing.toManager(input.Email);
										}
						)
					}
				}

			}
			Run_Scripts_On_Always7 as "Run Scripts - On Always"
			{
				type =  form
				form = Assign_task
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											clear Assign_to;
										if(input.Complaint_ID != null)
										{
											getComplaintDetails = Raise_a_Complaint[ID == input.Complaint_ID];
											getunitDetails = Add_Unit_Details[ID == getComplaintDetails.Unit_Name];
											getPropertyDetails = Add_Property[ID == getunitDetails.Property_Name];
											getServices = Add_Services[ID == getComplaintDetails.Maintenance_Service];
											getuserList = Add_Staff[Working_Location == getPropertyDetails.Location].ID.getAll();
											input.Assign_to:ui.add(getuserList);
											input.Details = ("<div style='width:700px;border:1px solid #e5e5e5;box-sizing:border-box;'><div style='height:50px;border-bottom:1px solid #e5e5e5;'><div style='font-size:18px;padding:12px;'> " + getComplaintDetails.Complaint_about + " </div></div><div style='height:450px;background:#fff;box-sizing:content-box;'><div style='width:70%;float:left;height:inherit;'><div style='border-right:1.0px solid #efdfdf;height:93%;margin:4%;margin-bottom:0;overflow:auto;'><div style='font-size:16px;font-weight:800;'> Unit Details</div><div style='font-size:14px;color:#666666;padding: 10px 0px;'>" + getunitDetails.Unit_Name + "<br>" + getPropertyDetails.Address) + "</div> <div style='font-size:16px;font-weight:800;'> Brief Details </div><div style='font-size:14px;color:#666666;padding: 10px 0px;'>" + getComplaintDetails.Complaint_Details + "</div></div></div><div style='margin-top:4%;width:30%;float:right;'><div style='font-size:16px;font-weight:800;'> Complaint ID : <span style='color:red;padding:5% 0;'>#" + getComplaintDetails.Complaint_ID + "</span></div><div style='font-size:16px;font-weight:800;padding:5% 0;'> Service Maintenance <div style='font-size:14px;color:#666666;font-weight:100;word-wrap: break-word;'> " + getServices.Service + " </div> </div><div style='font-size:16px;font-weight:800;padding:5% 0;'> Requested by <div style='font-size:14px;color:#666666;font-weight:100;    text-overflow: ellipsis;    width: 100%;    overflow: hidden;'> " + getComplaintDetails.Complaint_Raised_By + " </div> </div></div></div></div></div></div><div style='clear:both;'></div>";
										}
						)
					}
				}

			}
			Run_Scripts_On_Always8 as "Run Scripts - On Always"
			{
				type =  form
				form = Assign_task
				record event = on add

				on user input of Complaint_ID
				{
					actions 
					{
						custom deluge script
						(
											if(input.Complaint_ID != null)
										{
											getComplaintDetails = Raise_a_Complaint[ID == input.Complaint_ID];
											getunitDetails = Add_Unit_Details[ID == getComplaintDetails.Unit_Name];
											getPropertyDetails = Add_Property[ID == getunitDetails.Property_Name];
											getServices = Add_Services[ID == getComplaintDetails.Maintenance_Service];
											clear Assign_to;
											getuserList = Add_Staff[Working_Location == getPropertyDetails.Location].ID.getAll();
											input.Assign_to:ui.add(getuserList);
											input.Details = ("<div style='width:700px;border:1px solid #e5e5e5;box-sizing:border-box;'><div style='height:50px;border-bottom:1px solid #e5e5e5;'><div style='font-size:18px;padding:12px;'> " + getComplaintDetails.Complaint_about + " </div></div><div style='height:450px;background:#fff;box-sizing:content-box;'><div style='width:70%;float:left;height:inherit;'><div style='border-right:1.0px solid #efdfdf;height:93%;margin:4%;margin-bottom:0;overflow:auto;'><div style='font-size:16px;font-weight:800;'> Unit Details</div><div style='font-size:14px;color:#666666;padding: 10px 0px;'>" + getunitDetails.Unit_Name + "<br>" + getPropertyDetails.Address) + "</div> <div style='font-size:16px;font-weight:800;'> Brief Details </div><div style='font-size:14px;color:#666666;padding: 10px 0px;'>" + getComplaintDetails.Complaint_Details + "</div></div></div><div style='margin-top:4%;width:30%;float:right;'><div style='font-size:16px;font-weight:800;'> Complaint ID : <span style='color:red;padding:5% 0;'>#" + getComplaintDetails.Complaint_ID + "</span></div><div style='font-size:16px;font-weight:800;padding:5% 0;'> Service Maintenance <div style='font-size:14px;color:#666666;font-weight:100;word-wrap: break-word;'> " + getServices.Service + " </div> </div><div style='font-size:16px;font-weight:800;padding:5% 0;'> Requested by <div style='font-size:14px;color:#666666;font-weight:100;    text-overflow: ellipsis;    width: 100%;    overflow: hidden;'> " + getComplaintDetails.Complaint_Raised_By + " </div> </div></div></div></div></div></div><div style='clear:both;'></div>";
										}
										else
										{
											input.Details = "";
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_11 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Property
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											getCount = Add_Property[ID != 0];
										if(getCount.count() == 1)
										{
											openUrl("#Form:Add_Policy?Property_Name=" + input.ID,"same window");
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin7 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Add_Property
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											delete from Add_Unit_Details[Property_Name == input.ID];
										delete from Add_Owner[Unit_Name == input.ID];
										delete from Add_Policy[Property_Name == input.ID];
						)
					}
				}

			}
			Run_Scripts_While_Adding_12 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Unit_Details
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Complaint_IDs;
										hide Location;
										hide Tenant_Name;
										hide Old_Tenants;
										if(input.Property_Name != null)
										{
											disable Property_Name;
											getPropertyDetails = Add_Property[ID == input.Property_Name];
											input.Location = getPropertyDetails.Location;
											input.Manager_Email = getPropertyDetails.Manager;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_13 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Unit_Details
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											getCount = Add_Unit_Details[ID != 0];
										if(getCount.count() == 1)
										{
											openUrl("#Form:Add_Staff","same window");
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing7 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Unit_Details
				record event = on edit

				field rules
				{
					actions 
					{
						hide Old_Tenants;
						disable Property_Name;
					}
				}

			}
			Run_Scripts_While_Deletin8 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Add_Unit_Details
				record event = on delete

				on success
				{
					actions 
					{
						custom deluge script
						(
											delete from Add_Owner[Unit_Name is null];
						)
					}
				}

			}
			Run_Scripts_On_Always9 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Unit_Details
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Tenant_Name != null && input.Status == "Renovation")
										{
											alert "Sorry! Renovation is not allowed when Tenants are there";
											cancel submit;
										}
										if(input.Tenant_Name != null && input.Status == "Vacant")
										{
											alert "Sorry! you can't mark the unit status as 'Vacant', when tenants are present in the unit";
											cancel submit;
										}
										if(input.Tenant_Name != null && input.Status != "Occupied")
										{
											alert "Please mark the status as 'Occupied'";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always10 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Unit_Details
				record event = on add or edit

				on user input of Property_Name
				{
					actions 
					{
						custom deluge script
						(
											getPropDetails = Add_Property[ID == input.Property_Name];
										if(getPropDetails.Policies == null)
										{
											openUrl("#Form:Add_Policy?Property_Name=" + input.Property_Name,"popup window");
										}
										if(getPropDetails.Manager != null)
										{
											input.Manager_Email = getPropDetails.Manager;
											input.Location = getPropDetails.Location;
										}
										else
										{
											hide Manager_Email;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_14 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Tenant_Details
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											// hide Next_Due_Date;
										hide Status;
										hide Number_of_Occupants;
										hide Months;
										hide Years;
										disable Occupants_Details.Age;
										hide Lease_Ending_Date;
										if(input.Unit_Name != null)
										{
											disable Owner_Name;
											disable Property_Name;
											disable Unit_Name;
											/* 	getUnitDetails = Add_Unit_Details[ID == input.Unit_Name];
																					input.Property_Name = getUnitDetails.Property_Name;
																					input.Owner_Name = getUnitDetails.Owner_Email; */
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_15 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Tenant_Details
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(input.Lease_Cycle == "Monthly")
										{
											nextcylce = input.Starting_Date.addMonth(input.Months.toLong());
										}
										else if(input.Lease_Cycle == "Yearly")
										{
											nextcylce = input.Starting_Date.addYear(input.Years);
										}
										insert into Rental_Payment
										[
											Owner_Name=input.Owner_Name
											Starting_Date=input.Starting_Date
											Unit_Name=input.Unit_Name
											Tenant_Name=input.ID
											Property_Name=input.Property_Name
											Added_User=zoho.loginuser
											Next_Due_Date=nextcylce
											Rent_Amount=input.Net_Payable
											Overdue_Amount=0
											Amount_Paid=input.Net_Payable
											Amount_Paid=0
											Status="Not Paid"
										]
										if(input.Email != zoho.adminuserid)
										{
											thisapp.appSharing.toTenant(input.Email);
											thisapp.Notification.Invitation(input.Email);
										}
										// when tenant is moved out ... his payments are marked as archived, and unshared to him in tenantCheckOut function;
										openUrl("#Script:dialog.close","same window");
						)
					}
				}

			}
			Run_Scripts_While_Editing8 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Tenant_Details
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											//updating contact list
										getMainContact = Add_Contact[Email == old.Email || Contact_Number == old.Contact_Number];
										if(getMainContact.count() == 0)
										{
											if(input.Add_to_Contact_list)
											{
												insert into Add_Contact
												[
													Occupation=input.Occupation
													Name=input.Name
													Added_User=zoho.loginuser
													Email=input.Email
													Contact_Number=input.Contact_Number
												]
											}
										}
										else
										{
											if(input.Add_to_Contact_list)
											{
												getMainContact.Contact_Number=input.Contact_Number;
												getMainContact.Email=input.Email;
											}
											else
											{
												delete from Add_Contact[Email == input.Email || Contact_Number == input.Contact_Number];
											}
										}
										// sharing app with new email id and removing permissions for old email
										if(input.Email != old.Email)
										{
											thisapp.appSharing.toTenant(input.Email);
											thisapp.Notification.Invitation(input.Email);
											thisapp.appUnsharing.toTenant(old.Email);
										}
										// updating  contact list from subform
										for each  rec in Occupants_Details
										{
											getContactList = Add_Contact[Email == rec.Email || Contact_Number == rec.Contact_Number];
											if(getContactList.count() == 0)
											{
												if(rec.Add_to_Contact_list)
												{
													if(rec.Email == null && rec.Contact_Number == "")
													{
														alert "Please Enter Atleast one Contact Information, Either Email or Contact Number";
														cancel submit;
													}
													else
													{
														insert into Add_Contact
														[
															Occupation=rec.Occupation
															Name=rec.Name
															Added_User=zoho.loginuser
															Email=rec.Email
															Contact_Number=rec.Contact_Number
														]
													}
												}
											}
											else
											{
												if(rec.Add_to_Contact_list)
												{
													getContactList.Contact_Number=rec.Contact_Number;
													getContactList.Email=rec.Email;
												}
												else
												{
													delete from Add_Contact[Email == rec.Email || Contact_Number == rec.Contact_Number];
												}
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin9 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Add_Tenant_Details
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											getRecCount = Add_Tenant_Details[Email == input.Email && Status == "Move in"];
										if(input.Email != zoho.adminuserid && getRecCount.count() <= 1)
										{
											thisapp.appUnsharing.toTenant(input.Email);
										}
										thisapp.Util.deleteContact(input.ID);
						)
					}
				}

			}
			Run_Scripts_On_Always11 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Tenant_Details
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Age < 18)
										{
											alert "Applications are accepted from anyone who is 18 years or older";
											cancel submit;
										}
										cnt = 0;
										for each  rec in Occupants_Details
										{
											cnt = cnt + 1;
											if(rec.Add_to_Contact_list)
											{
												if(rec.Email == null && rec.Contact_Number == null)
												{
													alert "Please Enter Atleast one Contact Information, Either Email or Contact Number";
													cancel submit;
												}
												else
												{
													insert into Add_Contact
													[
														Occupation=rec.Occupation
														Name=rec.Name
														Added_User=zoho.loginuser
														Email=rec.Email
														Contact_Number=rec.Contact_Number
													]
												}
											}
										}
										input.Number_of_Occupants = cnt;
										getUnitDetails = Add_Unit_Details[ID == input.Unit_Name];
										getUnitDetails.Status="Occupied";
										if(input.Add_to_Contact_list)
										{
											insert into Add_Contact
											[
												Occupation=input.Occupation
												Name=input.Name
												Added_User=zoho.loginuser
												Email=input.Email
												Contact_Number=input.Contact_Number
											]
										}
						)
					}
				}

			}
			Run_Scripts_On_Always12 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Tenant_Details
				record event = on add or edit

				on user input of Date_of_birth
				{
					actions 
					{
						custom deluge script
						(
											if(input.Date_of_birth != null)
										{
											if(input.Date_of_birth <= zoho.currentdate)
											{
												input.Age = ((((zoho.currentdate - input.Date_of_birth)) / 86400000) / 365).toLong();
												disable Age;
											}
											else
											{
												alert " Please Enter Proper Date";
												input.Date_of_birth = null;
											}
										}
										else
										{
											input.Age = null;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always13 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Tenant_Details
				record event = on add or edit

				on user input of Occupants_Details.Date_of_birth
				{
					actions 
					{
						custom deluge script
						(
											if(row.Date_of_birth != null)
										{
											row.Age=((((zoho.currentdate - row.Date_of_birth)) / 86400000) / 365).toLong();
										}
										else
										{
											row.Age=null;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always14 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Tenant_Details
				record event = on add or edit

				on user input of Lease_Cycle
				{
					actions 
					{
						custom deluge script
						(
											hide Months;
										hide Years;
										if(input.Lease_Cycle == "Monthly")
										{
											show Months;
											input.Years = null;
											input.Starting_Date = null;
										}
										else if(input.Lease_Cycle = "Yearly")
										{
											show Years;
											Months.deselect(input.Months);
											input.Starting_Date = null;
										}
						)
					}
				}

			}
			Rental_Invoice_Notificati1 as "Rental Invoice Notification"
			{
				type =  form
				form = Rental_Payment
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(input.Status == "Paid")
										{
											getTenantMail = Add_Tenant_Details[ID == input.Tenant_Name];
											sendmail
											[
												from :zoho.adminuserid
												to :getTenantMail.Email
												subject :"Your Rental Invoice For Month of " + input.Starting_Date.getMonth()
												message :("Dear " + getTenantMail.Name) + ", <div><br></div><div> We received you rental amount of  " + input.Amount_Paid + " for the month of" + input.Starting_Date.getMonth() + ".</div><div> thanks and regards</div><div>" + zoho.adminuser + "</div>"
												Attachments :template:Invoice1 as PDF
											]
										}
						)
					}
				}

			}
			Report_Redirection1 as "Report Redirection"
			{
				type =  form
				form = Rental_Payment
				record event = on edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											openUrl("#Report:Rental_Payment_Details","same window");
						)
					}
				}

			}
			Run_Scripts_On_Always15 as "Run Scripts - On Always"
			{
				type =  form
				form = Rental_Payment
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide open,Archive;
						disable Next_Due;
					}
					actions  (open == "custom_action")
					{
						disable Property_Name,Unit_Name,Owner_Name,Tenant_Name,Starting_Date,Next_Due_Date,Rent_Amount,Overdue_Amount,Amount_to_be_Paid;
					}
				}

			}
			Run_Scripts_On_Always16 as "Run Scripts - On Always"
			{
				type =  form
				form = Rental_Payment
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.open == "custom_action")
										{
											if(input.Rent_Amount == null)
											{
												alert "Please Enter Rent Amount";
												cancel submit;
											}
											if(input.Amount_Paid == null)
											{
												alert "Please Enter the Amount Paid by the Tenant";
												cancel submit;
											}
											if(input.Mode_of_Payment == "")
											{
												alert "Please Enter the Mode of Payment";
												cancel submit;
											}
											input.open = "";
										}
										if(input.Status == "Paid" && input.Amount_Paid == null || input.Amount_Paid == 0)
										{
											alert "Please Enter the Amount Paid by the tenant";
											cancel submit;
										}
										if(input.Amount_Paid > 0)
										{
											input.Status = "Paid";
										}
						)
					}
				}

			}
			Run_Scripts_On_Always17 as "Run Scripts - On Always"
			{
				type =  form
				form = Rental_Payment
				record event = on add or edit

				on user input of Rent_Amount
				{
					actions 
					{
						custom deluge script
						(
											if(input.Rent_Amount != null && input.Overdue_Amount != null)
										{
											input.Amount_to_be_Paid = input.Rent_Amount + input.Overdue_Amount;
											disable Amount_to_be_Paid;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always18 as "Run Scripts - On Always"
			{
				type =  form
				form = Rental_Payment
				record event = on add or edit

				on user input of Amount_Paid
				{
					actions 
					{
						custom deluge script
						(
											input.Next_Due = input.Amount_to_be_Paid - input.Amount_Paid;
						)
					}
				}

			}
			Run_Scripts_On_Always19 as "Run Scripts - On Always"
			{
				type =  form
				form = Rental_Payment
				record event = on add or edit

				on user input of Tenant_Name
				{
					actions 
					{
						custom deluge script
						(
											getTenantDetails = Add_Tenant_Details[ID == input.Tenant_Name];
										input.Rent_Amount = getTenantDetails.Net_Payable;
						)
					}
				}

			}
			Run_Scripts_On_Always20 as "Run Scripts - On Always"
			{
				type =  form
				form = Rental_Payment
				record event = on add or edit

				on user input of Overdue_Amount
				{
					actions 
					{
						custom deluge script
						(
											if(input.Rent_Amount != null && input.Overdue_Amount != null)
										{
											input.Amount_to_be_Paid = input.Rent_Amount + input.Overdue_Amount;
											disable Amount_to_be_Paid;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_16 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Raise_a_Complaint
				record event = on add

				field rules
				{
					actions 
					{
						hide Complaint_Status,Assigned_to,Owner_Email,Manager_Email,Tenant_Email,Location,Property_Name,Complaint_ID;
						disable Complaint_Raised_By,Complaint_Status;
					}
				}

			}
			Run_Scripts_While_Adding_17 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Raise_a_Complaint
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(input.Unit_Name != null)
										{
											disable Unit_Name;
											getUnitDetails = Add_Unit_Details[ID == input.Unit_Name];
											input.Manager_Email = getUnitDetails.Manager_Email;
											input.Owner_Email = getUnitDetails.Owner_Email;
											input.Tenant_Email = getUnitDetails.Tenant_Name;
											input.Property_Name = getUnitDetails.Property_Name;
											input.Location = getUnitDetails.Location;
										}
										input.Date_of_Incident = zoho.currentdate;
										input.Complaint_Raised_By = zoho.loginuserid;
						)
					}
				}

			}
			Run_Scripts_While_Adding_18 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Raise_a_Complaint
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											getComplaintCount = Raise_a_Complaint[Property_Name == input.Property_Name && Location == input.Location];
										getPropName = Add_Property[ID == input.Property_Name];
										propName = getPropName.Property_Name.replaceAll(" ","");
										cntr = getComplaintCount.count() + 1;
										cntrStr = leftpad(cntr.toString(),4).replaceAll(" ","0");
										input.Complaint_ID = propName + " - " + cntrStr;
						)
					}
				}

			}
			Run_Scripts_While_Adding_19 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Raise_a_Complaint
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:dialog.close","same window");
						)
					}
				}

			}
			Run_Scripts_While_Editing9 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Raise_a_Complaint
				record event = on edit

				field rules
				{
					actions 
					{
						disable Complaint_Raised_By;
						hide Assigned_to,Complaint_Status;
					}
				}

			}
			Run_Scripts_On_Always21 as "Run Scripts - On Always"
			{
				type =  form
				form = Raise_a_Complaint
				record event = on add or edit

				on user input of Unit_Name
				{
					actions 
					{
						custom deluge script
						(
											hide Assigned_to;
										hide Owner_Email;
										hide Manager_Email;
										hide Tenant_Email;
										hide Location;
										hide Property_Name;
										if(input.Unit_Name != null)
										{
											disable Unit_Name;
											getUnitDetails = Add_Unit_Details[ID == input.Unit_Name];
											input.Manager_Email = getUnitDetails.Manager_Email;
											input.Owner_Email = getUnitDetails.Owner_Email;
											input.Tenant_Email = getUnitDetails.Tenant_Name;
											input.Property_Name = getUnitDetails.Property_Name;
											input.Location = getUnitDetails.Location;
										}
										input.Date_of_Incident = zoho.currentdate;
										input.Complaint_Raised_By = zoho.loginuserid;
										disable Complaint_Raised_By;
										disable Complaint_Status;
						)
					}
				}

			}
			Run_Scripts_While_Adding_20 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Staff
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											getUsers = Add_Staff[ID != 0] sort by Added_Time desc;
										if(getUsers.count() == 0)
										{
											input.User_ID = "0001";
										}
										else
										{
											UserCount = getUsers.User_ID.toLong() + 1;
											cntstr = leftpad(UserCount.toString(),4).replaceAll(" ","0");
											input.User_ID = cntstr;
										}
										if(input.Share_Visitor_Section && input.User_Email == null || input.User_Email == "")
										{
											alert "Please Enter User Email to share this Application";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_21 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Staff
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(input.Share_Visitor_Section && input.User_Email != zoho.adminuserid)
										{
											thisapp.appSharing.toSecurity(input.User_Email);
											thisapp.Notification.Invitation(input.User_Email);
										}
										serviceList = "";
										for each  id in input.Services
										{
											getOccuppation = Add_Services[ID == id];
											serviceList = serviceList + getOccuppation.Service + ",";
										}
										insert into Add_Contact
										[
											Occupation=serviceList
											Name=input.Name
											Added_User=zoho.loginuser
											Contact_Number=input.Contact_Number
											Email=input.User_Email
											Maintenance=true
										]
						)
					}
				}

			}
			Run_Scripts_While_Editing10 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Staff
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Share_Visitor_Section && input.User_Email != old.User_Email)
										{
											thisapp.appSharing.toSecurity(input.User_Email);
											thisapp.Notification.Invitation(input.User_Email);
											thisapp.appUnsharing.toSecurity(old.User_Email);
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin10 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Add_Staff
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Share_Visitor_Section)
										{
											thisapp.appUnsharing.toSecurity(input.User_Email);
										}
						)
					}
				}

			}
			Hide_Maintenance_Archive_1 as "Hide Maintenance Archive Fields"
			{
				type =  form
				form = Add_Contact
				record event = on add

				field rules
				{
					actions 
					{
						hide Maintenance,Archive;
					}
				}

			}
			Run_Scripts_While_Adding_22 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Visitors
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Check_in = zoho.currenttime;
										disable Check_in;
										hide Check_out;
						)
					}
				}

			}
			Run_Scripts_While_Adding_23 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Policy
				record event = on add

				field rules
				{
					actions  (Property_Name is not null)
					{
						disable Property_Name;
					}
				}

			}
			Run_Scripts_While_Adding_24 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Policy
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Policy == null || input.Policy == "" && input.Policy_Document == null || input.Policy_Document == "")
										{
											alert "Please add either Policy Terms or Policy Document";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_25 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Policy
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											openUrl("#Form:Add_Unit_Details?Property_Name=" + input.Property_Name,"same window");
						)
					}
				}

			}
			Run_Scripts_While_Adding_26 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Owner
				record event = on add

				field rules
				{
					actions 
					{
						hide Unit_Name;
					}
				}

			}
			Run_Scripts_While_Adding_27 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Owner
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(input.Email != zoho.adminuserid)
										{
											thisapp.appSharing.toOwner(input.Email);
											thisapp.Notification.Invitation(input.Email);
										}
						)
					}
				}

			}
			Run_Scripts_While_Editing11 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Owner
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Email != old.Email)
										{
											thisapp.appSharing.toOwner(input.Email);
											thisapp.Notification.Invitation(input.Email);
											thisapp.appUnsharing.toOwner(old.Email);
										}
						)
					}
				}

			}
			Run_Scripts_While_Deletin11 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Add_Owner
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Email != zoho.adminuserid)
										{
											thisapp.appUnsharing.toOwner(input.Email);
										}
						)
					}
				}

			}
			Run_Scripts_On_Always22 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Staff
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide User_ID,Assigned_Tasks;
					}
					actions  (User_ID is not null)
					{
						disable User_ID;
						show User_ID;
					}
				}

			}
			Run_Scripts_On_Always23 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Property
				record event = on add or edit

				field rules
				{
					actions  (Policies is not null)
					{
						show Policies;
					}
					actions 
					{
						hide Blocks,Policies;
					}
				}

			}
		}

		schedule
		{
			Complaint_Overdue_schedul as "Complaint_Overdue_schedul"
			{
				type =  schedule
				form = Raise_a_Complaint
				start = after 1 days from Date_of_Incident at "16:00:00"
				time zone = "Asia/Kolkata"
				on start
				{
					actions 
					{
					on load
					(
						input.Complaint_Status = "Overdue";
					)
					}
				}
			}
			Rental_1_week_remainder as "Rental_1_week_remainder"
			{
				type =  schedule
				form = Rental_Payment
				start = before 1 weeks from Next_Due_Date at "16:00:00"
				time zone = "Asia/Kolkata"
				on start
				{
					actions 
					{
					on load
					(
						getTenantDetails = Add_Tenant_Details[ID == input.Tenant_Name];
										thismonth = input.Next_Due_Date.getMonth();
										months = {"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"};
										monthName = months.get(thismonth.toString());
										nextWeek = zoho.currentdate.addDay(6);
										sendmail
										[
											from :zoho.adminuserid
											to :getTenantDetails.Email
											subject :"Notification - Rental Payment of Month " + monthName
											message :("Dear " + getTenantDetails.Name) + ",<div> This is to Notify you that the Rental Payment Due for the Month of " + monthName + " On  " + nextWeek + "</div><div> Kindly pay your rent on or before Due date.</div><div>Thanks,</div>Admin"
										]
					)
					}
				}
			}
			Rental_Overdue_schedule as "Rental_Overdue_schedule"
			{
				type =  schedule
				form = Rental_Payment
				start = after 1 days from Next_Due_Date at "15:00:00"
				time zone = "Asia/Kolkata"
				on start
				{
					actions 
					{
					on load
					(
						input.Status = "Overdue";
										getTenantDetails = Add_Tenant_Details[ID == input.Tenant_Name];
										duemonth = input.Starting_Date.getMonth() + " - " + input.Starting_Date.getYear();
										sendmail
										[
											from :zoho.adminuserid
											to :getTenantDetails.Email
											subject :"Notification Overdue - Rental Payment for the month of " + duemonth
											message :("<div>Dear " + getTenantDetails.Name) + ",</div><div> The Due Date for the Month of " + duemonth + " is over.</div><div> The Rental Amount to be paid is " + input.Amount_to_be_Paid + "  ( " + input.Rent_Amount + " + " + input.Overdue_Amount + " ). </div><div> This email is to notify you that, kindly pay the rental bill as soon as possible. </div> <div> Regards,</div><div>Admin</div>"
										]
					)
					}
				}
			}
			Rental_Payment_schedule as "Rental_Payment_schedule"
			{
				type =  schedule
				form = Rental_Payment
				start = before 1 days from Next_Due_Date at "15:30:00"
				time zone = "Asia/Kolkata"
				on start
				{
					actions 
					{
					on load
					(
						getTenantRec = Add_Tenant_Details[ID == input.Tenant_Name];
										if(getTenantRec.Status == "Move in")
										{
											if(getTenantRec.Lease_Cycle == "Monthly")
											{
												nextDuedate = input.Next_Due_Date.addMonth(getTenantRec.Months.toLong());
											}
											else
											{
												nextDuedate = input.Next_Due_Date.addYear(getTenantRec.Years);
											}
											nextAmount = input.Rent_Amount + input.Next_Due;
											insert into Rental_Payment
											[
												Added_User=zoho.loginuser
												Amount_to_be_Paid=nextAmount
												Next_Due_Date=nextDuedate
												Overdue_Amount=input.Next_Due
												Owner_Name=input.Owner_Name
												Property_Name=input.Property_Name
												Rent_Amount=input.Rent_Amount
												Starting_Date=input.Next_Due_Date
												Tenant_Name=input.Tenant_Name
												Unit_Name=input.Unit_Name
											]
										}
					)
					}
				}
			}
		}



		functions
		{
			Add_Tenant as "Add Tenant"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.addTenant(ID);
					}
				}
			}
			Renovate as "Renovate"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.custom_actions.unitRenovate(Add_Unit_Details);
					}
				}
			}
			Complaint as "Complaint"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.Raise_A_Complaint(ID);
					}
				}
			}
			Add_Tenant1 as "Add Tenant"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.addTenant(ID);
					}
				}
			}
			Renovate1 as "Renovate"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.unitRenovate(Add_Unit_Details);
					}
				}
			}
			Complaint1 as "Complaint"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.Raise_A_Complaint(ID);
					}
				}
			}
			Check_Out as "Check Out"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.tenantCheckOut(Tenant_Name);
					}
				}
			}
			Complaint2 as "Complaint"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.Raise_A_Complaint(ID);
					}
				}
			}
			Vacant as "Vacant"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.markasVacant(Add_Unit_Details);
					}
				}
			}
			Check_Out1 as "Check Out"
			{
				type =  functions
				form = Add_Tenant_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.tenantCheckOut(ID);
					}
				}
			}
			Paid as "Paid"
			{
				type =  functions
				form = Rental_Payment
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.payAmount(ID);
					}
				}
			}
			Assign as "Assign"
			{
				type =  functions
				form = Raise_a_Complaint
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.Assigned_to(ID);
					}
				}
			}
			Complete as "Complete"
			{
				type =  functions
				form = Raise_a_Complaint
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.custom_actions.taskComplete(Raise_a_Complaint);
					}
				}
			}
			Assign1 as "Assign"
			{
				type =  functions
				form = Raise_a_Complaint
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.Assigned_to(ID);
					}
				}
			}
			Complete1 as "Complete"
			{
				type =  functions
				form = Raise_a_Complaint
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.custom_actions.taskComplete(Raise_a_Complaint);
					}
				}
			}
			Assign2 as "Assign"
			{
				type =  functions
				form = Raise_a_Complaint
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.Assigned_to(ID);
					}
				}
			}
			Assign3 as "Assign"
			{
				type =  functions
				form = Raise_a_Complaint
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.Assigned_to(ID);
					}
				}
			}
			Assign4 as "Assign"
			{
				type =  functions
				form = Raise_a_Complaint
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.Assigned_to(ID);
					}
				}
			}
			Complaint3 as "Complaint"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.Raise_A_Complaint(ID);
					}
				}
			}
			View_Invoice as "View Invoice"
			{
				type =  functions
				form = Rental_Payment
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.viewInvoice(ID);
					}
				}
			}
			Complaint4 as "Complaint"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.Raise_A_Complaint(ID);
					}
				}
			}
			Add_Tenant2 as "Add Tenant"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.addTenant(ID);
					}
				}
			}
			Check_Out2 as "Check Out"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.tenantCheckOut(Tenant_Name);
					}
				}
			}
			Complaint5 as "Complaint"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.Raise_A_Complaint(ID);
					}
				}
			}
			Add_Tenant3 as "Add Tenant"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.addTenant(ID);
					}
				}
			}
			Check_Out3 as "Check Out"
			{
				type =  functions
				form = Add_Unit_Details
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.custom_actions.tenantCheckOut(Tenant_Name);
					}
				}
			}
			Check_Out4 as "Check Out"
			{
				type =  functions
				form = Add_Visitors
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.custom_actions.checkOutTime(Add_Visitors);
					}
				}
			}
			Check_Out5 as "Check Out"
			{
				type =  functions
				form = Add_Visitors
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.custom_actions.checkOutTime(Add_Visitors);
					}
				}
			}
		}
	}
	share_settings
	{
			"Owner"
			{
				name = "Owner"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have owner privilege.\n"
				ModulePermissions
				{
					Add_Floor
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Floor{visibility:true,readonly:false}
							Block{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Unit_Details
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Owner_View={"View"}
							Vacant_Units={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Floor{visibility:true,readonly:false}
							Owner_Email{visibility:true,readonly:false}
							Old_Tenants{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Complaint_IDs{visibility:true,readonly:false}
							Area{visibility:true,readonly:false}
							Bedrooms{visibility:true,readonly:false}
							Manager_Email{visibility:true,readonly:false}
							Block{visibility:true,readonly:false}
							Bathrooms{visibility:true,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Tenant_Name{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
							Location{visibility:true,readonly:false}
							Amenities{visibility:true,readonly:false}
						}
					}
					Rental_Payment
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Rental_Payment_Details={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Archive{visibility:true,readonly:false}
							Rent_Amount{visibility:true,readonly:false}
							Next_Due_Date{visibility:true,readonly:false}
							Amount_to_be_Paid{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Next_Due{visibility:true,readonly:false}
							Owner_Name{visibility:true,readonly:false}
							Starting_Date{visibility:true,readonly:false}
							Overdue_Amount{visibility:true,readonly:false}
							Mode_of_Payment{visibility:true,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Tenant_Name{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
							open{visibility:true,readonly:false}
							Amount_Paid{visibility:true,readonly:false}
						}
					}
					Add_Location
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Add_Location_Report={"View"}
						}
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Location{visibility:true,readonly:false}
						}
					}
					Assign_task
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Details{visibility:true,readonly:false}
							Assign_to{visibility:true,readonly:false}
							Complaint_ID{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Owner
					{
						FieldPermissions
						{
							Email{visibility:true,readonly:false}
							Owner_Signature{visibility:true,readonly:false}
							Current_Address{visibility:false,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Owner_Name{visibility:false,readonly:false}
						}
					}
					Add_Policy
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							All_Policies={"View","Edit","Delete"}
						}
						FieldPermissions
						{
							Policy{visibility:true,readonly:false}
							Policy_Document{visibility:true,readonly:false}
							Policy_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Services
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Add_Services_Report={"View","Edit"}
						}
						FieldPermissions
						{
							Service{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Staff
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							All_Staffs={"View","Edit"}
						}
						FieldPermissions
						{
							Services{visibility:true,readonly:false}
							User_Email{visibility:true,readonly:false}
							Share_Visitor_Section{visibility:true,readonly:false}
							Current_Address{visibility:false,readonly:false}
							Assigned_Tasks{visibility:true,readonly:false}
							Country{visibility:true,readonly:false}
							Working_Location{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							User_ID{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Add_Amenities
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Amenities{visibility:true,readonly:false}
						}
					}
					Add_Visitors
					{
						FieldPermissions
						{
							Person_to_Meet{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Check_in{visibility:true,readonly:false}
							Parking{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Check_out{visibility:true,readonly:false}
							No_of_Visitors{visibility:true,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Add_Tenant_Details
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Tenants_Details={"View","Edit"}
						}
						FieldPermissions
						{
							Occupants_Details{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Date_of_birth{visibility:true,readonly:false}
							Additional_Charges{visibility:true,readonly:false}
							Gender{visibility:true,readonly:false}
							Name{visibility:false,readonly:false}
							Lease_Cycle{visibility:true,readonly:false}
							Acknowledgement{visibility:true,readonly:false}
							Section1{visibility:false,readonly:false}
							plain{visibility:true,readonly:false}
							plain3{visibility:true,readonly:false}
							Section2{visibility:false,readonly:false}
							plain1{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Age{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Years{visibility:true,readonly:false}
							Tenant_Signature{visibility:true,readonly:false}
							Months{visibility:true,readonly:false}
							Add_to_Contact_list{visibility:true,readonly:false}
							Net_Payable{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Owner_Name{visibility:true,readonly:false}
							Occupation{visibility:true,readonly:false}
							Maintainance{visibility:true,readonly:false}
							Number_of_Occupants{visibility:true,readonly:false}
							Starting_Date{visibility:true,readonly:false}
							Lease_Ending_Date{visibility:true,readonly:false}
							Taxes{visibility:true,readonly:false}
							Insurance{visibility:true,readonly:false}
							Base_Rent{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Block
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Block{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Floors{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Property_type
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Property_Type{visibility:true,readonly:false}
						}
					}
					Raise_a_Complaint
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Complaints_Owner_View={"View"}
						}
						FieldPermissions
						{
							Complaint_ID{visibility:true,readonly:false}
							Add_Image{visibility:true,readonly:false}
							Owner_Email{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Complaint_Details{visibility:true,readonly:false}
							Assigned_to{visibility:true,readonly:false}
							Date_of_Incident{visibility:true,readonly:false}
							Complaint_about{visibility:true,readonly:false}
							Maintenance_Service{visibility:true,readonly:false}
							Tenant_Email{visibility:true,readonly:false}
							Manager_Email{visibility:true,readonly:false}
							Complaint_Raised_By{visibility:true,readonly:false}
							Complaint_Status{visibility:true,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
							Location{visibility:true,readonly:false}
						}
					}
					Add_Property
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							All_Property_Details={"View","Edit"}
						}
						FieldPermissions
						{
							Policies{visibility:true,readonly:false}
							Blocks{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							No_of_Blocks{visibility:true,readonly:false}
							Size{visibility:true,readonly:false}
							Property_type{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Property_Name{visibility:true,readonly:false}
							Location{visibility:true,readonly:false}
						}
					}
					Add_Managers
					{
						enabled= Create,Tab 
						ReportPermissions
						{
							Managers_Details={"View"}
						}
						FieldPermissions
						{
							Manager_Signature{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Managing_Units{visibility:true,readonly:false}
							Address{visibility:false,readonly:false}
							Manager_Name{visibility:false,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Contact
					{
						enabled= Viewall 
						ReportPermissions
						{
							All_Contacts={"View"}
						}
						FieldPermissions
						{
							Occupation{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Archive{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Maintenance{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
				}
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have all the permissions.\n"
			}
			"Tenant"
			{
				name = "Tenant"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have tenant privileges.\n"
				ModulePermissions
				{
					Add_Floor
					{
						FieldPermissions
						{
							Floor{visibility:true,readonly:false}
							Block{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Unit_Details
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							Tenants_View={"View"}
							Ready_to_Move_in_Units={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Floor{visibility:true,readonly:false}
							Owner_Email{visibility:true,readonly:false}
							Old_Tenants{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Complaint_IDs{visibility:true,readonly:false}
							Area{visibility:true,readonly:false}
							Bedrooms{visibility:true,readonly:false}
							Manager_Email{visibility:true,readonly:false}
							Block{visibility:true,readonly:false}
							Bathrooms{visibility:true,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Tenant_Name{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
							Location{visibility:true,readonly:false}
							Amenities{visibility:true,readonly:false}
						}
					}
					Rental_Payment
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							My_Payments={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Archive{visibility:true,readonly:false}
							Rent_Amount{visibility:true,readonly:false}
							Next_Due_Date{visibility:true,readonly:false}
							Amount_to_be_Paid{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Next_Due{visibility:true,readonly:false}
							Owner_Name{visibility:true,readonly:false}
							Starting_Date{visibility:true,readonly:false}
							Overdue_Amount{visibility:true,readonly:false}
							Mode_of_Payment{visibility:true,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Tenant_Name{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
							open{visibility:true,readonly:false}
							Amount_Paid{visibility:true,readonly:false}
						}
					}
					Add_Location
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Location{visibility:true,readonly:false}
						}
					}
					Assign_task
					{
						FieldPermissions
						{
							Details{visibility:true,readonly:false}
							Assign_to{visibility:true,readonly:false}
							Complaint_ID{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Owner
					{
						FieldPermissions
						{
							Email{visibility:true,readonly:false}
							Owner_Signature{visibility:true,readonly:false}
							Current_Address{visibility:false,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Owner_Name{visibility:false,readonly:false}
						}
					}
					Add_Policy
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							All_Policies={"View"}
						}
						FieldPermissions
						{
							Policy{visibility:true,readonly:false}
							Policy_Document{visibility:true,readonly:false}
							Policy_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Services
					{
						FieldPermissions
						{
							Service{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Staff
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							All_Staffs={"View"}
						}
						FieldPermissions
						{
							Services{visibility:true,readonly:false}
							User_Email{visibility:true,readonly:false}
							Share_Visitor_Section{visibility:true,readonly:false}
							Current_Address{visibility:false,readonly:false}
							Assigned_Tasks{visibility:true,readonly:false}
							Country{visibility:true,readonly:false}
							Working_Location{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							User_ID{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Add_Amenities
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Amenities{visibility:true,readonly:false}
						}
					}
					Add_Visitors
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							My_Visitors={"View"}
						}
						FieldPermissions
						{
							Person_to_Meet{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Check_in{visibility:true,readonly:false}
							Parking{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Check_out{visibility:true,readonly:false}
							No_of_Visitors{visibility:true,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Add_Tenant_Details
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							My_Details_tenant={"View","Edit"}
						}
						FieldPermissions
						{
							Occupants_Details{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Date_of_birth{visibility:true,readonly:false}
							Additional_Charges{visibility:true,readonly:false}
							Gender{visibility:true,readonly:false}
							Name{visibility:false,readonly:false}
							Lease_Cycle{visibility:true,readonly:false}
							Acknowledgement{visibility:true,readonly:false}
							Section1{visibility:false,readonly:false}
							plain{visibility:true,readonly:false}
							plain3{visibility:true,readonly:false}
							Section2{visibility:false,readonly:false}
							plain1{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Age{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Years{visibility:true,readonly:false}
							Tenant_Signature{visibility:true,readonly:false}
							Months{visibility:true,readonly:false}
							Add_to_Contact_list{visibility:true,readonly:false}
							Net_Payable{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Owner_Name{visibility:true,readonly:false}
							Occupation{visibility:true,readonly:false}
							Maintainance{visibility:true,readonly:false}
							Number_of_Occupants{visibility:true,readonly:false}
							Starting_Date{visibility:true,readonly:false}
							Lease_Ending_Date{visibility:true,readonly:false}
							Taxes{visibility:true,readonly:false}
							Insurance{visibility:true,readonly:false}
							Base_Rent{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Block
					{
						FieldPermissions
						{
							Block{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Floors{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Property_type
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Property_Type{visibility:true,readonly:false}
						}
					}
					Raise_a_Complaint
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Complaints_Tenant_View={"View"}
						}
						FieldPermissions
						{
							Complaint_ID{visibility:true,readonly:false}
							Add_Image{visibility:true,readonly:false}
							Owner_Email{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Complaint_Details{visibility:true,readonly:false}
							Assigned_to{visibility:true,readonly:false}
							Date_of_Incident{visibility:true,readonly:false}
							Complaint_about{visibility:true,readonly:false}
							Maintenance_Service{visibility:true,readonly:false}
							Tenant_Email{visibility:true,readonly:false}
							Manager_Email{visibility:true,readonly:false}
							Complaint_Raised_By{visibility:true,readonly:false}
							Complaint_Status{visibility:true,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
							Location{visibility:true,readonly:false}
						}
					}
					Add_Property
					{
						FieldPermissions
						{
							Policies{visibility:true,readonly:false}
							Blocks{visibility:true,readonly:false}
							Address{visibility:false,readonly:false}
							No_of_Blocks{visibility:true,readonly:false}
							Size{visibility:true,readonly:false}
							Property_type{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Property_Name{visibility:true,readonly:false}
							Location{visibility:true,readonly:false}
						}
					}
					Add_Managers
					{
						FieldPermissions
						{
							Manager_Signature{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Managing_Units{visibility:true,readonly:false}
							Address{visibility:false,readonly:false}
							Manager_Name{visibility:false,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Contact
					{
						enabled= Viewall 
						ReportPermissions
						{
							All_Contacts={"View"}
						}
						FieldPermissions
						{
							Occupation{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Archive{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Maintenance{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
				}
			}
			"Manager"
			{
				name = "Manager"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have manager permissions.\n"
				ModulePermissions
				{
					Add_Floor
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Floor{visibility:true,readonly:false}
							Block{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Unit_Details
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							Manager_View={"View","Edit"}
							Vacant_Units={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Floor{visibility:true,readonly:false}
							Owner_Email{visibility:true,readonly:false}
							Old_Tenants{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Complaint_IDs{visibility:true,readonly:false}
							Area{visibility:true,readonly:false}
							Bedrooms{visibility:true,readonly:false}
							Manager_Email{visibility:true,readonly:false}
							Block{visibility:true,readonly:false}
							Bathrooms{visibility:true,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Tenant_Name{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
							Location{visibility:true,readonly:false}
							Amenities{visibility:true,readonly:false}
						}
					}
					Rental_Payment
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Rental_Payment_Details={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Archive{visibility:true,readonly:false}
							Rent_Amount{visibility:true,readonly:false}
							Next_Due_Date{visibility:true,readonly:false}
							Amount_to_be_Paid{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Next_Due{visibility:true,readonly:false}
							Owner_Name{visibility:true,readonly:false}
							Starting_Date{visibility:true,readonly:false}
							Overdue_Amount{visibility:true,readonly:false}
							Mode_of_Payment{visibility:true,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Tenant_Name{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
							open{visibility:true,readonly:false}
							Amount_Paid{visibility:true,readonly:false}
						}
					}
					Add_Location
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Add_Location_Report={"View"}
						}
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Location{visibility:true,readonly:false}
						}
					}
					Assign_task
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Details{visibility:true,readonly:false}
							Assign_to{visibility:true,readonly:false}
							Complaint_ID{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Owner
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							Owner_Details={"View"}
						}
						FieldPermissions
						{
							Email{visibility:true,readonly:false}
							Owner_Signature{visibility:true,readonly:false}
							Current_Address{visibility:false,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Owner_Name{visibility:false,readonly:false}
						}
					}
					Add_Policy
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							All_Policies={"View","Edit"}
						}
						FieldPermissions
						{
							Policy{visibility:true,readonly:false}
							Policy_Document{visibility:true,readonly:false}
							Policy_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Services
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Add_Services_Report={"View","Edit"}
						}
						FieldPermissions
						{
							Service{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Staff
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							All_Staffs={"View","Edit"}
						}
						FieldPermissions
						{
							Services{visibility:true,readonly:false}
							User_Email{visibility:true,readonly:false}
							Share_Visitor_Section{visibility:true,readonly:false}
							Current_Address{visibility:false,readonly:false}
							Assigned_Tasks{visibility:true,readonly:false}
							Country{visibility:true,readonly:false}
							Working_Location{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							User_ID{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Add_Amenities
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Amenities{visibility:true,readonly:false}
						}
					}
					Add_Visitors
					{
						ReportPermissions
						{
							Visitors_Details={"View"}
						}
						FieldPermissions
						{
							Person_to_Meet{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Check_in{visibility:true,readonly:false}
							Parking{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Check_out{visibility:true,readonly:false}
							No_of_Visitors{visibility:true,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Add_Tenant_Details
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							Tenants_Details={"View"}
						}
						FieldPermissions
						{
							Occupants_Details{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Date_of_birth{visibility:true,readonly:false}
							Additional_Charges{visibility:true,readonly:false}
							Gender{visibility:true,readonly:false}
							Name{visibility:false,readonly:false}
							Lease_Cycle{visibility:true,readonly:false}
							Acknowledgement{visibility:true,readonly:false}
							Section1{visibility:false,readonly:false}
							plain{visibility:true,readonly:false}
							plain3{visibility:true,readonly:false}
							Section2{visibility:false,readonly:false}
							plain1{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Age{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Years{visibility:true,readonly:false}
							Tenant_Signature{visibility:true,readonly:false}
							Months{visibility:true,readonly:false}
							Add_to_Contact_list{visibility:true,readonly:false}
							Net_Payable{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Owner_Name{visibility:true,readonly:false}
							Occupation{visibility:true,readonly:false}
							Maintainance{visibility:true,readonly:false}
							Number_of_Occupants{visibility:true,readonly:false}
							Starting_Date{visibility:true,readonly:false}
							Lease_Ending_Date{visibility:true,readonly:false}
							Taxes{visibility:true,readonly:false}
							Insurance{visibility:true,readonly:false}
							Base_Rent{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Block
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Block{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Floors{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Property_type
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Property_Type{visibility:true,readonly:false}
						}
					}
					Raise_a_Complaint
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Complaints_Manager_View={"View"}
						}
						FieldPermissions
						{
							Complaint_ID{visibility:true,readonly:false}
							Add_Image{visibility:true,readonly:false}
							Owner_Email{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Complaint_Details{visibility:true,readonly:false}
							Assigned_to{visibility:true,readonly:false}
							Date_of_Incident{visibility:true,readonly:false}
							Complaint_about{visibility:true,readonly:false}
							Maintenance_Service{visibility:true,readonly:false}
							Tenant_Email{visibility:true,readonly:false}
							Manager_Email{visibility:true,readonly:false}
							Complaint_Raised_By{visibility:true,readonly:false}
							Complaint_Status{visibility:true,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
							Location{visibility:true,readonly:false}
						}
					}
					Add_Property
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							All_Property_Details={"View"}
						}
						FieldPermissions
						{
							Policies{visibility:true,readonly:false}
							Blocks{visibility:true,readonly:false}
							Address{visibility:false,readonly:false}
							No_of_Blocks{visibility:true,readonly:false}
							Size{visibility:true,readonly:false}
							Property_type{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Property_Name{visibility:true,readonly:false}
							Location{visibility:true,readonly:false}
						}
					}
					Add_Managers
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							My_Details_Manager={"View","Edit"}
						}
						FieldPermissions
						{
							Manager_Signature{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Managing_Units{visibility:true,readonly:false}
							Address{visibility:false,readonly:false}
							Manager_Name{visibility:false,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Contact
					{
						enabled= Viewall 
						ReportPermissions
						{
							All_Contacts={"View"}
						}
						FieldPermissions
						{
							Occupation{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Archive{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Maintenance{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Dashboard
					{
						enabled = tab
					}
				}
			}
			"Security"
			{
				name = "Security"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have only visitor section.\n"
				ModulePermissions
				{
					Add_Floor
					{
						FieldPermissions
						{
							Floor{visibility:true,readonly:false}
							Block{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Unit_Details
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							Vacant_Units={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Floor{visibility:true,readonly:false}
							Owner_Email{visibility:true,readonly:false}
							Old_Tenants{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Complaint_IDs{visibility:true,readonly:false}
							Area{visibility:true,readonly:false}
							Bedrooms{visibility:true,readonly:false}
							Manager_Email{visibility:true,readonly:false}
							Block{visibility:true,readonly:false}
							Bathrooms{visibility:true,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Tenant_Name{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
							Location{visibility:true,readonly:false}
							Amenities{visibility:true,readonly:false}
						}
					}
					Rental_Payment
					{
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Archive{visibility:true,readonly:false}
							Rent_Amount{visibility:true,readonly:false}
							Next_Due_Date{visibility:true,readonly:false}
							Amount_to_be_Paid{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Next_Due{visibility:true,readonly:false}
							Owner_Name{visibility:true,readonly:false}
							Starting_Date{visibility:true,readonly:false}
							Overdue_Amount{visibility:true,readonly:false}
							Mode_of_Payment{visibility:true,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Tenant_Name{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
							open{visibility:true,readonly:false}
							Amount_Paid{visibility:true,readonly:false}
						}
					}
					Add_Location
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Location{visibility:true,readonly:false}
						}
					}
					Assign_task
					{
						FieldPermissions
						{
							Details{visibility:true,readonly:false}
							Assign_to{visibility:true,readonly:false}
							Complaint_ID{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Owner
					{
						FieldPermissions
						{
							Email{visibility:true,readonly:false}
							Owner_Signature{visibility:true,readonly:false}
							Current_Address{visibility:false,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Owner_Name{visibility:false,readonly:false}
						}
					}
					Add_Policy
					{
						FieldPermissions
						{
							Policy{visibility:true,readonly:false}
							Policy_Document{visibility:true,readonly:false}
							Policy_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Services
					{
						FieldPermissions
						{
							Service{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Staff
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							All_Staffs={"View"}
						}
						FieldPermissions
						{
							Services{visibility:true,readonly:false}
							User_Email{visibility:true,readonly:false}
							Share_Visitor_Section{visibility:true,readonly:false}
							Current_Address{visibility:false,readonly:false}
							Assigned_Tasks{visibility:true,readonly:false}
							Country{visibility:true,readonly:false}
							Working_Location{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							User_ID{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Add_Amenities
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Amenities{visibility:true,readonly:false}
						}
					}
					Add_Visitors
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Visitors_Details={"View","Edit","Delete"}
						}
						FieldPermissions
						{
							Person_to_Meet{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Check_in{visibility:true,readonly:false}
							Parking{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Check_out{visibility:true,readonly:false}
							No_of_Visitors{visibility:true,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Add_Tenant_Details
					{
						enabled= Viewall 
						ReportPermissions
						{
							Tenants_Details={"View"}
						}
						FieldPermissions
						{
							Occupants_Details{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Date_of_birth{visibility:true,readonly:false}
							Additional_Charges{visibility:true,readonly:false}
							Gender{visibility:true,readonly:false}
							Name{visibility:false,readonly:false}
							Lease_Cycle{visibility:true,readonly:false}
							Acknowledgement{visibility:true,readonly:false}
							Section1{visibility:false,readonly:false}
							plain{visibility:true,readonly:false}
							plain3{visibility:true,readonly:false}
							Section2{visibility:false,readonly:false}
							plain1{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Age{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Years{visibility:true,readonly:false}
							Tenant_Signature{visibility:true,readonly:false}
							Months{visibility:true,readonly:false}
							Add_to_Contact_list{visibility:true,readonly:false}
							Net_Payable{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Owner_Name{visibility:true,readonly:false}
							Occupation{visibility:true,readonly:false}
							Maintainance{visibility:true,readonly:false}
							Number_of_Occupants{visibility:true,readonly:false}
							Starting_Date{visibility:true,readonly:false}
							Lease_Ending_Date{visibility:true,readonly:false}
							Taxes{visibility:true,readonly:false}
							Insurance{visibility:true,readonly:false}
							Base_Rent{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Block
					{
						FieldPermissions
						{
							Block{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Floors{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
						}
					}
					Add_Property_type
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Property_Type{visibility:true,readonly:false}
						}
					}
					Raise_a_Complaint
					{
						FieldPermissions
						{
							Complaint_ID{visibility:true,readonly:false}
							Add_Image{visibility:true,readonly:false}
							Owner_Email{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Complaint_Details{visibility:true,readonly:false}
							Assigned_to{visibility:true,readonly:false}
							Date_of_Incident{visibility:true,readonly:false}
							Complaint_about{visibility:true,readonly:false}
							Maintenance_Service{visibility:true,readonly:false}
							Tenant_Email{visibility:true,readonly:false}
							Manager_Email{visibility:true,readonly:false}
							Complaint_Raised_By{visibility:true,readonly:false}
							Complaint_Status{visibility:true,readonly:false}
							Unit_Name{visibility:true,readonly:false}
							Property_Name{visibility:true,readonly:false}
							Location{visibility:true,readonly:false}
						}
					}
					Add_Property
					{
						FieldPermissions
						{
							Policies{visibility:true,readonly:false}
							Blocks{visibility:true,readonly:false}
							Address{visibility:false,readonly:false}
							No_of_Blocks{visibility:true,readonly:false}
							Size{visibility:true,readonly:false}
							Property_type{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Property_Name{visibility:true,readonly:false}
							Location{visibility:true,readonly:false}
						}
					}
					Add_Managers
					{
						FieldPermissions
						{
							Manager_Signature{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Managing_Units{visibility:true,readonly:false}
							Address{visibility:false,readonly:false}
							Manager_Name{visibility:false,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Contact
					{
						enabled= Viewall 
						ReportPermissions
						{
							All_Contacts={"View"}
						}
						FieldPermissions
						{
							Occupation{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Archive{visibility:true,readonly:false}
							Contact_Number{visibility:false,readonly:false}
							Maintenance{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
				}
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users.\n\n"
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 3
		icons = true
		icons style = outline
		font = "lato"
		color options
    	{
        color = "1"
    	}
    	icon
    	{
        	type = "1"
        	name = "zc-ab-education-11"
        	background color = "turquoise"
        	foreground color = "#FFFFFF"
    	}
    	logo
    	{
        	preference = "none"
        	placement = "left"
    	}
	}


	phone
	{
		section  Hidden
		{
			form  Add_Property_type
			{
				layout = auto
				hide = true
			}
			form  Add_Amenities
			{
				layout = auto
				hide = true
			}
			form  Add_Block
			{
				layout = auto
				hide = true
			}
			form  Add_Floor
			{
				layout = auto
				hide = true
			}
			form  Add_Managers
			{
				layout = left
				hide = true
			}
			form  Add_Services
			{
				layout = auto
				hide = true
			}
			list Add_Services_Report
			{
				hide = true
			}
			form  Add_Location
			{
				layout = auto
				hide = true
			}
			list Add_Location_Report
			{
				hide = true
			}
			form  Assign_task
			{
				layout = left
				hide = true
			}
		}
		section  Dashboard
		{
			icon = "ui-1-dashboard-half"
			page Dashboard
			{
			}
		}
		section  Properties
		{
			icon = "business-building"
			form  Add_Property
			{
				layout = left
				icon = "ui-2-square-add-11"
			}
			list All_Property_Details
			{
				icon = "travel-temple-02"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				display type = list
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Property_Name as "Property Name"
								Address
								Property_type as "Property type"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Property_type as "Property type"
								Property_Name as "Property Name"
								Size as "Size (in Sq. ft)"
								No_of_Blocks as "No. of Blocks"
								Manager
								Location as "Location / Area"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Unit_Details
		{
			displayname= "Unit Details"
			icon = "ui-1-home-52"
			form  Add_Unit_Details
			{
				layout = left
				icon = "ui-2-square-add-08"
			}
			list All_Unit_Details
			{
				icon = "nature-dog-house"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = list
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Unit_Name as "Unit Name"
								Property_Name as "Property Name"
								Floor
								Block
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Add Tenant"
										"Renovate"
										"Complaint"
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										"Add Tenant"
										"Complaint"
										"Renovate"
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on left swipe
									(
										"Add Tenant"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
				"Add Tenant"
								Unit_Name as "Unit Name"
								Block
								Floor
								Area as "Area (in Sq. ft)"
								Bedrooms
								Bathrooms
								Amenities
								Property_Name as "Property Name"
								Owner_Email as "Owner Email"
								Status
								Tenant_Name as "Tenant Name"
								Manager_Email as "Manager Email"
								Old_Tenants as "Old Tenants"
								Location
				"Renovate"
				"Complaint"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
			 				"Add Tenant"
			 				"Renovate"
			 				"Complaint"
    	 				)
    				)
				)
			}
			list Vacant_Units
			{
				icon = "ui-3-card-add"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = list
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Unit_Name as "Unit Name"
								Property_Name as "Property Name"
								Block
								Floor
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
										"Add Tenant"
										"Renovate"
										"Complaint"
    								)
									on left swipe
									(
										"Add Tenant"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
				"Add Tenant"
				"Renovate"
								Unit_Name as "Unit Name"
								Block
								Floor
								Area as "Area (in Sq. ft)"
								Bedrooms
								Bathrooms
								Amenities
								Property_Name as "Property Name"
								Owner_Email as "Owner Email"
								Status
								Tenant_Name as "Tenant Name"
								Manager_Email as "Manager Email"
								Old_Tenants as "Old Tenants"
								Location
				"Complaint"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Occupied_Units
			{
				icon = "ui-3-card-alert"
			}
			list Renovating_Units
			{
				icon = "ui-3-select"
			}
			list Ready_to_Move_in_Units
			{
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = list
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Unit_Name as "Unit Name"
								Property_Name as "Property Name"
								Block
								Floor
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
										"Add Tenant"
										"Renovate"
										"Complaint"
    								)
									on left swipe
									(
										"Add Tenant"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
				"Add Tenant"
				"Renovate"
								Unit_Name as "Unit Name"
								Block
								Floor
								Area as "Area (in Sq. ft)"
								Bedrooms
								Bathrooms
								Amenities
								Property_Name as "Property Name"
								Owner_Email as "Owner Email"
								Status
								Tenant_Name as "Tenant Name"
								Manager_Email as "Manager Email"
								Old_Tenants as "Old Tenants"
								Location
				"Complaint"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Tenants_Details
		{
			displayname= "Tenants Details"
			icon = "users-single-03"
			form  Add_Tenant_Details
			{
				layout = left
				icon = "users-2-a-add"
			}
			list Tenants_Details
			{
				icon = "users-2-family"
			}
		}
		section  Rental_Payment
		{
			displayname= "Rental Payment"
			icon = "shopping-credit-card"
			form  Rental_Payment
			{
				layout = left
				icon = "ui-2-fat-add"
			}
			list Rental_Payment_Details
			{
				icon = "business-round-dollar"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = list
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Unit_Name as "Unit Name"
								Amount_to_be_Paid as "Amount to be Paid"
								Starting_Date as "Starting Date"
								Tenant_Name as "Tenant Name"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
										"Paid"
    								)
									on left swipe
									(
										"Paid"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
				"Paid"
								Property_Name as "Property Name"
								Starting_Date as "Starting Date"
								Next_Due_Date as "Next Due Date"
								Unit_Name as "Unit Name"
								Owner_Name as "Owner Name"
								Tenant_Name as "Tenant Name"
								Status
								Rent_Amount as "Rent Amount"
								Overdue_Amount as "Overdue Amount"
								Amount_to_be_Paid as "Amount to be Paid"
								Amount_Paid as "Amount Paid"
								Next_Due as "Next Due"
								Mode_of_Payment as "Mode of Payment"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
			 				"Paid"
    	 				)
    				)
				)
			}
		}
		section  Complaints
		{
			icon = "files-book-07"
			form  Raise_a_Complaint
			{
				layout = left
				icon = "ui-2-square-add-11"
			}
			calendar All_Complaints
			{
				icon = "ui-1-calendar-60"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				display type = list
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Complaint_ID as "Complaint ID"
								Complaint_Details as "Complaint  Details"
								Complaint_Raised_By as "Complaint Raised By"
								Date_of_Incident as "Date of Reporting"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Assign"
										"Complete"
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
										"Assign"
										"Complete"
    								)
									on left swipe
									(
										"Assign"
										"Complete"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Date_of_Incident as "Date of Reporting"
								Complaint_ID as "Complaint ID"
								Property_Name as "Property Name"
								Unit_Name as "Unit Name"
								Complaint_Details as "Complaint  Details"
								Complaint_about as "Complaint about"
								Complaint_Raised_By as "Complaint Raised By"
								Maintenance_Service as "Maintenance Service"
								Location
								Complaint_Status as "Complaint Status"
								Assigned_to as "Assigned to"
				"Assign"
				"Complete"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
			 				"Assign"
			 				"Complete"
    	 				)
    				)
				)
			}
			list Complaints_List
			{
				icon = "files-folder-exclamation"
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				display type = list
			 				layout type = 19
		     				title = "Overview"
							fields
							(
								Add_Image as "Add Image"
								Date_of_Incident as "Date of Reporting"
								Complaint_Details as "Complaint  Details"
								Complaint_Raised_By as "Complaint Raised By"
								Complaint_Status as "Complaint Status"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
			 				"Assign"
			 				"Complete"
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
										"Assign"
										"Complete"
    								)
									on left swipe
									(
										"Assign"
										"Complete"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Date_of_Incident as "Date of Reporting"
								Complaint_Status as "Complaint Status"
								Complaint_ID as "Complaint ID"
								Unit_Name as "Unit Name"
								Add_Image as "Add Image"
								Property_Name as "Property Name"
								Complaint_Details as "Complaint  Details"
								Complaint_about as "Complaint about"
								Complaint_Raised_By as "Complaint Raised By"
								Maintenance_Service as "Maintenance Service"
								Location
								Assigned_to as "Assigned to"
				"Assign"
				"Complete"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
			 				"Complete"
			 				"Assign"
    	 				)
    				)
				)
			}
			list Complaints_Manager_View
			{
				icon = "users-single-position"
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				display type = list
			 				layout type = 19
		     				title = "Overview"
							fields
							(
								Add_Image as "Add Image"
								Date_of_Incident as "Date of Reporting"
								Complaint_Details as "Complaint  Details"
								Complaint_Raised_By as "Complaint Raised By"
								Unit_Name as "Unit Name"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Assign"
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
										"Assign"
    								)
									on left swipe
									(
										"Assign"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Date_of_Incident as "Date of Reporting"
								Unit_Name as "Unit Name"
								Complaint_Details as "Complaint  Details"
								Add_Image as "Add Image"
								Complaint_about as "Complaint about"
								Complaint_Raised_By as "Complaint Raised By"
								Maintenance_Service as "Maintenance Service"
								Complaint_ID as "Complaint ID"
								Complaint_Status as "Complaint Status"
								Assigned_to as "Assigned to"
				"Assign"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Assign"
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Complaints_Owner_View
			{
				icon = "users-circle-09"
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				display type = list
			 				layout type = 19
		     				title = "Overview"
							fields
							(
								Add_Image as "Add Image"
								Date_of_Incident as "Date of Reporting"
								Complaint_Details as "Complaint  Details"
								Complaint_Raised_By as "Complaint Raised By"
								Unit_Name as "Unit Name"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Assign"
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
										"Assign"
    								)
									on left swipe
									(
										"Assign"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Date_of_Incident as "Date of Reporting"
								Unit_Name as "Unit Name"
								Complaint_Details as "Complaint  Details"
								Add_Image as "Add Image"
								Complaint_about as "Complaint about"
								Complaint_Raised_By as "Complaint Raised By"
								Maintenance_Service as "Maintenance Service"
								Complaint_ID as "Complaint ID"
								Complaint_Status as "Complaint Status"
								Assigned_to as "Assigned to"
				"Assign"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Assign"
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Complaints_Tenant_View
			{
				icon = "users-square-31"
			}
		}
		section  Tenant_Portal
		{
			displayname= "Tenant Portal"
			icon = "ui-1-home-52"
			summary My_Details_tenant
			{
				icon = "users-single-03"
			}
			list Tenants_View
			{
				icon = "files-user"
				quickview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				display type = list
			 				layout type = 1
		     				title = "Overview"
							fields
							(
								Unit_Name as "Unit Name"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
										"Complaint"
    								)
									on left swipe
									(
										"Complaint"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Unit_Name as "Unit Name"
								Property_Name as "Property Name"
								Block
								Floor
								Area as "Area (in Sq. ft)"
								Bedrooms
								Bathrooms
								Amenities
								Owner_Email as "Owner Email"
								Status
								Tenant_Name as "Tenant Name"
								Old_Tenants as "Old Tenants"
				"Complaint"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
			 				"Complaint"
    	 				)
    				)
				)
			}
			list My_Payments
			{
				icon = "business-money-time"
			}
		}
		section  Manager
		{
			icon = "users-2-standing-man"
			list My_Details_Manager
			{
				icon = "users-2-contacts-44"
			}
			list Manager_View
			{
				icon = "location-explore-user"
			}
		}
		section  Owner_Details
		{
			displayname= "Owner Details"
			icon = "users-2-standing-man"
			list Owner_Details
			{
				icon = "users-single-02"
			}
			list Owner_View
			{
				icon = "users-single-position"
			}
		}
		section  Maintenance_People
		{
			displayname= "Maintenance People"
			icon = "users-multiple-11"
			form  Add_Staff
			{
				layout = auto
				icon = "users-2-a-add"
			}
			list All_Staffs
			{
				icon = "users-2-multiple"
			}
		}
		section  Contacts
		{
			icon = "users-multiple-11"
			form  Add_Contact
			{
				layout = left
				icon = "users-2-a-add"
			}
			list All_Contacts
			{
				icon = "users-contacts"
			}
		}
		section  Visitors
		{
			icon = "users-multiple-11"
			form  Add_Visitors
			{
				layout = left
				icon = "ui-1-bold-add"
			}
			list Visitors_Details
			{
				icon = "users-2-multiple"
			}
			list My_Visitors
			{
				icon = "users-2-family"
			}
						pivotchart Weekly_Visitor_Stats
			{
				icon = "business-chart-bar-32"
			}
			 
			pivotchart Monthly_Visitor_Stats
			{
				icon = "business-chart-bar-32"
			}
		}
		section  Admin
		{
			icon = "ui-1-lock-circle-open"
			list Property_types
			{
				icon = "business-hierarchy-54"
			}
			form  Add_Policy
			{
				layout = auto
				icon = "ui-1-bold-add"
			}
			list Amenities
			{
				icon = "travel-pool"
			}
			form  Add_Owner
			{
				layout = auto
				icon = "ui-2-square-add-11"
			}
			list All_Policies
			{
				icon = "business-agenda"
			}
			list Blocks
			{
				icon = "business-building"
			}
			list Floors
			{
				icon = "holidays-chimney"
			}
			list Managers_Details
			{
				icon = "users-single-04"
			}
		}
		section  Charts
		{
			 
			pivotchart Property_Stats
			{
				icon = "business-chart-bar-32"
				hide = true
			}
			 
			pivotchart Complaint_Stats
			{
				icon = "business-chart-bar-32"
				hide = true
			}
		}
		customize
		{
        	layout = slidingpane
		 	icons style = outline
        	font = "default"
            style = "3"
        	color options
        	{
             	color = turquoise
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	tablet
	{
		section  Hidden
		{
			form  Add_Property_type
			{
				layout = auto
				hide = true
			}
			form  Add_Amenities
			{
				layout = auto
				hide = true
			}
			form  Add_Block
			{
				layout = auto
				hide = true
			}
			form  Add_Floor
			{
				layout = auto
				hide = true
			}
			form  Add_Managers
			{
				layout = left
				hide = true
			}
			form  Add_Services
			{
				layout = auto
				hide = true
			}
			list Add_Services_Report
			{
				hide = true
			}
			form  Add_Location
			{
				layout = auto
				hide = true
			}
			list Add_Location_Report
			{
				hide = true
			}
			form  Assign_task
			{
				layout = left
				hide = true
			}
		}
		section  Dashboard
		{
			icon = "ui-1-dashboard-half"
			page Dashboard
			{
			}
		}
		section  Properties
		{
			icon = "business-building"
			form  Add_Property
			{
				layout = left
				icon = "ui-2-square-add-11"
			}
			list All_Property_Details
			{
				icon = "travel-temple-02"
			}
		}
		section  Unit_Details
		{
			displayname= "Unit Details"
			icon = "ui-1-home-52"
			form  Add_Unit_Details
			{
				layout = left
				icon = "ui-2-square-add-08"
			}
			list All_Unit_Details
			{
				icon = "nature-dog-house"
			}
			list Vacant_Units
			{
				icon = "ui-3-card-add"
			}
			list Occupied_Units
			{
				icon = "ui-3-card-alert"
			}
			list Renovating_Units
			{
				icon = "ui-3-select"
			}
			 
			pivotchart Property_Stats
			{
				icon = "business-chart-bar-32"
			}
			list Ready_to_Move_in_Units
			{
			}
		}
		section  Tenants_Details
		{
			displayname= "Tenants Details"
			icon = "users-single-03"
			form  Add_Tenant_Details
			{
				layout = left
				icon = "users-2-a-add"
			}
			list Tenants_Details
			{
				icon = "users-2-contacts-44"
			}
		}
		section  Rental_Payment
		{
			displayname= "Rental Payment"
			icon = "shopping-credit-card"
			form  Rental_Payment
			{
				layout = left
				icon = "ui-1-bold-add"
			}
			list Rental_Payment_Details
			{
				icon = "business-round-dollar"
			}
		}
		section  Complaints
		{
			icon = "files-book-07"
			form  Raise_a_Complaint
			{
				layout = left
				icon = "ui-2-square-add-11"
			}
			calendar All_Complaints
			{
				icon = "ui-1-calendar-60"
			}
			list Complaints_List
			{
				icon = "files-folder-exclamation"
			}
			list Complaints_Manager_View
			{
				icon = "location-position-user"
			}
			list Complaints_Owner_View
			{
				icon = "location-explore-user"
			}
			list Complaints_Tenant_View
			{
				icon = "files-user"
			}
			 
			pivotchart Complaint_Stats
			{
				icon = "business-chart-bar-32"
			}
		}
		section  Tenant_Portal
		{
			displayname= "Tenant Portal"
			icon = "ui-1-home-52"
			summary My_Details_tenant
			{
				icon = "users-single-03"
			}
			list Tenants_View
			{
				icon = "files-user"
			}
			list My_Payments
			{
				icon = "business-money-time"
			}
		}
		section  Manager
		{
			icon = "users-2-standing-man"
			list My_Details_Manager
			{
				icon = "users-2-contacts-44"
			}
			list Manager_View
			{
				icon = "location-explore-user"
			}
		}
		section  Owner_Details
		{
			displayname= "Owner Details"
			icon = "users-2-standing-man"
			list Owner_Details
			{
				icon = "users-2-contacts-45"
			}
			list Owner_View
			{
				icon = "location-position-user"
			}
		}
		section  Maintenance_People
		{
			displayname= "Maintenance People"
			icon = "users-2-a-add"
			form  Add_Staff
			{
				layout = auto
				icon = "users-2-a-add"
			}
			list All_Staffs
			{
				icon = "users-multiple-11"
			}
		}
		section  Contacts
		{
			icon = "users-multiple-11"
			form  Add_Contact
			{
				layout = left
				icon = "users-2-a-add"
			}
			list All_Contacts
			{
				icon = "users-contacts"
			}
		}
		section  Visitors
		{
			icon = "users-multiple-11"
			form  Add_Visitors
			{
				layout = left
				icon = "users-2-a-add"
			}
			list Visitors_Details
			{
				icon = "users-2-focus"
			}
			list My_Visitors
			{
				icon = "users-2-family"
			}
			 
			pivotchart Weekly_Visitor_Stats
			{
				icon = "business-chart-bar-32"
			}
			 
			pivotchart Monthly_Visitor_Stats
			{
				icon = "business-chart-bar-32"
			}
		}
		section  Admin
		{
			icon = "ui-1-lock-circle"
			list Property_types
			{
				icon = "business-hierarchy-54"
			}
			form  Add_Policy
			{
				layout = auto
				icon = "ui-2-square-add-08"
			}
			list Amenities
			{
				icon = "travel-pool"
			}
			form  Add_Owner
			{
				layout = auto
				icon = "ui-2-square-add-11"
			}
			list All_Policies
			{
				icon = "business-agenda"
			}
			list Blocks
			{
				icon = "business-building"
			}
			list Floors
			{
				icon = "holidays-chimney"
			}
			list Managers_Details
			{
				icon = "users-single-03"
			}
		}
		customize
		{
        	layout = slidingpane
		 	icons style = outline
        	font = "default"
            style = "3"
        	color options
        	{
             	color = turquoise
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	
	reports configuration
	{
	
		Version = 2000024271131
		Key     = "rp9pMGOmWEWarT7vE8CbdDUuDs8DmQSRxYvD74WMpB2qn8G9EZyFdea8KjO1DdMZpGgKq9RhxQVkOEFTwqOW37wCRXyJ5sVuqRhS"
	}
}
