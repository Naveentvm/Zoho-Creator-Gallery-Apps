/*
 * Author       : wapope7431_asuflex
 * Generated on : 10-May-2023 16:02:30
 * Version      : 1.0
 */
 application "Supply Chain"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "Asia/Kolkata"
 	time format = "24-hr"
 	section hidden
	{
		hide = true
		icon = "ui-1-eye-ban-20"
		form Add_Stock
		{
			displayname = "Add Stock"
			success message = "Added to Stock Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Product_Code
			(
				type = picklist	
				displayname = "Product Code"
				values  = Add_Product.ID
    			displayformat = [Product_Code]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Source
			(
				type = picklist	
				values  = Add_Production_Batch.ID
    			displayformat = [Batch_Number]
				allow new entries = true
				[
					displayname = "Add New Source"
				]
				sortorder = ascending
    			description
    			[
    				type = help_text
    			 	message = "Choose the source where this material comes from."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Warehouse_Code
			(
				type = picklist	
				displayname = "Warehouse Code"
				values  = Add_Warehouse.ID
    			displayformat = [Warehouse_Code]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Stock_Inflow
			(
				type = number
				displayname = "Stock Inflow"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Stock_Outflow
			(
				type = number
				displayname = "Stock Outflow"
				initial value = 00
	 			row = 1
	 			column = 1   
				width = medium
			)
			Availability
			(
				type = picklist
				values = {"In Stock","Out of Stock"}
				initial value = "In Stock"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Inventory
			(
				type = picklist	
				values  = Inventory_stateform.ID
    			bidirectional = Stocks
    			displayformat = [ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-stock"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Warehouse
		{
			displayname = "Add Warehouse"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Company_Name
			(
				type = picklist	
				displayname = "Company Name"
				values  = Company_Details.ID
    			bidirectional = Warehouse_Details
    			displayformat = [Company_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Warehouse_Code
			(
    			type = text
				displayname = "Warehouse Code"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Warehouse_Name
			(
    			type = text
				displayname = "Warehouse Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Warehouse_Address
			(
    			type = address
				displayname = "Warehouse Address"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Warehouse_Keeper
			(
				type = picklist	
				displayname = "Warehouse Keeper"
				values  = Add_Staff[Designation == "Warehouse Manager"].ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name]
				allow new entries = true
				[
					displayname = "Add New Staff"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-shop-location"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Staff
		{
			displayname = "Add Staff"
			success message = "Application Shared Successfully to the Distributor!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Designation
			(
				type = picklist
				values = {"Distributor","Warehouse Keeper","Manager"}
				initial value = "Distributor"
				sortorder = ascending
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Mail_ID
			(
    			type = email
				displayname = "Distributor Email"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number1
			(
    			type = phonenumber
				displayname = "Phone Number"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
	
			customize
			(
				icon = "users-2-contacts-44"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Inventory_stateform
		{
			displayname = "Inventory"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Product_Code
			(
				type = picklist	
				displayname = "Product Code"
				values  = Add_Product.ID
    			displayformat = [Product_Code]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Qty_Inhand
			(
				type = number
				displayname = "Qty. Inhand"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Qty_Distributed
			(
				type = number
				displayname = "Qty. Distributed"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Stocks
			(
				type = list	
				values  = Add_Stock.ID
    			bidirectional = Inventory
    			displayformat = [Stock_Inflow]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-stock"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Decline_Form
		{
			displayname = "Decline Form"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Order_ID
			(
				type = picklist	
				displayname = "Order ID"
				values  = New_Order_Request.ID
    			displayformat = [Order_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Comments
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "arrows-1-simple-down"
			)
			actions
			{
				Submit
				(
   					type = submit
   					displayname = "Submit"
				)
			}
		}
		form Add_Invoice
		{
			displayname = "Add Invoice"
			success message = "Sales Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Company_Name
			(
				type = picklist	
				displayname = "Company Name"
				values  = Company_Details.ID
    			displayformat = [Company_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Invoice_ID
			(
    			type = autonumber
				displayname = "Invoice ID"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Invoice_Date
			(
    			type = date
				displayname = "Invoice Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Order_ID
			(
				type = picklist	
				displayname = "Order ID"
				values  = New_Order_Request[Status == "Approved"].ID
    			bidirectional = Sales_Invoice
    			displayformat = [Order_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Retailer_Email
			(
				type = picklist	
				displayname = "Retailer Email"
				values  = Add_Retailer.ID
    			displayformat = [Email]
				allow new entries = true
				[
					displayname = "Add New Retailer"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Retailer_Name
			(
    			type = text
				displayname = "Retailer Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Products
			(
				type = grid
				values  = Product_Delivery_Details.ID
    			bidirectional = Invoice_ID
	 			row = 2
	 			column = 1   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 3
	 			column = 0   
				width = medium
			)
			Total_Sales
			(
				displayname = "Total Sales"
				type = USD
				initial value = 00
	 			row = 3
	 			column = 1   
				width = medium
			)
			Shipping_and_Handling_Charges
			(
				displayname = "Shipping and Handling Charges"
				type = USD
				initial value = 00
	 			row = 3
	 			column = 1   
				width = medium
			)
			Tax_Percent
			(
    			type = percentage
				displayname = "Tax Percent"
				initial value = 00%
	 			row = 3
	 			column = 1   
				width = medium
			)
			Tax_Amount
			(
				displayname = "Tax Amount"
				type = USD
				initial value = 00
	 			row = 3
	 			column = 1   
				width = medium
			)
			Invoice_Amount
			(
				displayname = "Net Total"
				type = USD
				initial value = 00
	 			row = 3
	 			column = 1   
				width = medium
			)
			Due_Amount
			(
				displayname = "Due Amount"
				type = USD
				initial value = 0.00
	 			row = 3
	 			column = 1   
				width = medium
			)
			Returned_Date
			(
				type = list	
				displayname = "Returned Date"
				values  = Return_Product.ID
    			bidirectional = Invoice_ID
    			displayformat = [Returned_Date + " - " + Qty_Returned]
				height = 60px
	 			row = 3
	 			column = 1   
				width = medium
			)
			Payment_Status
			(
				type = picklist
				displayname = "Payment Status"
				values = {"Unpaid","Paid","Partially Paid"}
				initial value = "Unpaid"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Payment_Details
			(
				type = section
				displayname = "Payment Details "
				visibility = true
	 			row = 4
	 			column = 0   
				width = medium
			)
			Amount_Paid
			(
				displayname = "Amount Paid"
				type = USD
				initial value = 00
	 			row = 4
	 			column = 1   
				width = medium
			)
			Payment_Method
			(
				type = picklist
				displayname = "Payment Method"
				values = {"Cash","Net banking ","UPI Payment"}
				initial value = "Cash"
				others option = true
	 			row = 4
	 			column = 1   
				width = medium
			)
			Received_By
			(
				type = picklist	
				displayname = "Received By"
				values  = Add_Staff.ID
    			displayformat = [" " + Name.first_name + " " + Mail_ID]
				sortorder = ascending
	 			row = 4
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-mobile-card"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Retailer
		{
			displayname = "Add Retailer"
			success message = "Application Shared with the Contact Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Address
			(
    			type = address
     			capture_coordinates = false
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Suppliers
	{
		icon = "users-multiple-11"
		form Add_Vendor
		{
			displayname = "Add Vendor"
			success message = "Supplier Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Vendor_Email
			(
    			type = email
				displayname = "Vendor Email"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Company_Name
			(
    			type = text
				displayname = "Company Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Company_Address
			(
    			type = address
				displayname = "Company Address"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Products_Supply
			(
				type = list	
				displayname = "Products Supply"
				values  = Add_Product.ID
    			bidirectional = Vendor
    			displayformat = [Product_Name]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "food-hob"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Dashboards
	{
		icon = "ui-1-dashboard-half"
				 page Admin_View 
	 	 { 
 	 	 displayname = "Admin View"

 	 	 icon = "ui-1-dashboard-half" 
	 	 Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\ttabletDeviceConfig='{\"layout\":{\"displayType\":\"card\",\"design\":\"onebyone\",\"forcedOrientation\":false}}'\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"25%\"\n   \t>\n\t<panel elementName=\"Panel\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '10px'\n\tbgColor = '#FF8B82'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#F3F3F3'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\tbgColor = '#FF8B82'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Status == &quot;Requested&quot;'\n\t  value = 'thisapp.New_Order_Request.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#F9F9F9'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Pending Orders'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc><pc \n\t\tpadding = '10px'\n\tbgColor = '#FF8B82'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#CB3B23'\n\tbgColor = '#FF8B82'\n\twidth = '80px'\n\theight = '80px'\n\ttype = 'icon'\n\tvalue = 'ui-2-time'\n\tsize = '32px'\n\tcornerRadius = '0px'\n\ticonType = 'outline'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '2px'\n\tbgColor = '#CB3B23'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'Pending_Orders'\n\t\ttarget = 'same-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#F9F9F9'\n\tsize = '15px'\n\ttype = 'Text'\n\tbgColor = '#CB3B23'\n\n\n\n\t  \n\t  value = 'Approve Orders'\n>\n<\/text>\n\n<\/pc><pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '5px'\n\n\tcolor = '#E7E7E7'\n\tbgColor = '#CB3B23'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'arrows-3-circle-simple-right'\n\tsize = '22px'\n\tcornerRadius = '20px'\n\ticonType = 'solid'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '10px'\n\tbgColor = '#FF7C89'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#F3F3F3'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\tbgColor = '#FF7C89'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Status == &quot;Approved&quot;'\n\t  value = 'thisapp.New_Order_Request.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#F9F9F9'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Orders To deliver'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc><pc \n\t\tpadding = '10px'\n\tbgColor = '#FF7C89'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#F30044'\n\tbgColor = '#FF7C89'\n\twidth = '80px'\n\theight = '80px'\n\ttype = 'icon'\n\tvalue = 'shopping-delivery-time'\n\tsize = '32px'\n\tcornerRadius = '0px'\n\ticonType = 'outline'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '2px'\n\tbgColor = '#F30044'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'Approved_Orders'\n\t\ttarget = 'same-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#F9F9F9'\n\tsize = '15px'\n\ttype = 'Text'\n\tbgColor = '#F30044'\n\n\n\n\t  \n\t  value = 'Order Details'\n>\n<\/text>\n\n<\/pc><pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '5px'\n\n\tcolor = '#E7E7E7'\n\tbgColor = '#F30044'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'arrows-3-circle-simple-right'\n\tsize = '22px'\n\tcornerRadius = '20px'\n\ticonType = 'solid'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<panel elementName=\"Panel 2\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '10px'\n\tbgColor = '#9B69FB'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#F3F3F3'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t  value = 'thisapp.Return_Product.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#F9F9F9'\n\tsize = '16px'\n\ttype = 'Text'\n\tbgColor = '#9B69FB'\n\n\n\n\t  \n\t  value = 'Product Returns'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc><pc \n\t\tpadding = '10px'\n\tbgColor = '#9B69FB'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#6D2FC8'\n\tbgColor = '#9B69FB'\n\twidth = '80px'\n\theight = '80px'\n\ttype = 'icon'\n\tvalue = 'arrows-2-rotate-left'\n\tsize = '32px'\n\tcornerRadius = '0px'\n\ticonType = 'outline'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '2px'\n\tbgColor = '#833AF0'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'Return_Details'\n\t\ttarget = 'same-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#F9F9F9'\n\tsize = '15px'\n\ttype = 'Text'\n\tbgColor = '#833AF0'\n\n\n\n\t  \n\t  value = 'Product Returned Details'\n>\n<\/text>\n\n<\/pc><pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '5px'\n\n\tcolor = '#E7E7E7'\n\tbgColor = '#833AF0'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'arrows-3-circle-simple-right'\n\tsize = '22px'\n\tcornerRadius = '20px'\n\ticonType = 'solid'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<panel elementName=\"Panel 3\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '10px'\n\tbgColor = '#6288EA'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#F3F3F3'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t  value = 'thisapp.Add_Retailer.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#F9F9F9'\n\tsize = '16px'\n\ttype = 'Text'\n\tbgColor = '#6288EA'\n\n\n\n\t  \n\t  value = 'No Of Retailers'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc><pc \n\t\tpadding = '10px'\n\tbgColor = '#6288EA'\n\n\t\twidth = '50%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#1F58B8'\n\tbgColor = '#6288EA'\n\twidth = '80px'\n\theight = '80px'\n\ttype = 'icon'\n\tvalue = 'shopping-shop-location'\n\tsize = '32px'\n\tcornerRadius = '0px'\n\ticonType = 'outline'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '2px'\n\tbgColor = '#286BDC'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'Retailers'\n\t\ttarget = 'new-window'\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#F9F9F9'\n\tsize = '15px'\n\ttype = 'Text'\n\tbgColor = '#286BDC'\n\n\n\n\t  \n\t  value = 'retailer Details'\n>\n<\/text>\n\n<\/pc><pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '5px'\n\n\tcolor = '#E7E7E7'\n\tbgColor = '#286BDC'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'arrows-3-circle-simple-right'\n\tsize = '22px'\n\tcornerRadius = '20px'\n\ticonType = 'solid'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<dspZml id='zml_snippet' elementName=\"ZML Snippet\"\n>\n\t<![CDATA[htmlpage zml_snippet()\ncontent\n&lt;%{\n\tapproved_orders = New_Order_Request[Status == &quot;Approved&quot; || Status == &quot;Moved To Sales&quot; || Status == &quot;Delivered&quot;];\n\ttotal_sales_amount = Add_Invoice[Payment_Status != &quot;Paid&quot;].sum(Invoice_Amount);\n\tall_sales = Add_Invoice[ID != 0];\n\t%&gt;\n&lt;row&gt;\n\t&lt;column&gt;\n\t\t&lt;row&gt;\n\t\t\t&lt;column width=&quot;50%&quot;&gt;\n\t\t\t\t&lt;gauge bgColor=&apos;#ffffff&apos; color=&apos;#000000&apos; bold=&apos;false&apos; italic=&apos;false&apos; criteria=&apos;((Status == &amp;quot;Delivered&amp;quot;))&apos; fontFamily=&apos;default&apos; theme=&apos;#FF7B19&apos; displayType=&apos;actual&apos; type=&apos;2&apos; size=&apos;4&apos; filledColor=&apos;#FF7B19&apos; nonFilledColor=&apos;rgba(255, 205, 188, 1)&apos; needleColor=&apos;#000000&apos; targetColor=&apos;#D8D8D8&apos; title=&apos;Order Deliver Status&apos; titleSize=&apos;3&apos; boldTitle=&apos;600&apos; value=&apos;thisapp.New_Order_Request.ID.count&apos;&gt;\n\t\t\t\t\t&lt;target size=&quot;2&quot; color=&quot;#7F7F7F&quot; fontFamily=&quot;default&quot; bold=&quot;false&quot; italic=&quot;false&quot; value=&quot;&quot; \/&gt;\n\t\t\t\t\t&lt;maximumvalue size=&quot;2&quot; color=&quot;#7F7F7F&quot; fontFamily=&quot;default&quot; bold=&quot;false&quot; italic=&quot;false&quot; value=&quot;&lt;%=approved_orders.count()%&gt;&quot; \/&gt;\n\t\t\t\t&lt;\/gauge&gt;\n\t\t\t&lt;\/column&gt;\n\t\t\t&lt;column width=&quot;50%&quot;&gt;\n\t\t\t\t&lt;gauge bgColor=&apos;#ffffff&apos; color=&apos;#000000&apos; bold=&apos;false&apos; italic=&apos;false&apos; fontFamily=&apos;default&apos; theme=&apos;theme1&apos; displayType=&apos;actual&apos; type=&apos;3&apos; size=&apos;4&apos; value=&apos;thisapp.Add_Invoice.Amount_Paid.sum&apos; title=&apos;Payments Status&apos; titleSize=&apos;3&apos; boldTitle=&apos;600&apos;&gt;\n\t\t\t\t\t&lt;target size=&quot;2&quot; color=&quot;#7F7F7F&quot; fontFamily=&quot;default&quot; bold=&quot;false&quot; italic=&quot;false&quot; value=&quot;&quot; \/&gt;\n\t\t\t\t\t&lt;ranges&gt;\n\t\t\t\t\t\t&lt;range color=&quot;#2D72FF&quot; width=&quot;50&quot; \/&gt;\n\t\t\t\t\t\t&lt;range color=&quot;#FF6C2D&quot; width=&quot;50&quot; \/&gt;\n\t\t\t\t\t&lt;\/ranges&gt;\n\t\t\t\t\t&lt;maximumvalue size=&quot;2&quot; color=&quot;#7F7F7F&quot; fontFamily=&quot;default&quot; bold=&quot;false&quot; italic=&quot;false&quot; value=&quot;&lt;%=total_sales_amount%&gt;&quot; \/&gt;\n\t\t\t\t&lt;\/gauge&gt;\n\t\t\t&lt;\/column&gt;\n\t\t&lt;\/row&gt;\n\t\t&lt;row&gt;\n\t\t\t&lt;column width=&quot;100%&quot;&gt;\n\t\t\t\t&lt;gauge bgColor=&apos;#ffffff&apos; color=&apos;#000000&apos; bold=&apos;false&apos; italic=&apos;false&apos; criteria=&apos;((Payment_Status == &amp;quot;Paid&amp;quot;))&apos; fontFamily=&apos;default&apos; theme=&apos;#0BD6B1&apos; displayType=&apos;actual&apos; type=&apos;5&apos; size=&apos;4&apos; filledColor=&apos;#0BD6B1&apos; nonFilledColor=&apos;#F5F5F5&apos; targetColor=&apos;#E5E5E5&apos; value=&apos;thisapp.Add_Invoice.ID.count&apos; title=&apos;Paid Vs Unpaid Sales&apos; titleSize=&apos;3&apos; boldTitle=&apos;600&apos;&gt;\n\t\t\t\t\t&lt;target size=&quot;15px&quot; color=&quot;#00000000&quot; fontFamily=&quot;default&quot; bold=&quot;false&quot; italic=&quot;false&quot; value=&quot;&lt;%=all_sales.count()%&gt;&quot; \/&gt;\n\t\t\t\t\t&lt;maximumvalue color=&quot;&quot; fontFamily=&quot;default&quot; bold=&quot;false&quot; italic=&quot;false&quot; value=&quot;&lt;%=all_sales.count()%&gt;&quot; \/&gt;\n\t\t\t\t&lt;\/gauge&gt;\n\t\t\t&lt;\/column&gt;\n\t\t&lt;\/row&gt;\n\t&lt;\/column&gt;\n&lt;\/row&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dspZml>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<report \n\telementName=\"Report\"\n\n\t\tappLinkName = 'thisapp'\n\t\tlinkName = 'Monthly_Income'\n\t\n\t\tiszreport = 'true'\n\theightType = 'auto'\n\theightValue = '700'\n\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<report \n\telementName=\"Report 1\"\n\n\t\tappLinkName = 'thisapp'\n\t\tlinkName = 'Retailer_Addresses'\n\t\n\t\tiszreport = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\n\/>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<report \n\telementName=\"Report 2\"\n\n\t\tappLinkName = 'thisapp'\n\t\tlinkName = 'Deliveries_By_Warehouse'\n\t\n\t\tiszreport = 'true'\n\theightType = 'auto'\n\theightValue = '700'\n\n\/>\n<\/column>\n<\/row>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet' elementName=\"HTML Snippet\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet()\ncontent\n&lt;%{\n\tcom_det = Company_Details[ID != 0];\n\tget_admin_det = Add_Staff[Mail_ID == zoho.adminuserid];\n\tif(get_admin_det.count() == 0)\n\t{\n\t\topenUrl(zoho.appuri + &quot;#Form:Add_Staff&quot;,&quot;same window&quot;);\n\t}\n\telse\n\t{\n\t\tif(com_det.count() == 0)\n\t\t{\n\t\t\topenUrl(zoho.appuri + &quot;#Form:Company_Details&quot;,&quot;same window&quot;);\n\t\t}\n\t}\n\t%&gt;\n&lt;style&gt;\n.zc-pb-tile-card {\n    overflow: hidden !important;\n\tbox-shadow: unset !important;\n\tbackground-color: transparent;\n}\n}\n.zc-pb-tile-cnt-wrapper:last-child {\n    border-bottom-right-radius: 0px !important;\n    border-bottom-left-radius: 0px !important;\n    box-shadow: unset !important;\n}\n.zc-form-fullheight {\n    background: transparent;\n    min-height: 100%;\n    min-width: 100%;\n    display: inline-block;\n}\n.form-outer-wrapper {\n    background-color: transparent;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n    box-shadow: none;\n}\n.label-left .mono-column .first-column, .label-right .mono-column .first-column, .label-top .mono-column .first-column, .label-inplace .mono-column .first-column {\n    width: 400px;\n    margin: auto;\n}\n.label-inplace .select2-container .select2-choice{\n\tborder-color: #bfbfbfbf;\n    background: transparent;\n}\n.select2-container .select2-choice .select2-arrow, .select2-container-multi .select2-choices .select2-search-choice {\n    background-color: #eaeaea;\n    border-color: rgba(0,0,0,0.1);\n    color: #333;\n    border-left: 0;\n}\n.label-inplace .form-group .form-label, .label-inplace .form-group.zc-name-field-group .zc_Name_fld span p.zc-subfield-label, .label-inplace .form-group.zc-address-field-group .zc_Address_fld span p.zc-subfield-label, .label-inplace .form-group.zc-SubForm-Address-group .zc_Address_fld span p.zc-subfield-label {\n    position: absolute;\n    box-sizing: border-box;\n\tleft: 105px;;\n    top: 0;\n    z-index: 1;\n    font-size: 13px;\n    padding: 0 3px;\n    color: #7b8098;\n    pointer-events: none;\n    -webkit-transform: translate3d(10px,10px,0) scale(1);\n    transform: translate3d(10px,10px,0) scale(1);\n    transition: -webkit-transform cubic-bezier(.25,.8,.25,1) .25s;\n    transition: transform cubic-bezier(.25,.8,.25,1) .25s;\n   \t-webkit-transform-origin: left top;\n    transform-origin: left top;\n}\n.form-outer-wrapper .formContainer {\n    padding-top: 7px;\n    position: relative;\n    clear: both;\n    width: 340px;\n    margin: auto;\n}\n.zc-pb-elem-title-container {\n    text-align: center;\n}\ndiv[class*=&apos;col-&apos;] {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    width: 100% !important;\n}\n.view-header&gt;.row h3 {\n    color: #000;\n    font-size: 16px;\n    padding: 5px 15px;\n    font-weight: 700 !important;\n    margin: 0;\n    position: relative;\n}\n.zc-design-switch .view-outer-wrapper .view-header {\n    border-bottom: 1px solid #eee;\n    background-color: white;\n}\n.view-options, .view-edit-options {\n    list-style: none;\n    margin: 0;\n    padding: 6px 0 0 0;\n    float: right;\n    visibility: visible;\n    position: absolute;\n    top: -46px;\n    right: 25px;\n}\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Distributors_View 
	 	 { 
 	 	 displayname = "Distributors View"

 	 	 icon = "shopping-delivery-time" 
	 	 Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"40%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel elementName=\"Panel\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '10px'\n\tpaddingLeft = '20px'\n\tpaddingRight = '20px'\n\tpaddingBottom = '10px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<button \n\t\n    action = 'OpenForm'\n\t\tcomponentLinkName = 'Add_Payment_Notes'\n\t\ttarget = 'popup'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\ttext ='Add Payment Note'\n\t\ttype = 'flat'\n\t\tbgColor = '#594DFB'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#000000'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Expected_Delivery_Date is today &amp;&amp; Distributor.Mail_ID == zoho.loginuserid &amp;&amp; Status != &quot;Delivered&quot; &amp;&amp; Status != &quot;Declined&quot;'\n\t  value = 'thisapp.New_Order_Request.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Orders To Delivery Today'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel elementName=\"Panel 2\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#000000'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Expected_Delivery_Date is today &amp;&amp; Distributor.Mail_ID == zoho.loginuserid &amp;&amp; Status == &quot;Delivered&quot;'\n\t  value = 'thisapp.New_Order_Request.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Delivered Orders Today'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel elementName=\"Panel 3\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#000000'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Status != &quot;Delivered&quot; &amp;&amp; Status != &quot;Declined&quot; &amp;&amp; Distributor.Mail_ID == zoho.loginuserid'\n\t  value = 'thisapp.New_Order_Request.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#000000'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'No Of Orders To Delivery'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel elementName=\"Panel 4\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#000000'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Status == &quot;Delivered&quot; &amp;&amp; Distributor.Mail_ID == zoho.loginuserid'\n\t  value = 'thisapp.New_Order_Request.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#000000'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'No Of Orders Delivered'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row>\n<\/column><column\n   \t\t width=\"60%\"\n   \t>\n\t<chart \n\telementName=\"Chart\"\n\n\ttype = 'Column'\n\txtitle = 'Delivery Date '\n\tytitle = 'Orders Delivered'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme2'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'New_Order_Request'\n\txfield = 'Expected_Delivery_Date'\n\tyfields = 'count:Order_ID'\n\t\tDelugeCriteria = 'Status == &quot;Delivered&quot; &amp;&amp; Distributor.Mail_ID == zoho.loginuserid'\n\/>\n\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\telementName=\"Report\"\n\n\t\tappLinkName = 'thisapp'\n\t\tlinkName = 'My_Orders_To_Deliver'\n\t\n\t\tiszreport = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet' elementName=\"HTML Snippet\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet()\ncontent\n&lt;%{\n\t%&gt;\n&lt;style&gt;\n.zc-pb-tile-card {\n\tbox-shadow: unset !important;\n\n}\nlabel.form-label.zc-dem-clearfix.zc-User-label.zc_picklist_label {\n    display: none;\n}\n.formbutton {\n    padding: 27px 25px;\n    width: fit-content;\n    padding: 15px;\n    margin: auto;\n    align-items: center;\n}\n.dual-column .second-column {\n    float: right;\n    position: relative;\n    min-width: 250px;\n}\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Warehouse_View(warehouse_code) 
	 	 { 
 	 	 displayname = "Warehouse View"

 	 	 icon = "shopping-shop-location" 
	 	 Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"displayType\":\"card\",\"design\":\"fluid\",\"style\":\"padding-right:0px;padding-top:10px;padding-bottom:0px;padding-left:0px;\"}}'\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<form \n\telementName=\"Form\"\n\n\tappLinkName = 'thisapp'\n\tlinkName = 'Search_Warehouse'\n\theightType = 'custom'\n\theightValue = '80'\n\turlType = 'none'\n\tzc_Header = 'false'\n\/> \n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"53%\"\n   \t>\n\t<panel elementName=\"Panel\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Add Stock into Warehouse'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<button \n\t\n    action = 'OpenForm'\n\t\tcomponentLinkName = 'Add_Stock'\n\t\ttarget = 'popup'\n\tcolor = '#ffffff'\n\tsize = '16px'\n\ttext ='Open Form'\n\t\ttype = 'rounded'\n\t\tbgColor = '#0072F4'\n\t\tcornerRadius = '60px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"47%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Product Delivery Details'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<button \n\t\n\tcolor = '#ffffff'\n\tsize = '16px'\n\ttext ='View report'\n\t\ttype = 'rounded'\n\t\tbgColor = '#0072F4'\n\t\tcornerRadius = '60px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"30%\"\n   \t>\n\t<dspZml id='zml_snippet' elementName=\"ZML Snippet\"\n>\n\t<![CDATA[htmlpage zml_snippet(warehouse_code)\ncontent\n&lt;%{\n\twarehouse = Add_Warehouse[Warehouse_Code == input.warehouse_code];\n\tget_products = Add_Stock[Warehouse_Code == warehouse.ID];\n\t%&gt;\n&lt;panel&gt;\n  &lt;pr height=&apos;fill&apos; width=&apos;fill&apos;&gt;\n    &lt;pc width=&apos;100%&apos;&gt;\n      &lt;pr height=&apos;50px&apos; width=&apos;fill&apos;&gt;\n        &lt;pc width=&apos;100%&apos; bgColor=&apos;#FFFFFF&apos; hAlign=&apos;center&apos; vAlign=&apos;middle&apos;&gt;\n          &lt;pr height=&apos;auto&apos; width=&apos;auto&apos;&gt;\n            &lt;pc&gt;\n              &lt;text type=&apos;Text&apos; value=&apos;Products Inbound&apos; size=&apos;3&apos; color=&apos;#2D2D2D&apos; marginLeft=&apos;20px&apos; marginRight=&apos;20px&apos; textAlign=&apos;center&apos;&gt; &lt;\/text&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n        &lt;\/pc&gt;\n      &lt;\/pr&gt;\n      &lt;pr height=&apos;1px&apos; width=&apos;fill&apos;&gt;\n        &lt;pc width=&apos;100%&apos; bgColor=&apos;#606060&apos; hAlign=&apos;center&apos; vAlign=&apos;middle&apos;&gt;\n          &lt;pr height=&apos;auto&apos; width=&apos;auto&apos;&gt;\n            &lt;pc&gt;\n              &lt;text type=&apos;Text&apos; value=&apos;-&apos; size=&apos;1&apos; color=&apos;#606060&apos; marginLeft=&apos;20px&apos; marginRight=&apos;20px&apos; textAlign=&apos;center&apos;&gt; &lt;\/text&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n        &lt;\/pc&gt;\n      &lt;\/pr&gt;\n\t  &lt;pr height=&apos;10px&apos; width=&apos;fill&apos;&gt;\n        &lt;pc width=&apos;100%&apos; bgColor=&apos;#FFFFFF&apos; hAlign=&apos;center&apos; vAlign=&apos;middle&apos;&gt;\n          &lt;pr height=&apos;auto&apos; width=&apos;auto&apos;&gt;\n            &lt;pc&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n        &lt;\/pc&gt;\n      &lt;\/pr&gt;\n&lt;%\n\tfor each  product in get_products\n\t{\n\t\t%&gt;\n&lt;pr height=&apos;50px&apos; width=&apos;fill&apos;&gt;\n        &lt;pc width=&apos;50%&apos; bgColor=&apos;#FFFFFF&apos; padding=&apos;10px&apos; hAlign=&apos;right&apos; vAlign=&apos;top&apos;&gt;\n          &lt;pr height=&apos;auto&apos; width=&apos;auto&apos;&gt;\n            &lt;pc&gt;\n              &lt;text type=&apos;Text&apos; value=&apos;&lt;%=product.Product_Code.Product_Name%&gt;&apos; size=&apos;2&apos; padding=&apos;5px&apos; color=&apos;#000000&apos; textAlign=&apos;center&apos;&gt; &lt;\/text&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n        &lt;\/pc&gt;\n        &lt;pc width=&apos;50%&apos; bgColor=&apos;#FFFFFF&apos; padding=&apos;13px&apos; hAlign=&apos;left&apos; vAlign=&apos;top&apos;&gt;\n          &lt;pr height=&apos;auto&apos; width=&apos;auto&apos;&gt;\n            &lt;pc bgColor=&apos;#606060&apos; cornerRadius=&apos;42px&apos;&gt;\n              &lt;text type=&apos;Text&apos; value=&apos;&lt;%=product.Stock_Inflow%&gt;&apos; size=&apos;3&apos; color=&apos;#FFFFFF&apos; paddingLeft=&apos;10px&apos; paddingRight=&apos;10px&apos; textAlign=&apos;center&apos;&gt; &lt;\/text&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n        &lt;\/pc&gt;\n      &lt;\/pr&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;pr height=&apos;fill&apos; width=&apos;fill&apos;&gt;\n        &lt;pc width=&apos;100%&apos; bgColor=&apos;#FFFFFF&apos; hAlign=&apos;center&apos; vAlign=&apos;middle&apos;&gt;\n          &lt;pr height=&apos;auto&apos; width=&apos;auto&apos;&gt;\n            &lt;pc&gt;\n&lt;%\n\tif(get_products.count() == 0)\n\t{\n\t\t%&gt;\n&lt;text type=&apos;Text&apos; value=&apos;No Products Available&apos; size=&apos;3&apos; color=&apos;#FF0000&apos; paddingLeft=&apos;10px&apos; paddingRight=&apos;10px&apos; textAlign=&apos;center&apos;&gt; &lt;\/text&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/pc&gt;\n          &lt;\/pr&gt;\n        &lt;\/pc&gt;\n      &lt;\/pr&gt;\n    &lt;\/pc&gt;\n  &lt;\/pr&gt;\n&lt;\/panel&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dspZml>\n<\/column><column\n   \t\t width=\"70%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"33%\"\n   \t>\n\t<panel elementName=\"Panel 2\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tcolor = '#2D2D2D'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Product Requests'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='1px'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#FF7144'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#FF7144'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = '-'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#FF7163'\n\tbgColor = '#FFFFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'shopping-receipt-list-42'\n\tsize = '24px'\n\ticonType = 'solid'\n\/>\n<\/pc><pc \n\t\n>\n\t<text \n\n\tmarginLeft = '5px'\n\tcolor = '#FF7163'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'Warehouse_Code.Warehouse_Code == input.warehouse_code &amp;&amp; Status == &quot;Requested&quot; || Status == &quot;Accepted&quot;'\n\t  value = 'thisapp.Product_Delivery_Details.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"34%\"\n   \t>\n\t<panel elementName=\"Panel 3\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tcolor = '#2D2D2D'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Products Outbound Today'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='1px'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#5AC374'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#FF7144'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = '-'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#5AC374'\n\tbgColor = '#FFFFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'shopping-delivery-time'\n\tsize = '24px'\n\ticonType = 'solid'\n\/>\n<\/pc><pc \n\t\n>\n\t<text \n\n\tmarginLeft = '5px'\n\tcolor = '#5AC374'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\n\n\t  \n\t\tcriteria = 'Outbound_Date is today &amp;&amp; Status == &quot;Delivered&quot;'\n\t  value = 'thisapp.Product_Delivery_Details.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"33%\"\n   \t>\n\t<panel elementName=\"Panel 4\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tcolor = '#2D2D2D'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Stock Adjustment requests'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='1px'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#9B69FB'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#9B69FB'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = '-'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\n\tcolor = '#9B69FB'\n\tbgColor = '#FFFFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'arrows-1-share-91'\n\tsize = '24px'\n\ticonType = 'solid'\n\/>\n<\/pc><pc \n\t\n>\n\t<text \n\n\tmarginLeft = '5px'\n\tcolor = '#9B69FB'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalSeperator = '.'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Transfer_From.Warehouse_Code == input.warehouse_code'\n\t  value = 'thisapp.Warehouse_Stock_Adjustment_Form.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<chart \n\telementName=\"Chart\"\n\n\t\n\ttitle = 'Products Outbound Last 7 days'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Pie'\n\txtitle = 'Product'\n\tytitle = 'Delivered Quantity'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme2'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Product_Delivery_Details'\n\txfield = 'Product_Code.Product_Name'\n\tyfields = 'sum:Delivered_Quantity'\n\t\tDelugeCriteria = 'Warehouse_Code.Warehouse_Code == input.warehouse_code &amp;&amp; Modified_Time in last 7 days'\n\/>\n\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<chart \n\telementName=\"Chart 1\"\n\n\t\n\ttitle = 'Product Outbound Stats'\n\t\n\t\ttitleSize = '20px'\n\ttype = 'Column'\n\txtitle = 'Product'\n\tytitle = 'Delivered Count'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Product_Delivery_Details'\n\txfield = 'Product_Code.Product_Name'\n\tyfields = 'sum:Delivered_Quantity'\n\t\tDelugeCriteria = 'Warehouse_Code.Warehouse_Code == input.warehouse_code'\n\/>\n\n<\/column>\n<\/row>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet' elementName=\"HTML Snippet\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet(warehouse_code)\ncontent\n&lt;%{\n\tcom_det = Company_Details[ID != 0];\n\tcom_logo = com_det.Logo;\n\t%&gt;\n&lt;style&gt;\n.zc-pb-tile-card {\n    overflow: hidden !important;\n\tbox-shadow: unset !important;\n\tbackground-color: transparent;\n}\n}\n.zc-pb-tile-cnt-wrapper:last-child {\n    border-bottom-right-radius: 0px !important;\n    border-bottom-left-radius: 0px !important;\n    box-shadow: unset !important;\n}\n.zc-form-fullheight {\n    background: transparent;\n    min-height: 100%;\n    min-width: 100%;\n    display: inline-block;\n}\n.form-outer-wrapper {\n    background-color: transparent;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n    box-shadow: none;\n}\n.label-left .mono-column .first-column, .label-right .mono-column .first-column, .label-top .mono-column .first-column, .label-inplace .mono-column .first-column {\n    width: 400px;\n    margin: auto;\n}\n.label-inplace .select2-container .select2-choice{\n\tborder-color: #bfbfbfbf;\n    background: transparent;\n}\n.select2-container .select2-choice .select2-arrow, .select2-container-multi .select2-choices .select2-search-choice {\n    background-color: #eaeaea;\n    border-color: rgba(0,0,0,0.1);\n    color: #333;\n    border-left: 0;\n}\n.label-inplace .form-group .form-label, .label-inplace .form-group.zc-name-field-group .zc_Name_fld span p.zc-subfield-label, .label-inplace .form-group.zc-address-field-group .zc_Address_fld span p.zc-subfield-label, .label-inplace .form-group.zc-SubForm-Address-group .zc_Address_fld span p.zc-subfield-label {\n    position: absolute;\n    box-sizing: border-box;\n\tleft: 105px;;\n    top: 0;\n    z-index: 1;\n    font-size: 13px;\n    padding: 0 3px;\n    color: #7b8098;\n    pointer-events: none;\n    -webkit-transform: translate3d(10px,10px,0) scale(1);\n    transform: translate3d(10px,10px,0) scale(1);\n    transition: -webkit-transform cubic-bezier(.25,.8,.25,1) .25s;\n    transition: transform cubic-bezier(.25,.8,.25,1) .25s;\n   \t-webkit-transform-origin: left top;\n    transform-origin: left top;\n}\n.form-outer-wrapper .formContainer {\n    padding-top: 7px;\n    position: relative;\n    clear: both;\n    width: 340px;\n    margin: auto;\n}\n.zc-pb-elem-title-container {\n    text-align: center;\n}\ndiv[class*=&apos;col-&apos;] {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    width: 100% !important;\n}\n.view-header&gt;.row h3 {\n    color: #000;\n    font-size: 16px;\n    padding: 5px 15px;\n    font-weight: 700 !important;\n    margin: 0;\n    position: relative;\n}\n.zc-design-switch .view-outer-wrapper .view-header {\n    border-bottom: 1px solid #eee;\n    background-color: white;\n}\n.view-options, .view-edit-options {\n    list-style: none;\n    margin: 0;\n    padding: 6px 0 0 0;\n    float: right;\n    visibility: visible;\n    position: absolute;\n    top: -46px;\n    right: 25px;\n}\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Main_Inventory
	{
		displayname= "Main Inventory"
		icon = "design-app"
		form Inventory
		{
			store data in zc = false
			success message = ""
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Product_Code
			(
				type = picklist	
				displayname = "Product Code"
				values  = Add_Product.ID
    			displayformat = [Product_Code]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Qty_Inhand
			(
				type = number
				displayname = "Qty. Inhand"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Qty_Distributed
			(
				type = number
				displayname = "Qty. Distributed"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Stocks
			(
				type = list	
				values  = Add_Stock.ID
    			displayformat = [Stock_Inflow]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-stock"
			)
			actions
			{
				Submit
				(
   					type = submit
   					displayname = "Submit"
				)
				Reset
				(
   					type = reset
   					displayname = "Reset"
				)
			}
		}
		list Inventory_Details
		{
			displayName = "Inventory Details"
			show all rows from Inventory_stateform    
			(
				Qty_Inhand as "Qty. Inhand"
				Qty_Distributed as "Qty. Distributed"
				custom action "Add to Warehouse Stock"
				(
	  			workflow = Add_to_Warehouse_Stock
				show action in view header = true
				show action in edit record menu = true
				execute action for collection of records
				column header = "Add to Warehouse Stock"
				success message = ""
				condition = (Qty_Inhand > 0)
				)
				Product_Code as "Product Code"
			)
			options
			(
				icon = "shopping-stock"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Product_Code as "Product Code"
							Qty_Inhand as "Qty. Inhand"
							Qty_Distributed as "Qty. Distributed"
				"Add to Warehouse Stock"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Add to Warehouse Stock"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
								"Add to Warehouse Stock"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Product_Code as "Product Code"
							Qty_Inhand as "Qty. Inhand"
							Qty_Distributed as "Qty. Distributed"
				"Add to Warehouse Stock"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Stocks_Detials
		{
			displayName = "Stocks Details"
			show all rows from Add_Stock    
			(
				Product_Code.Product_Image as "Product Image"
				Stock_Inflow as "Stock Inflow"
				Stock_Outflow as "Stock Outflow"
				Availability
				Warehouse_Code as "Warehouse Code"
				Product_Code as "Product Code"
			)
			group by
			(
				Warehouse_Code ascending
			)
			sort by
			(
				Product_Code ascending
			)
			options
			(
				icon = "business-stock"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Warehouse_Code as "Warehouse Code"
							Product_Code as "Product Code"
							Stock_Inflow as "Stock Inflow"
							Stock_Outflow as "Stock Outflow"
							Availability
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Warehouse_Code as "Warehouse Code"
							Product_Code as "Product Code"
							Stock_Inflow as "Stock Inflow"
							Stock_Outflow as "Stock Outflow"
							Availability
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Warehouse
	{
		icon = "business-building"
		form Stock
		{
			displayname = "Add Stock"
			store data in zc = false
			success message = ""
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Inventory
			(
				type = picklist	
				values  = Inventory_stateform.ID
    			displayformat = [ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Product_Code
			(
				type = picklist	
				displayname = "Product Code"
				values  = Add_Product.ID
    			displayformat = [Product_Code]
				allow new entries = true
				[
					displayname = "Add New Product"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Source
			(
				type = picklist	
				values  = Add_Production_Batch.ID
    			displayformat = [Batch_Number]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
    			description
    			[
    				type = help_text
    			 	message = "Choose the source where this product comes from."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Warehouse_Code
			(
				type = list	
				displayname = "Warehouse Code"
				values  = Add_Warehouse.ID
    			displayformat = [Warehouse_Code]
				searchable = true
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Quantity
			(
				type = number
				maxchar = 11
	 			row = 1
	 			column = 1   
				width = medium
			)
			Availability
			(
				type = picklist
				values = {"In Stock","Out of Stock"}
				initial value = "In Stock"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-stock"
			)
			actions
			{
				Submit
				(
   					type = submit
   					displayname = "Submit"
				)
				Reset
				(
   					type = reset
   					displayname = "Reset"
				)
			}
		}
		list Warehouse_Details
		{
			displayName = "Warehouse Details"
			show all rows from Add_Warehouse    
			(
				Warehouse_Address  as "Warehouse Address"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Company_Name as "Company Name"
				Warehouse_Name as "Warehouse Name"
				Warehouse_Code as "Warehouse Code"
			)
			group by
			(
				Company_Name ascending
			)
			options
			(
				icon = "shopping-shop-location"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Warehouse_Code as "Warehouse Code"
							Warehouse_Name as "Warehouse Name"
							Company_Name as "Company Name"
							Warehouse_Address as "Warehouse Address"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Warehouse_Code as "Warehouse Code"
							Warehouse_Name as "Warehouse Name"
							Company_Name as "Company Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		map Warehouse_Map
		{
			displayName = "Warehouse Map"
			show all rows from Add_Warehouse    
			(
				Company_Name as "Company Name"
				Warehouse_Code as "Warehouse Code"
				Warehouse_Name as "Warehouse Name"
				Warehouse_Address  as "Warehouse Address"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
			)
			options
			(
	 			display field = Warehouse_Address
	 	 		radius = 1000 Miles
		 		icon = "users-2-pin"
	 		)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Company_Name as "Company Name"
							Warehouse_Code as "Warehouse Code"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company_Name as "Company Name"
							Warehouse_Code as "Warehouse Code"
							Warehouse_Name as "Warehouse Name"
							Warehouse_Address as "Warehouse Address"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Stock_Transfer_Form
		{
			displayname = "Stock Transfer Form"
			success message = "Stock Adjustment Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Stock_Transfer_ID
			(
    			type = autonumber
				displayname = "Stock Transfer ID"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Transfer_To
			(
				type = picklist	
				displayname = "Transfer To"
				values  = Add_Warehouse.ID
    			displayformat = [Warehouse_Code]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Warehouse_Product_Details
			(
				type = grid
				displayname = "Warehouse & Product Details"
				values  = Warehouse_Stock_Adjustment_Form.ID
    			bidirectional = Stock_Adjustment_Form
	 			row = 2
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "business-stock"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Stock_Transfers
		{
			displayName = "All Stock Transfers"
			show all rows from Warehouse_Stock_Adjustment_Form    
			(
				Product
				(
					view = Product_Details
				)
				Transfer_From as "Transfer From"
				Transfer_To as "Transfer To"
				Quantity
				Stock_Adjustment_Form as "Stock Adjustment Form"
				Status
			)
			group by
			(
				Transfer_From ascending
			)
			options
			(
				icon = "shopping-stock"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Product
							Transfer_From as "Transfer From"
							Transfer_To as "Transfer To"
							Quantity
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Product
							Transfer_From as "Transfer From"
							Transfer_To as "Transfer To"
							Quantity
							Stock_Adjustment_Form as "Stock Adjustment Form"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		kanban Stock_Adjustment_Requests
		{
			displayName = "Stock Adjustment Requests"
			show all rows from Warehouse_Stock_Adjustment_Form    
			(
				Stock_Adjustment_Form as "Stock Adjustment Form"
				Product
				Quantity
				Transfer_From as "Transfer From"
				Transfer_To as "Transfer To"
				Status
			)
			options
			(
	 			display field = Status
				record count  = enable
				icon = "business-stock"
	 		)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Stock_Adjustment_Form as "Stock Adjustment Form"
							Product
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Stock_Adjustment_Form as "Stock Adjustment Form"
							Product
							Quantity
							Transfer_From as "Transfer From"
							Transfer_To as "Transfer To"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		kanban Product_Requests
		{
			displayName = "Product Requests"
			show all rows from Product_Delivery_Details    
			(
				Invoice_ID as "Invoice ID"
				Warehouse_Code as "Warehouse Code"
				Product_Code as "Product Code"
				Ordered_Quantity as "Ordered Quantity"
				Delivered_Quantity as "Delivered Quantity"
				Unit_Price as "Selling Unit Price"
				Sub_total as "Sub total"
				Outbound_Date as "Outbound Date"
				Status
			)
			options
			(
	 			display field = Invoice_ID
				sort order  = ascending
				record count  = enable
				icon = "business-businessman-03"
	 		)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Invoice_ID as "Invoice ID"
							Warehouse_Code as "Warehouse Code"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Invoice_ID as "Invoice ID"
							Warehouse_Code as "Warehouse Code"
							Product_Code as "Product Code"
							Ordered_Quantity as "Ordered Quantity"
							Delivered_Quantity as "Delivered Quantity"
							Unit_Price as "Selling Unit Price"
							Sub_total as "Sub total"
							Outbound_Date as "Outbound Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		pivotchart Deliveries_By_Warehouse
		{ 
			displayname = "Deliveries By Warehouse"
			legend = RIGHT
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1617875311175_Product_Delivery_Details
					hide = true
							icon = "shopping-delivery-time"				show all rows from Product_Delivery_Details
				(
			Invoice_ID  as "Invoice ID"
			Warehouse_Code  as "Warehouse Code"
			Product_Code  as "Product Code"
			Ordered_Quantity  as "Ordered Quantity"
			Delivered_Quantity  as "Delivered Quantity"
			Unit_Price  as "Selling Unit Price"
			Sub_total  as "Sub total"
			Outbound_Date  as "Outbound Date"
			Status 
				)
		}
	}
	section page
	{
		displayname= "Order Management"
		icon = "ui-1-check-square-11"
		form New_Order_Request
		{
			displayname = "New Order Request"
			success message = "Sales Request Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Company_Name
			(
				type = picklist	
				displayname = "Company Name"
				values  = Company_Details.ID
    			displayformat = [Company_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Order_ID
			(
    			type = autonumber
				displayname = "Order ID"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Ordered_Date
			(
    			type = date
				displayname = "Ordered Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Retailer
			(
				type = picklist	
				values  = Add_Retailer.ID
    			displayformat = [Name.first_name + Name.last_name + " - " + Email]
				allow new entries = true
				[
					displayname = "Add New Retailer"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Expected_Delivery_Date
			(
    			type = date
				displayname = "Expected Delivery Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"Requested","Approved","Moved To Sales","Delivered","Declined"}
				initial value = "Requested"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Distributor
			(
				type = picklist	
				values  = Add_Staff.ID
    			displayformat = [Name.first_name + " - " + Mail_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Comments
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Sales_Invoice
			(
				type = picklist	
				displayname = "Sales Invoice"
				values  = Add_Invoice.ID
    			bidirectional = Order_ID
    			displayformat = [Invoice_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Products
			(
				type = grid
				defaultrow = 1
				must have Product
				(
					type = picklist	
					values  = Add_Product.ID
    				displayformat = [Product_Code + " - " + Product_Name]
					sortorder = ascending
					width = medium
				)
				must have Quantity
				(
					type = number
					initial value = 1
					width = medium
				)
	 			row = 2
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-basket-edit"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Orders
		{
			displayName = "Orders"
			show all rows from New_Order_Request    
			(
				Comments
				Products.Product as "Products"
				(
					isLinkEnabled = true
				)
				Products.Quantity as "Products"
				Company_Name as "Company Name"
				Distributor
				Expected_Delivery_Date as "Expected Delivery Date"
				Status
				Retailer
				Order_ID as "Order ID"
				Ordered_Date as "Ordered Date"
			)
			group by
			(
				Status ascending
			)
			options
			(
				icon = "shopping-list"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Ordered_Date as "Ordered Date"
							Company_Name as "Company Name"
							Order_ID as "Order ID"
							Retailer
							Status
							Expected_Delivery_Date as "Expected Delivery Date"
							Distributor
							Comments
							Products.Product as "Products"
							Products.Quantity as "Products"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Ordered_Date as "Ordered Date"
							Company_Name as "Company Name"
							Order_ID as "Order ID"
							Retailer
							Status
							Expected_Delivery_Date as "Expected Delivery Date"
							Distributor
							Comments
							Products.Product as "Products"
							Products.Quantity as "Products"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Pending_Orders
		{
			displayName = "Pending Orders"
			show all rows from New_Order_Request  [Status == "Requested"]  
			(
				Products.Product as "Products"
				Products.Quantity as "Products"
				Retailer
				custom action "Approve"
				(
	  			workflow = Approve
				show action in view header = true
				execute action for collection of records
				column header = "Approve"
				success message = ""
				condition = (Status == "Requested" && Status != "Declined")
				)
				Expected_Delivery_Date as "Expected Delivery Date"
				Status
				Distributor
				custom action "Decline"
				(
	  			workflow = Decline
				show action in view header = true
				execute action for collection of records
				column header = "Decline"
				success message = ""
				condition = (Status == "Requested" && Status != "Approved")
				)
				Comments
				Ordered_Date as "Ordered Date"
				Order_ID as "Order ID"
			)
			options
			(
				icon = "ui-2-hourglass"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Approve"
				"Decline"
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Products.Product as "Products"
							Products.Quantity as "Products"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Status
							Distributor
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Expected_Delivery_Date as "Expected Delivery Date"
							Retailer
							Status
							Distributor
							Comments
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "List Item"
		     			related field = Products
						fields
						(
							Product
							Quantity
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Approve"
			 			"Decline"
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Approved_Orders
		{
			displayName = "Approved Orders"
			show all rows from New_Order_Request  [Status == "Approved"]  
			(
				Retailer
				custom action "Move to Sales"
				(
	  			workflow = Sales_Deliver
				show action in view header = true
				execute action for collection of records
				column header = "Move to Sales"
				success message = ""
				condition = (Status == "Approved")
				)
				Expected_Delivery_Date as "Expected Delivery Date"
				Status
				Distributor
				Products.Product as "Products"
				Order_ID as "Order ID"
				Ordered_Date as "Ordered Date"
			)
			options
			(
				icon = "design-todo"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Move to Sales"
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Status
							Distributor
							Products.Product as "Products"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Status
							Distributor
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "List Item"
		     			related field = Products
						fields
						(
							Product
							Quantity
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Move to Sales"
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Orders_To_Deliver
		{
			displayName = "Orders To Deliver"
			show all rows from New_Order_Request  [Status == "Moved To Sales"]  
			(
				Retailer
				custom action "Deliver Order"
				(
	  			workflow = Sales_Deliver
				show action in view header = true
				show action in edit record menu = true
				execute action for collection of records
				column header = "Deliver Order"
				success message = ""
				condition = (Status == "Moved To Sales")
				)
				Expected_Delivery_Date as "Expected Delivery Date"
				Status
				Distributor
				Products.Product as "Products"
				Order_ID as "Order ID"
				Ordered_Date as "Ordered Date"
			)
			options
			(
				icon = "shopping-delivery-time"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Status
							Distributor
							Products.Product as "Products"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Status
							Distributor
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "List Item"
		     			related field = Products
						fields
						(
							Product
							Quantity
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Delivered_Orders
		{
			displayName = "Delivered Orders"
			show all rows from New_Order_Request  [Status == "Delivered"]  
			(
				Retailer
				Status
				Company_Name as "Company Name"
				Order_ID as "Order ID"
				Ordered_Date as "Ordered Date"
				Expected_Delivery_Date as "Expected Delivery Date"
				Distributor
				Sales_Invoice.Invoice_Amount as "Net Total"
			)
			options
			(
				icon = "shopping-delivery-fast"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Company_Name as "Company Name"
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Sales_Invoice.Invoice_Amount as "Net Total"
							Distributor
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company_Name as "Company Name"
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Status
							Distributor
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "List Item"
		     			related field = Products
						fields
						(
							Product
							Quantity
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Sales Details"
		     			related field = Sales_Invoice
						fields
						(
							Invoice_ID as "Invoice ID"
							Invoice_Date as "Invoice Date"
							Retailer_Name as "Retailer Name"
							Retailer_Email as "Retailer Email"
							Total_Sales as "Total Sales"
							Shipping_and_Handling_Charges as "Shipping and Handling Charges"
							Tax_Percent as "Tax Percent"
							Tax_Amount as "Tax Amount"
							Invoice_Amount as "Net Total"
							Due_Amount as "Due Amount"
							Amount_Paid as "Amount Paid"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Declined_Orders
		{
			displayName = "Declined Orders"
			show all rows from New_Order_Request  [Status == "Declined"]  
			(
				Company_Name as "Company Name"
				Retailer
				Expected_Delivery_Date as "Expected Delivery Date"
				Status
				Distributor
				Comments
				Products.Product as "Products"
				Order_ID as "Order ID"
				Ordered_Date as "Ordered Date"
			)
			options
			(
				icon = "arrows-1-simple-down"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Company_Name as "Company Name"
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Distributor
							Comments
							Products.Product as "Products"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company_Name as "Company Name"
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Status
							Distributor
							Comments
							Products.Product as "Products"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Orders
		{
			displayName = "My Orders"
			show all rows from New_Order_Request  [Distributor.Mail_ID == zoho.loginuserid && Status == "Moved To Sales"]  
			(
				Comments
				Order_ID as "Order ID"
				Ordered_Date as "Ordered Date"
				Retailer
				Expected_Delivery_Date as "Expected Delivery Date"
				Status
				Distributor
				Company_Name as "Company Name"
			)
			group by
			(
				Status ascending
			)
			options
			(
				icon = "users-2-a-check"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Company_Name as "Company Name"
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Status
							Distributor
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company_Name as "Company Name"
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Status
							Distributor
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Orders_To_Deliver
		{
			displayName = "My Orders To Deliver"
			show all rows from New_Order_Request  [Status == "Moved To Sales" && Distributor.Mail_ID == zoho.loginuserid]  
			(
				Retailer
				custom action "Deliver Order"
				(
	  			workflow = Sales_Deliver
				show action in view header = true
				show action in edit record menu = true
				execute action for collection of records
				column header = "Deliver Order"
				success message = ""
				condition = (Status == "Moved To Sales")
				)
				Expected_Delivery_Date as "Expected Delivery Date"
				Status
				Distributor
				Products.Product as "Products"
				Order_ID as "Order ID"
				Ordered_Date as "Ordered Date"
			)
			options
			(
				icon = "users-2-a-time"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Deliver Order"
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Status
							Distributor
							Products.Product as "Products"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Expected_Delivery_Date as "Expected Delivery Date"
							Status
							Distributor
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "List Item"
		     			related field = Products
						fields
						(
							Product
							Quantity
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Deliver Order"
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Sales
	{
		icon = "business-businessman-03"
		list Sales_Details
		{
			displayName = "Invoices"
			show all rows from Add_Invoice    
			(
				Invoice_ID as "Invoice ID"
				custom action "Return Product"
				(
	  			workflow = Return_Sales
				show action in edit record menu = true
				column header = "Return Product"
				success message = ""
				)
				Invoice_Date as "Invoice Date"
				Order_ID as "Order ID"
				(
					view = Orders
				)
				Returned_Date as "Returned Details"
				(
					view = Return_Details
					delimiter = newline
				)
				Retailer_Email as "Retailer Email"
				(
					view = Retailers
				)
				Invoice_Amount as "Net Total"
				Amount_Paid as "Amount Paid"
				Due_Amount as "Due Amount"
				Retailer_Name as "Retailer Name"
				Payment_Status as "Payment Status"
			)
			group by
			(
				Payment_Status ascending
			)
			sort by
			(
				Payment_Status ascending
			)
			options
			(
				icon = "business-businessman-03"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Return Product"
							Invoice_ID as "Invoice ID"
							Invoice_Date as "Invoice Date"
							Order_ID as "Order ID"
							Retailer_Name as "Retailer Name"
							Returned_Date as "Returned Details"
							Invoice_Amount as "Net Total"
							Amount_Paid as "Amount Paid"
							Due_Amount as "Due Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Invoice_ID as "Invoice ID"
							Invoice_Date as "Invoice Date"
							Order_ID as "Order ID"
							Retailer_Email as "Retailer Email"
							Invoice_Amount as "Net Total"
							Amount_Paid as "Amount Paid"
							Retailer_Name as "Retailer Name"
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "List Items Add"
		     			related field = Products
						fields
						(
							Invoice_ID as "Invoice ID"
							Warehouse_Code as "Warehouse Code"
							Product_Code as "Product Code"
							Ordered_Quantity as "Ordered Quantity"
							Delivered_Quantity as "Delivered Quantity"
							Unit_Price as "Selling Unit Price"
							Sub_total as "Sub total"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list invoice_dues
		{
			displayName = "invoice dues"
			show all rows from Add_Invoice  [Payment_Status != "Paid"]  
			(
				Invoice_ID as "Invoice ID"
				Invoice_Date as "Invoice Date"
				Retailer_Email as "Retailer Email"
				Total_Sales as "Total Sales"
				Shipping_and_Handling_Charges as "Shipping and Handling Charges"
				Tax_Amount as "Tax Amount"
				Invoice_Amount as "Net Total"
				Amount_Paid as "Amount Paid"
				Due_Amount as "Due Amount"
				Returned_Date as "Returned Date"
				Payment_Status as "Payment Status"
			)
			group by
			(
				Payment_Status ascending
			)
			options
			(
				icon = "business-money-time"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Invoice_Date as "Invoice Date"
							Invoice_ID as "Invoice ID"
							Retailer_Email as "Retailer Email"
							Invoice_Amount as "Net Total"
							Amount_Paid as "Amount Paid"
							Due_Amount as "Due Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock3
					(
			 			layout type = -2
		     			title = "Invoice Details"
		     			related field = Order_ID
						fields
						(
							Company_Name as "Company Name"
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Distributor
							Sales_Invoice.Payment_Status as "Payment Status"
						)
					)
					datablock4
					(
			 			layout type = -1
		     			title = "Products"
		     			related field = Products
						fields
						(
							Invoice_ID as "Invoice ID"
							Product_Code as "Product"
							Ordered_Quantity as "Ordered Quantity"
							Delivered_Quantity as "Delivered Quantity"
							Unit_Price as "Selling Unit Price"
							Sub_total as "Sub total"
						)
					)
					datablock5
					(
			 			layout type = -2
		     			title = "Payment Details"
						fields
						(
							Total_Sales as "Total Sales"
							Tax_Amount as "Tax Amount"
							Shipping_and_Handling_Charges as "Shipping and Handling Charges"
							Invoice_Amount as "Net Total"
							Amount_Paid as "Amount Paid"
							Due_Amount as "Due Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Return_Product
		{
			displayname = "Return Product"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Invoice_ID
			(
				type = picklist	
				displayname = "Invoice ID"
				values  = Add_Invoice.ID
    			bidirectional = Returned_Date
    			displayformat = [Invoice_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Returned_By
			(
				type = picklist	
				displayname = "Returned By"
				values  = Add_Retailer.ID
    			displayformat = [Email]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Product
			(
				type = picklist	
				values  = Add_Product.ID
    			displayformat = [Product_Code + " - " + Product_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Warehouse_Code
			(
				type = picklist	
				displayname = "Warehouse Code"
				values  = Add_Warehouse.ID
    			displayformat = [Warehouse_Code]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Returned_Date
			(
    			type = date
				displayname = "Returned Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Qty_Returned
			(
				type = number
				displayname = "Qty Returned"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Reason
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "social-1-logo-product-hunt"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Return_Details
		{
			displayName = "Return Details"
			show all rows from Return_Product    
			(
				Warehouse_Code as "Warehouse Code"
				Reason
				Qty_Returned as "Qty Returned"
				Invoice_ID as "Invoice ID"
				(
					view = Sales_Details
				)
				Returned_Date as "Returned Date"
				Returned_By as "Returned By"
				Product
			)
			options
			(
				icon = "education-book-bookmark"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Invoice_ID as "Invoice ID"
							Product
							Warehouse_Code as "Warehouse Code"
							Returned_Date as "Returned Date"
							Qty_Returned as "Qty Returned"
							Reason
							Returned_By as "Returned By"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Invoice_ID as "Invoice ID"
							Product
							Warehouse_Code as "Warehouse Code"
							Returned_Date as "Returned Date"
							Qty_Returned as "Qty Returned"
							Reason
							Returned_By as "Returned By"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Warehouse_Stock_Adjustments
	{
		displayname= "Warehouse Stock Adjustments"
		icon = "shopping-stock"
		form Warehouse_Stock_Adjustment_Form
		{
			displayname = "Warehouse Stock Adjustment Form"
			success message = "Warehouse Stock Adjustment Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Stock_Adjustment_Form
			(
				type = picklist	
				displayname = "Stock Adjustment Form"
				values  = Stock_Transfer_Form.ID
    			bidirectional = Warehouse_Product_Details
    			displayformat = [" - " + Stock_Transfer_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Product
			(
				type = picklist	
				values  = Add_Product.ID
    			displayformat = [Product_Code]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Quantity
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Transfer_From
			(
				type = picklist	
				displayname = "Transfer From"
				values  = Add_Warehouse.ID
    			displayformat = [Warehouse_Code + " - " + Warehouse_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Transfer_To
			(
				type = picklist	
				displayname = "Transfer To"
				values  = Add_Warehouse.ID
    			displayformat = [Warehouse_Code + " - " + Warehouse_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = radiobuttons
				values = {"Requested","Accepted","Transferred"}
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "business-stock"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Products
	{
		icon = "ui-2-archive"
		form Add_Product
		{
			displayname = "Add Product"
			success message = "Product Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Product_Code
			(
    			type = text
				displayname = "Product Code"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Product_Name
			(
    			type = text
				displayname = "Product Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Model
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Product_Selling_Price
			(
				displayname = "Product Selling Price"
				type = USD
				format = commadotwestern
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Vendor
			(
				type = picklist	
				values  = Add_Vendor.ID
    			bidirectional = Products_Supply
    			displayformat = [Name.first_name + " " + Name.last_name]
				allow new entries = true
				[
					displayname = "Add New Supplier"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Product_Image
			(
    			type = image
				displayname = "Product Image"
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Product_Description
			(
    			type = textarea
				displayname = "Product Description"
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-2-3d-29"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Retailers
	{
		icon = "users-multiple-11"
		map Retailer_Addresses
		{
			displayName = "Retailer Addresses"
   			hide = true
			show all rows from Add_Retailer    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Email
				Phone_Number as "Phone Number"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Address 
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Link_to_Map,Show_As_Text
	 			)
			)
			options
			(
	 			display field = Address
	 	 		radius = 100 Miles
		 		icon = "shopping-receipt-list-43"
	 		)
			quickview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
		     			title = "Overview"
						fields
						(
							Name
							Address
							Email
							Phone_Number as "Phone Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Email
							Phone_Number as "Phone Number"
							Address
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom Retailers
		{
			displayName = "Retailers"
			show all rows from Add_Retailer    
			(
				Email
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Phone_Number as "Phone Number"
				Address 
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
			)
			options
			(
				icon = "users-2-wc"
	 		)
			quickview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
		     			title = "Overview"
						fields
						(
							Name
							Address
							Email
							Phone_Number as "Phone Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Phone_Number as "Phone Number"
							Email
							Address
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Invoice_Dues
		{
			displayName = "My Invoice Dues"
			show all rows from Add_Invoice  [Payment_Status != "Paid" && Retailer_Email.Email == zoho.loginuserid]  
			(
				Invoice_ID as "Invoice ID"
				Invoice_Date as "Invoice Date"
				Retailer_Email as "Retailer Email"
				Total_Sales as "Total Sales"
				Shipping_and_Handling_Charges as "Shipping and Handling Charges"
				Tax_Amount as "Tax Amount"
				Invoice_Amount as "Net Total"
				Amount_Paid as "Amount Paid"
				Due_Amount as "Due Amount"
				Returned_Date as "Returned Date"
				Payment_Status as "Payment Status"
			)
			group by
			(
				Payment_Status ascending
			)
			options
			(
				icon = "business-money-time"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Invoice_Date as "Invoice Date"
							Invoice_ID as "Invoice ID"
							Retailer_Email as "Retailer Email"
							Invoice_Amount as "Net Total"
							Amount_Paid as "Amount Paid"
							Due_Amount as "Due Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock3
					(
			 			layout type = -2
		     			title = "Invoice Details"
		     			related field = Order_ID
						fields
						(
							Company_Name as "Company Name"
							Order_ID as "Order ID"
							Ordered_Date as "Ordered Date"
							Retailer
							Distributor
						)
					)
					datablock4
					(
			 			layout type = -1
		     			title = "Products"
		     			related field = Products
						fields
						(
							Invoice_ID as "Invoice ID"
							Product_Code as "Product"
							Ordered_Quantity as "Ordered Quantity"
							Delivered_Quantity as "Delivered Quantity"
							Unit_Price as "Selling Unit Price"
							Sub_total as "Sub total"
						)
					)
					datablock5
					(
			 			layout type = -2
		     			title = "Payment Details"
						fields
						(
							Total_Sales as "Total Sales"
							Tax_Amount as "Tax Amount"
							Shipping_and_Handling_Charges as "Shipping and Handling Charges"
							Invoice_Amount as "Net Total"
							Amount_Paid as "Amount Paid"
							Due_Amount as "Due Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Return_Details
		{
			displayName = "My Return Details"
			show all rows from Return_Product  [Returned_By.Email == zoho.loginuserid]  
			(
				Invoice_ID.Order_ID as "Order ID"
				Reason
				Returned_By as "Returned By"
				Qty_Returned as "Qty Returned"
				Invoice_ID as "Invoice ID"
				Warehouse_Code as "Warehouse Code"
				Returned_Date as "Returned Date"
				Product
			)
			options
			(
				icon = "users-2-contacts-44"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Invoice_ID.Order_ID as "Order ID"
							Invoice_ID as "Invoice ID"
							Warehouse_Code as "Warehouse Code"
							Product
							Returned_Date as "Returned Date"
							Qty_Returned as "Qty Returned"
							Reason
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Invoice_ID.Order_ID as "Order ID"
							Invoice_ID as "Invoice ID"
							Returned_By as "Returned By"
							Warehouse_Code as "Warehouse Code"
							Product
							Returned_Date as "Returned Date"
							Qty_Returned as "Qty Returned"
							Reason
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Payments
		{
			displayName = "My Payments"
			show all rows from Add_Payment_Notes  [Retailer_Customer.Email == zoho.loginuserid]  
			(
				Amount
				Payment_Method as "Payment Method"
				Description
				Received_By as "Received By"
				Add_Invoice as "Add Invoice"
				Retailer_Customer as "Retailer/Customer"
				Payment_Date as "Payment Date"
			)
			group by
			(
				Payment_Date ascending
			)
			sort by
			(
				Payment_Date ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Amount
							Payment_Method as "Payment Method"
							Description
							Received_By as "Received By"
							Add_Invoice as "Add Invoice"
							Retailer_Customer as "Retailer/Customer"
							Payment_Date as "Payment Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Amount
							Payment_Method as "Payment Method"
							Description
							Received_By as "Received By"
							Add_Invoice as "Add Invoice"
							Retailer_Customer as "Retailer/Customer"
							Payment_Date as "Payment Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		pivotchart Monthly_Income
		{ 
			displayname = "Monthly Income"
			legend = RIGHT
			report properties
			(
				records displayed = all_records
				allow export = false
				allow drilldown and view underlying data = false
		
			)

			based on Autoview_1617875442341_Add_Payment_Notes
					hide = true
							icon = "shopping-credit-card-in"				show all rows from Add_Payment_Notes
				(
			Payment_Date  as "Payment Date"
			Retailer_Customer  as "Retailer/Customer"
			Add_Invoice  as "Add Invoice"
			Amount 
			Payment_Method  as "Payment Method"
			Received_By  as "Received By"
			Description 
				)
		}
	}
	section Payment_Notes
	{
		displayname= "Payment Notes"
		icon = "shopping-receipt"
		form Add_Payment_Notes
		{
			displayname = "Add Payment Notes"
			success message = "Payment Note Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Payment_Date
			(
    			type = date
				displayname = "Payment Date"
				initial value = "${zoho.currentdate}"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Retailer_Customer
			(
				type = picklist	
				displayname = "Retailer/Customer"
				values  = Add_Retailer.ID
    			displayformat = [" " + Name.first_name + " " + Email]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Add_Invoice
			(
				type = picklist	
				displayname = "Add Invoice"
				values  = Add_Invoice.ID
    			displayformat = [Invoice_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Amount
			(
				type = USD
				format = commadotwestern
	 			row = 1
	 			column = 1   
				width = medium
			)
			Payment_Method
			(
				type = picklist
				displayname = "Payment Method"
				values = {"Cash","Net Banking","UPI Payment"}
				initial value = "Cash"
				sortorder = ascending
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Received_By
			(
				type = picklist	
				displayname = "Received By"
				values  = Add_Staff.ID
    			displayformat = [" " + Name.first_name + "-" + Mail_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-mobile-card"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Payment_Notes
		{
			displayName = "All Payment Notes"
			show all rows from Add_Payment_Notes    
			(
				Amount
				Payment_Method as "Payment Method"
				Description
				Received_By as "Received By"
				Add_Invoice as "Add Invoice"
				Retailer_Customer as "Retailer/Customer"
				Payment_Date as "Payment Date"
			)
			group by
			(
				Payment_Date ascending
			)
			sort by
			(
				Payment_Date ascending
			)
			options
			(
				icon = "business-money-bag"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Amount
							Payment_Method as "Payment Method"
							Description
							Received_By as "Received By"
							Add_Invoice as "Add Invoice"
							Retailer_Customer as "Retailer/Customer"
							Payment_Date as "Payment Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Amount
							Payment_Method as "Payment Method"
							Description
							Received_By as "Received By"
							Add_Invoice as "Add Invoice"
							Retailer_Customer as "Retailer/Customer"
							Payment_Date as "Payment Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Received_Payments
		{
			displayName = "My Received Payments"
			show all rows from Add_Payment_Notes  [Received_By.Mail_ID == zoho.loginuserid]  
			(
				Amount
				Payment_Method as "Payment Method"
				Description
				Received_By as "Received By"
				Add_Invoice as "Add Invoice"
				Retailer_Customer as "Retailer/Customer"
				Payment_Date as "Payment Date"
			)
			group by
			(
				Payment_Date ascending
			)
			sort by
			(
				Payment_Date ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Amount
							Payment_Method as "Payment Method"
							Description
							Received_By as "Received By"
							Add_Invoice as "Add Invoice"
							Retailer_Customer as "Retailer/Customer"
							Payment_Date as "Payment Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Amount
							Payment_Method as "Payment Method"
							Description
							Received_By as "Received By"
							Add_Invoice as "Add Invoice"
							Retailer_Customer as "Retailer/Customer"
							Payment_Date as "Payment Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Company_Configrations
	{
		displayname= "Company Configrations"
		icon = "ui-1-settings-gear-64"
		summary Company_Information
		{
			displayName = "Company Information"
			show all rows from Company_Details    
			(
				Company_Name as "Company Name"
				Warehouse_Details.Warehouse_Code as "Warehouse Details"
				(
					view = Warehouse_Details
				)
				Warehouse_Details.Warehouse_Name as "Warehouse Details.Warehouse_Name"
				Contact_Number as "Contact Number"
				Company_Email as "Company Email"
				Website
				Logo
			)
			options
			(
				display rows = 1
				display records per row = 2
				icon = "travel-info"
			)
			quickview
			(
				layout
				(
		 			type = -2
	     			recordsperrow = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company_Name as "Company Name"
							Warehouse_Details.Warehouse_Code as "Warehouse Details"
							Warehouse_Details.Warehouse_Name as "Warehouse Details.Warehouse_Name"
							Contact_Number as "Contact Number"
							Company_Email as "Company Email"
							Website
							Logo
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company_Name as "Company Name"
							Warehouse_Details.Warehouse_Code as "Warehouse Details"
							Warehouse_Details.Warehouse_Name as "Warehouse Details.Warehouse_Name"
							Contact_Number as "Contact Number"
							Company_Email as "Company Email"
							Website
							Logo
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Company_Details
		{
			displayname = "Company Details"
			success message = "Company Details Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Company_Name
			(
    			type = text
				displayname = "Company Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Company_Address
			(
    			type = address
				displayname = "Company Address"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Contact_Number
			(
				type = number
				displayname = "Contact Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Mobile_Number
			(
    			type = phonenumber
				displayname = "Mobile Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Company_Email
			(
    			type = email
				displayname = "Company Email"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Logo
			(
    			type = image
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Website
			(
    			type = url
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Warehouse_Details
			(
				type = grid
				displayname = "Warehouse Details"
				values  = Add_Warehouse.ID
    			bidirectional = Company_Name
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "social-1-logo-creative-market"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		properties
		{
			total entries
			{
				allowed count = 1
			}
		}
		}
		list Product_Details
		{
			displayName = "Product Details"
			show all rows from Add_Product    
			(
				Product_Name as "Product Name"
				Product_Code as "Product Code"
				Vendor
				Model
				Product_Image as "Product Image"
				Product_Description as "Product Description"
			)
			options
			(
				icon = "users-2-contacts-44"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Product_Name as "Product Name"
							Product_Code as "Product Code"
							Vendor
							Model
							Product_Image as "Product Image"
							Product_Description as "Product Description"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Product_Name as "Product Name"
							Product_Code as "Product Code"
							Vendor
							Model
							Product_Image as "Product Image"
							Product_Description as "Product Description"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		default list All_Production_Batches
		{
			displayName = "All Production Batches"
			show all rows from Add_Production_Batch    
			(
				Batch_Number as "Batch Number"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Batch_Number as "Batch Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Batch_Number as "Batch Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom Vendor_Details
		{
			displayName = "Vendor Details"
			show all rows from Add_Vendor    
			(
				Phone_Number as "Phone Number"
				Company_Name as "Company Name"
				Vendor_Email as "Vendor Email"
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Company_Address  as "Company Address"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
			)
			options
			(
				icon = "users-2-contacts-44"
	 		)
			quickview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
		     			title = "Overview"
						fields
						(
							Name
							Company_Address as "Company Address"
							Phone_Number as "Phone Number"
							Vendor_Email as "Vendor Email"
							Company_Name as "Company Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Phone_Number as "Phone Number"
							Vendor_Email as "Vendor Email"
							Company_Name as "Company Name"
							Company_Address as "Company Address"
						)
					)
					datablock2
					(
			 			layout type = -1
		     			title = "Products Supply"
		     			related field = Products_Supply
						fields
						(
							Product_Image as "Product Image"
							Product_Code as "Product Code"
							Product_Name as "Product Name"
							Model
							Product_Description as "Product Description"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Distributors_Details
		{
			displayName = "Distributor Details"
			show all rows from Add_Staff    
			(
				Mail_ID as "Distributor Email"
			)
			options
			(
				icon = "users-2-contacts-44"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Mail_ID as "Distributor Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Mail_ID as "Distributor Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section List_Items
	{
		displayname= "List Items"
		icon = "shopping-receipt-list-43"
		form Product_Delivery_Details
		{
			displayname = "Product Delivery Details"
			success message = "List Item Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Invoice_ID
			(
				type = picklist	
				displayname = "Invoice ID"
				values  = Add_Invoice.ID
    			bidirectional = Products
    			displayformat = [Invoice_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Warehouse_Code
			(
				type = picklist	
				displayname = "Warehouse Code"
				values  = Add_Warehouse.ID
    			displayformat = [Warehouse_Code]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Product_Code
			(
				type = picklist	
				displayname = "Product Code"
				values  = Add_Product.ID
    			displayformat = [Product_Code + " - " + Product_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Ordered_Quantity
			(
				type = number
				displayname = "Ordered Quantity"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Delivered_Quantity
			(
				type = number
				displayname = "Delivered Quantity"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Unit_Price
			(
				displayname = "Selling Unit Price"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Sub_total
			(
				displayname = "Sub total"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			Outbound_Date
			(
    			type = date
				displayname = "Outbound Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = radiobuttons
				values = {"Requested","Delivered"}
				initial value = "Requested"
				sortorder = ascending
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-2-selection"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_List_Items
		{
			displayName = "All List Items"
   			hide = true
			show all rows from Product_Delivery_Details    
			(
				Warehouse_Code as "Warehouse Code"
				Product_Code as "Product Code"
				Ordered_Quantity as "Ordered Quantity"
				Delivered_Quantity as "Delivered Quantity"
				Unit_Price as "Selling Unit Price"
				Sub_total as "Sub total"
				Invoice_ID as "Invoice ID"
			)
			options
			(
				icon = "design-2-selection"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Warehouse_Code as "Warehouse Code"
							Product_Code as "Product Code"
							Ordered_Quantity as "Ordered Quantity"
							Delivered_Quantity as "Delivered Quantity"
							Unit_Price as "Selling Unit Price"
							Sub_total as "Sub total"
							Invoice_ID as "Invoice ID"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Warehouse_Code as "Warehouse Code"
							Product_Code as "Product Code"
							Ordered_Quantity as "Ordered Quantity"
							Delivered_Quantity as "Delivered Quantity"
							Unit_Price as "Selling Unit Price"
							Sub_total as "Sub total"
							Invoice_ID as "Invoice ID"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Stock_Adjustments
	{
		displayname= "Stock Adjustments"
		icon = "shopping-stock"
		default list All_Stock_Adjustments
		{
			displayName = "All Stock Adjustments"
   			hide = true
			show all rows from Stock_Transfer_Form    
			(
				Transfer_To as "Transfer To"
				Stock_Transfer_ID as "Stock Transfer ID"
			)
			options
			(
				icon = "shopping-stock"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Transfer_To as "Transfer To"
							Stock_Transfer_ID as "Stock Transfer ID"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Transfer_To as "Transfer To"
							Stock_Transfer_ID as "Stock Transfer ID"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Copy_of_Search_Warehouse
	{
		displayname= "Copy of Search Warehouse"
		form Search_Warehouse
		{
			displayname = "Search Warehouse"
			store data in zc = false
			success message = ""
			field alignment = labelinplace
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Warehouse
			(
				type = picklist	
				values  = Add_Warehouse.ID
    			displayformat = [Warehouse_Code + " - " + Warehouse_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = large
			)
	
		}
	}
	section Production_Batches
	{
		displayname= "Production Batches"
		icon = "envir-fuel-electric"
		form Add_Production_Batch
		{
			displayname = "Add Production Batch"
			success message = "Production Batch Added Successfully"
			field alignment = left
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Batch_Number
			(
    			type = text
				displayname = "Batch Number"
    			description
    			[
    				type = help_text
    			 	message = "Enter the product source."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-2-p-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
		 functions
		 {
			 Deluge
			 {
				 string Automation.getCreditStatus(float amnt_to_be_paid, float amnt_paid, string User)
         {
         	status = "";
         	credits = amnt_to_be_paid - amnt_paid;
         	if(input.amnt_to_be_paid == input.amnt_paid)
         	{
         		if(input.User == "Supplier")
         		{
         			status = "Paid";
         		}
         		else
         		{
         			status = "Received";
         		}
         	}
         	else if(input.amnt_to_be_paid > input.amnt_paid)
         	{
         		if(input.User == "Supplier")
         		{
         			status = "Payables";
         		}
         		else if(input.User == "Retailer")
         		{
         			status = "Receivables";
         		}
         	}
         	else
         	{
         		if(input.User == "Supplier")
         		{
         			status = "Receivables";
         		}
         		else if(input.User == "Retailer")
         		{
         			status = "Payables";
         		}
         	}
         	return status;
         }
				 void Custom_actions.addToStock(int recID)
         {
         	openUrl("#Form:Stock?Inventory=" + recID,"popup window");
         }
				 void Custom_actions.approveRequest(New_Order_Request salesReqObj)
         {
         	salesReqObj.Status="Approved";
         	getCompanyDet = Company_Details[ID == salesReqObj.Company_Name];
         	if(salesReqObj.Distributor == null)
         	{
         		salesReqObj.Distributor=Add_Staff[Mail_ID == zoho.loginuserid].ID;
         	}
         	getDistributorDetails = Add_Staff[ID == salesReqObj.Distributor];
         	getRetailerDetails = Add_Retailer[ID == salesReqObj.Retailer];
         	sendmail
         	[
         		from :zoho.loginuserid
         		to :getRetailerDetails.Email
         		subject :"Your Sales Request against Order ID: " + salesReqObj.Order_ID + " is approved."
         		message :("Dear " + getRetailerDetails.Name) + ",<br><br>Greetings from " + getCompanyDet.Company_Name + ".<br> <br>Your Order ID: <b>" + salesReqObj.Order_ID + "</b> is Approved. And you will shortly receive your requested packages.<br><br> Thanks & regards,<br>" + getDistributorDetails.Name
         	]
         }
				 void Custom_actions.deliverOrder(New_Order_Request rec)
         {
         	sales_Det = Add_Invoice[Order_ID == rec.ID];
         	for each  item in sales_Det.Products
         	{
         		item.Status="Delivered";
         		item.Outbound_Date=zoho.currentdate;
         	}
         	openUrl(zoho.appuri + "#Form:Add_Payment?User=Retailer&Retailer_Name=" + rec.Retailer,"same window");
         }
				 void Custom_actions.moveOrderToSales(New_Order_Request salesReqObj)
         {
         	openUrl("#Form:Add_Invoice?Order_ID=" + salesReqObj.ID,"popup window","height=800px,width=1200px");
         }
				 void Custom_actions.orderDecline(int salesRecID)
         {
         	openUrl("#Form:Decline_Form?Order_ID=" + salesRecID,"popup window");
         }
				 void Custom_actions.returnSales(int recID)
         {
         	openUrl("#Form:Return_Product?Invoice_ID=" + recID,"popup window");
         }
				 void Sharing.toRetailer(string contactEmail)
         {
         	thisapp.permissions.assignUserInProfile(contactEmail,"Retailer");
         	appname = zoho.appname;
         	sendmail
         	[
         		from :zoho.adminuserid
         		to :contactEmail
         		subject :"Invitation to access '" + zoho.appname + "' "
         		message :"<div style='width:100%;display:inline-block;box-sizing:border-box;border:1px solid #ddd;'><div style='padding:2%;text-align:center;'>You've been invited to use an application built on Zoho Creator by \"" + zoho.adminuserid + "\".</div><div style='background: #efefef; padding: 20.0px;margin: 20.0px 0 10.0px;text-align:center;'><h2>" + appname.toUpperCase() + "</h2><div style='margin: 20.0px 0 10.0px;'><a style='padding:10px;background-color: rgb(62,149,205);text-decoration: none;color: rgb(255,255,255);font-size: 14.0px;' href='https://creator.zoho.in" + zoho.appuri + "' target='_blank'> Go to application </a></div></div></div>"
         	]
         }
				 void Unsharing.toRetailer(string contactEmail)
         {
         	thisapp.permissions.deleteuser(contactEmail);
         }
			 }
		 }




		workflow
		{
		form
		{
			Run_Scripts_On_Button_Cli as "Run Scripts - On Button Click"
			{
				type =  form
				form = Inventory
				button = Submit
				on click
				{
					actions 
					{
					on click
					(
						getCount = Inventory_stateform[Product_Code == input.Product_Code];
										if(getCount.count() == 0)
										{
											insert into Inventory_stateform
											[
												Added_User=zoho.loginuser
												Product_Code=input.Product_Code
												Qty_Inhand=input.Qty_Inhand
												Qty_Distributed=0
											]
										}
										else
										{
											getCount.Qty_Inhand=getCount.Qty_Inhand + input.Qty_Inhand;
										}
					)
					}
				}
			}
			Run_scripts_while_click_a as "Run scripts - while click a button"
			{
				type =  form
				form = Decline_Form
				button = Submit
				on click
				{
					actions 
					{
					on click
					(
						if(input.Order_ID != null)
										{
											getOrderDet = New_Order_Request[ID == input.Order_ID];
											getOrderDet.Status="Declined";
											getOrderDet.Comments=input.Comments;
											getCompanyDet = Company_Details[ID == getOrderDet.Company_Name];
											if(getOrderDet.Distributor == null)
											{
												getOrderDet.Distributor=Add_Staff[Mail_ID == zoho.loginuserid].ID;
											}
											getDistributorDetails = Add_Staff[ID == getOrderDet.Distributor];
											getRetailerDetails = Add_Retailer[ID == getOrderDet.Retailer];
											sendmail
											[
												from :zoho.loginuserid
												to :getRetailerDetails.Email
												subject :"Your Sales Request against Order ID: " + getOrderDet.Order_ID + " is Declined."
												message :("Hi " + getRetailerDetails.Name) + ", <br><br>Greetings from " + getCompanyDet.Company_Name + ". <br><br>We Regret to Inform that your Order ID: <b>" + getOrderDet.Order_ID + "</b> is Declined due to Following Reasons, <br><br>" + getOrderDet.Comments + "<br><br> And you will shortly received your requested packages. <br><br> Thanks & regards,<br>" + getDistributorDetails.Name
											]
										}
					)
					}
				}
			}
			Run_scrips_while_click_a_ as "Run scrips while click a button"
			{
				type =  form
				form = Stock
				button = Submit
				on click
				{
					actions 
					{
					on click
					(
						InventoryDetails = Inventory_stateform[ID == input.Inventory];
										distributionQty = input.Warehouse_Code.size() * input.Quantity;
										if(InventoryDetails.Qty_Inhand - distributionQty < 0)
										{
											alert "Distribution Limit Exceeds the Stock in Qty.";
										}
										else
										{
											for each  eachWarehouse in input.Warehouse_Code
											{
												getStockDetails = Add_Stock[Product_Code == input.Product_Code && Warehouse_Code == eachWarehouse];
												if(getStockDetails.count() == 0)
												{
													recID = insert into Add_Stock
													[
														Added_User=zoho.loginuser
														Product_Code=input.Product_Code
														Warehouse_Code=eachWarehouse
														Stock_Inflow=input.Quantity
														Stock_Outflow=0
														Source=input.Source
														Availability=input.Availability
														Inventory=input.Inventory
													];
													getStockDetails = Add_Stock[ID == recID];
												}
												else
												{
													getStockDetails.Stock_Inflow=getStockDetails.Stock_Inflow + input.Quantity;
												}
												oldVal = ifnull(InventoryDetails.Qty_Distributed,0);
												InventoryDetails.Qty_Distributed=oldVal + input.Quantity;
												InventoryDetails.Qty_Inhand=InventoryDetails.Qty_Inhand - input.Quantity;
											}
										}
										info "Stock Added to Warehouse Successfully!";
										openUrl("#Report:Inventory_Details","same window");
					)
					}
				}
			}
			Run_Scripts_While_Adding_ as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Stock
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Stock_Outflow;
										hide Inventory;
										disable Inventory;
										hide Availability;
										if(input.Product_Code != null)
										{
											disable Product_Code;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_1 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Stock
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											InventoryDetails = Inventory_stateform[Product_Code == input.Product_Code];
										oldVal = ifnull(InventoryDetails.Qty_Distributed,0);
										InventoryDetails.Qty_Distributed=oldVal + input.Stock_Inflow;
										InventoryDetails.Qty_Inhand=InventoryDetails.Qty_Inhand - input.Stock_Inflow;
										openUrl("#Script:dialog.close","same window");
						)
					}
				}

			}
			Run_Scripts_While_Adding_2 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Stock
				record event = on add

				on user input of Product_Code
				{
					actions 
					{
						custom deluge script
						(
											if(input.Inventory == null)
										{
											getInventoryID = Inventory_stateform[Product_Code == input.Product_Code].ID;
											input.Inventory = getInventoryID;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_3 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Inventory_stateform
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Qty_Distributed;
										hide Stocks;
										openUrl("#Form:Inventory","same window");
						)
					}
				}

			}
			Run_Scripts_While_Deletin as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Inventory_stateform
				record event = on delete

				on validate
				{
					actions 
					{
						custom deluge script
						(
											delete from Add_Stock[Inventory == input.ID];
						)
					}
				}

			}
			Run_Scripts_While_Adding_9 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Invoice
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Products.Status;
										input.Invoice_Date = today;
										disable Products.Sub_total;
										disable Total_Sales;
										disable Invoice_Amount;
										disable Products.Ordered_Quantity;
										input.Company_Name = Company_Details[ID != 0].ID;
										hide Company_Name;
										hide Returned_Date;
										disable Retailer_Email;
										hide Due_Amount;
										disable Due_Amount;
										disable Retailer_Name;
										hide Products.Outbound_Date;
										if(input.Order_ID != null)
										{
											disable Order_ID;
											getRetaileDetails = New_Order_Request[ID == input.Order_ID];
											input.Products.clear();
											rows = Collection();
											for each  item in getRetaileDetails.Products
											{
												row_item = Add_Invoice.Products();
												row_item.Product_Code=item.Product;
												row_item.Delivered_Quantity=item.Quantity;
												row_item.Ordered_Quantity=item.Quantity;
												row_item.Unit_Price=row_item.Product_Code.Product_Selling_Price;
												rows.insert(row_item);
											}
											input.Products.insert(rows);
											totalSales = 0;
											for each  row_ in input.Products
											{
												row_.Sub_total=row_.Delivered_Quantity * row_.Unit_Price;
												totalSales = totalSales + row_.Sub_total;
											}
											input.Total_Sales = totalSales;
											input.Invoice_Amount = totalSales;
											input.Retailer_Email = getRetaileDetails.Retailer;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_11 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Invoice
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Invoice_Date > today)
										{
											alert "Please Check the Date";
											cancel submit;
										}
										// updating in stocks
										for each  eachrow in Products
										{
											if(eachrow.Delivered_Quantity <= 0)
											{
												alert "Please Enter atleast 1 quantity";
												cancel submit;
											}
											getStocks = Add_Stock[Warehouse_Code == eachrow.Warehouse_Code && Product_Code == eachrow.Product_Code];
											getProdDetails = Add_Product[ID == eachrow.Product_Code];
											if(getStocks.count() != 0)
											{
												if(getStocks.Availability == "In Stock")
												{
													getStocks.Stock_Inflow=getStocks.Stock_Inflow - eachrow.Delivered_Quantity;
													getStocks.Stock_Outflow=getStocks.Stock_Outflow + eachrow.Delivered_Quantity;
												}
												else
												{
													alert " The " + getProdDetails.Product_Name + " is Out of Stock, Please add stock";
													cancel submit;
												}
											}
											else
											{
												alert " The Product " + getProdDetails.Product_Name + " is not Available in the Stocks, Please add stoc";
												cancel submit;
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_13 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Invoice
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											amnt_to_be_Paid = input.Invoice_Amount + input.Due_Amount;
										amnt_received = input.Amount_Paid;
										curCredit = amnt_to_be_Paid - amnt_received;
										status = thisapp.Automation.getCreditStatus(amnt_to_be_Paid,amnt_received,"Retailer");
										getRetailerDet = Add_Retailer[ID == input.Retailer_Email];
										getOrderDetails = New_Order_Request[ID == input.Order_ID];
										getOrderDetails.Status="Moved To Sales";
										if(Amount_Paid > 0)
										{
											if(input.Amount_Paid == input.Invoice_Amount)
											{
												status = "Paid";
											}
											if(input.Amount_Paid < input.Invoice_Amount)
											{
												status = "Partially Paid";
											}
											pay_note = insert into Add_Payment_Notes
											[
												Added_User=zoho.loginuser
												Payment_Date=input.Invoice_Date
												Add_Invoice=input.ID
												Retailer_Customer=input.Retailer_Email
												Received_By=input.Received_By
												Payment_Method=input.Payment_Method
												Amount=input.Amount_Paid
											];
										}
										sendmail
										[
											from :zoho.adminuserid
											to :getRetailerDet.Email
											bcc :zoho.adminuserid
											subject :"Invoice for Order - " + getOrderDetails.Order_ID + " is generated - #" + input.Invoice_ID
											message :(("Dear " + getRetailerDet.Name) + ",<br><br>Your Package is Delivered  to you for the <b> Order ID : " + getOrderDetails.Order_ID + "</b> Ordered on " + getOrderDetails.Ordered_Date + ".<br><br> Your Order is Delivered to the Address, <br>" + getRetailerDet.Address) + "<br><br> If you find, any damage or defect in our product, click this <a href='https://app.zohocreator.in" + zoho.appuri + "#Form:Return_Product?Invoice_ID=" + input.ID + "'>link</a> to return the product <br><br> Your Invoice For the Sales Order <b>#" + input.Invoice_ID + "</b> has been generated and attached with this email. please find the attachment. <br><br>Thanks and regards,<br>" + zoho.adminuser
										]
										openUrl("#Report:Approved_Orders","same window");
						)
					}
				}

			}
			Run_Scripts_While_Editing as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Invoice
				record event = on edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											disable Retailer_Name;
										disable Products.Sub_total;
										disable Total_Sales;
										disable Invoice_Amount;
										hide Returned_Date;
										disable Retailer_Email;
										disable Due_Amount;
										disable Order_ID;
										disable Retailer_Name;
										disable Company_Name;
										input.Retailer_Name = Add_Retailer[ID == input.Retailer_Email].Name;
										disable Products.Product_Code;
						)
					}
				}

			}
			Run_Scripts_While_Editing2 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Invoice
				record event = on edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Invoice_Date > today)
										{
											alert "Please Check the Date";
											cancel submit;
										}
										for each  eachrow in Products
										{
											getStocks = Add_Stock[Warehouse_Code == eachrow.Warehouse_Code && Product_Code == eachrow.Product_Code];
											getProdDetails = Add_Product[ID == eachrow.Product_Code];
											if(getStocks.count() != 0)
											{
												if(getStocks.Availability == "In Stock")
												{
													getStocks.Stock_Inflow=getStocks.Stock_Inflow - eachrow.Delivered_Quantity;
													getStocks.Stock_Outflow=getStocks.Stock_Outflow + eachrow.Delivered_Quantity;
												}
												else
												{
													openUrl("#Form:Add_Purchased_Invoice","new window");
													alert " The " + getProdDetails.Product_Name + " is Out of Stock, Please Purchase from the supplier";
													cancel submit;
												}
											}
											else
											{
												openUrl("#Form:Add_Purchased_Invoice","new window");
												alert " The Product " + getProdDetails.Product_Name + " is not Available in the Stocks, Please Purchase from the supplier";
												cancel submit;
											}
										}
										getRetailerDet = Add_Retailer[ID == input.Retailer_Email];
										getOrderDetails = New_Order_Request[ID == input.Order_ID];
										getOrderDetails.Status="Delivered";
						)
					}
				}

			}
			Run_Scripts_On_Always as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Invoice
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Payment_Status;
						hide Tax_Amount;
					}
				}

			}
			Run_Scripts_On_Always3 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Invoice
				record event = on add or edit

				on user input of Tax_Percent
				{
					actions 
					{
						custom deluge script
						(
											shCharge = ifnull(input.Shipping_and_Handling_Charges,0.0);
										salesAmountVar = ifnull(input.Total_Sales,0.0);
										sum = shCharge + salesAmountVar;
										if(input.Tax_Percent != null && input.Tax_Percent > 0 && sum != null && sum > 0)
										{
											input.Tax_Amount = sum * input.Tax_Percent / 100;
											input.Invoice_Amount = sum + input.Tax_Amount;
											disable Tax_Amount;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always7 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Invoice
				record event = on add or edit

				on user input of Order_ID
				{
					actions 
					{
						custom deluge script
						(
											if(input.Order_ID != null)
										{
											getSalesReqDet = New_Order_Request[ID == input.Order_ID];
											input.Products.clear();
											rows = Collection();
											for each  item in getSalesReqDet.Products
											{
												row_item = Add_Invoice.Products();
												row_item.Product_Code=item.Product;
												row_item.Delivered_Quantity=item.Quantity;
												row_item.Ordered_Quantity=item.Quantity;
												row_item.Unit_Price=row_item.Product_Code.Product_Selling_Price;
												rows.insert(row_item);
											}
											input.Products.insert(rows);
											totalSales = 0;
											for each  row_ in input.Products
											{
												row_.Sub_total=row_.Delivered_Quantity * row_.Unit_Price;
												totalSales = totalSales + row_.Sub_total;
											}
											input.Total_Sales = totalSales;
											input.Retailer_Email = getSalesReqDet.Retailer;
										}
										else
										{
											input.Due_Amount = 0.0;
											input.Retailer_Email = null;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always8 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Invoice
				record event = on add or edit

				on user input of Products.Product_Code
				{
					actions 
					{
						custom deluge script
						(
											if(row.Product_Code != null)
										{
											orderRequest = New_Order_Request[ID == input.Order_ID];
											for each  eachRow in orderRequest.Products
											{
												if(row.Product_Code == eachRow.Product)
												{
													row.Ordered_Quantity=eachRow.Quantity.toLong();
												}
											}
										}
										else
										{
											row.Ordered_Quantity=null;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always9 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Invoice
				record event = on add or edit

				on user input of Invoice_Date
				{
					actions 
					{
						custom deluge script
						(
											if(input.Invoice_Date > zoho.currentdate)
										{
											alert "Sorry, Future Dates are not allowed";
											input.Invoice_Date = null;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always10 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Invoice
				record event = on add or edit

				on user input of Products.Warehouse_Code
				{
					actions 
					{
						custom deluge script
						(
											if(input.Order_ID == null)
										{
											if(row.Warehouse_Code != null)
											{
												prod_inStock = List();
												getOrderDetails = New_Order_Request[ID == input.Order_ID];
												for each  eachItem in getOrderDetails.Products
												{
													if(Add_Stock[Warehouse_Code == row.Warehouse_Code && Availability == "In Stock" && Product_Code == eachItem.Product && Stock_Inflow >= eachItem.Quantity].count() != 0)
													{
														prod_inStock.add(eachItem.Product);
													}
												}
												for each  eachRow in input.Products
												{
													prod_inStock.removeElement(eachRow.Product_Code);
												}
												row.Product_Code:ui.add(prod_inStock);
											}
											else
											{
												row.Product_Code=null;
												row.Ordered_Quantity=null;
												row.Delivered_Quantity=null;
												row.Unit_Price=null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always11 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Invoice
				record event = on add or edit

				on user input of Products.Delivered_Quantity
				{
					actions 
					{
						custom deluge script
						(
											if(row.Product_Code != null)
										{
											getQty = Add_Stock[Warehouse_Code == row.Warehouse_Code && Product_Code == row.Product_Code];
											if(getQty.Stock_Inflow >= row.Ordered_Quantity)
											{
												if(getQty.Stock_Inflow < row.Delivered_Quantity)
												{
													alert "Entered Qty. Limit Exceeds the Stocks Available";
													row.Delivered_Quantity=null;
												}
												else if(row.Delivered_Quantity > row.Ordered_Quantity)
												{
													alert "Entered Quantity exceeds Ordered Quantity";
													row.Delivered_Quantity=null;
												}
												else if(row.Unit_Price != null && row.Delivered_Quantity != null)
												{
													row.Sub_total=row.Unit_Price * row.Delivered_Quantity;
													sum = 0.0;
													for each  eachrow in Products
													{
														if(eachrow.Sub_total != null)
														{
															sum = sum + eachrow.Sub_total;
														}
													}
													input.Total_Sales = sum;
													shCharge = ifnull(input.Shipping_and_Handling_Charges,0.0);
													salesAmountVar = ifnull(input.Total_Sales,0.0);
													amnt_to_be_paid = shCharge + salesAmountVar;
													taxAmnt = 0.0;
													if(amnt_to_be_paid != null && amnt_to_be_paid > 0 && input.Tax_Percent != null && input.Tax_Percent > 0)
													{
														taxAmnt = amnt_to_be_paid * input.Tax_Percent / 100;
													}
													input.Tax_Amount = taxAmnt;
													input.Invoice_Amount = amnt_to_be_paid + taxAmnt;
												}
											}
											else
											{
												alert "Ordered Qty. Exceeds the Stocks Available";
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always12 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Invoice
				record event = on add or edit

				on user input of Retailer_Email
				{
					actions 
					{
						custom deluge script
						(
											input.Retailer_Name = Add_Retailer[ID == input.Retailer_Email].Name;
						)
					}
				}

			}
			Run_Scripts_On_Always13 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Invoice
				record event = on add or edit

				on user input of Shipping_and_Handling_Charges
				{
					actions 
					{
						custom deluge script
						(
											shCharge = ifnull(input.Shipping_and_Handling_Charges,0.0);
										salesAmountVar = ifnull(input.Total_Sales,0.0);
										sum = shCharge + salesAmountVar;
										taxAmnt = 0.0;
										if(sum != null && sum > 0 && input.Tax_Percent != null && input.Tax_Percent > 0)
										{
											taxAmnt = sum * input.Tax_Percent / 100;
										}
										input.Tax_Amount = taxAmnt;
										input.Invoice_Amount = sum + taxAmnt;
						)
					}
				}

			}
			Run_Scripts_On_Always14 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Invoice
				record event = on add or edit

				on user input of Products.Unit_Price
				{
					actions 
					{
						custom deluge script
						(
											if(row.Unit_Price != null && row.Delivered_Quantity != null)
										{
											row.Sub_total=row.Unit_Price * row.Delivered_Quantity;
											sum = 0.0;
											for each  eachrow in Products
											{
												if(eachrow.Sub_total != null)
												{
													sum = sum + eachrow.Sub_total;
												}
											}
											input.Total_Sales = sum;
											shCharge = ifnull(input.Shipping_and_Handling_Charges,0.0);
											salesAmountVar = ifnull(input.Total_Sales,0.0);
											amnt_to_be_paid = shCharge + salesAmountVar;
											taxAmnt = 0.0;
											if(amnt_to_be_paid != null && amnt_to_be_paid > 0 && input.Tax_Percent != null && input.Tax_Percent > 0)
											{
												taxAmnt = amnt_to_be_paid * input.Tax_Percent / 100;
											}
											input.Tax_Amount = taxAmnt;
											input.Invoice_Amount = amnt_to_be_paid + taxAmnt;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always15 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Invoice
				record event = on add or edit

				on add row of Products
				{
					actions 
					{
						custom deluge script
						(
											getOrderDet = New_Order_Request[ID == input.Order_ID];
										tempWarehouseList = List();
										str = "";
										orderedProducts = List();
										for each  eachItem in getOrderDet.Products
										{
											orderedProducts.add(eachItem.Product);
										}
										for each  eachRow in Products
										{
											if(orderedProducts.contains(eachRow.Product_Code))
											{
												orderedProducts.removeElement(eachRow.Product_Code);
											}
										}
										for each  eachItem in getOrderDet.Products
										{
											if(orderedProducts.contains(eachItem.Product))
											{
												var = Add_Stock[Product_Code == eachItem.Product && Stock_Inflow >= eachItem.Quantity].Warehouse_Code.getAll();
												if(var.size() != 0)
												{
													str = var.toString() + "," + str;
												}
											}
										}
										tempWarehouseList = str.removeLastOccurence(",").toList();
										tempWarehouseList = tempWarehouseList.distinct();
										row.Warehouse_Code:ui.add(tempWarehouseList);
										clear row.Product_Code;
						)
					}
				}

			}
			Run_Scripts_On_Always16 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Invoice
				record event = on add or edit

				on delete row of Products
				{
					actions 
					{
						custom deluge script
						(
											if(row.Sub_total != null)
										{
											input.Total_Sales = input.Total_Sales - row.Sub_total;
											taxAmnt = 0.0;
											if(input.Tax_Percent != null && input.Tax_Percent > 0 && input.Total_Sales > 0)
											{
												taxAmnt = input.Total_Sales * input.Tax_Percent / 100;
											}
											input.Invoice_Amount = input.Total_Sales + taxAmnt;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_14 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Vendor
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Products_Supply;
						)
					}
				}

			}
			Run_Scripts_While_Adding_16 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Vendor
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(Name.first_name.isEmpty())
										{
											alert "Please Enter your first name";
											cancel submit;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_17 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Inventory
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Qty_Distributed;
										hide Stocks;
						)
					}
				}

			}
			Run_Scripts_while_Adding_1 as "Run Scripts - while Adding a Record"
			{
				type =  form
				form = Stock
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Availability;
										if(input.Inventory != null)
										{
											hide Inventory;
											disable Inventory;
											input.Product_Code = Inventory_stateform[ID == input.Inventory].Product_Code;
											if(input.Product_Code != null)
											{
												disable Product_Code;
											}
										}
										else
										{
											hide Inventory;
											disable Inventory;
											getProducts = Inventory_stateform[ID != 0 && Qty_Inhand != 0].Product_Code.getAll();
											input.Product_Code:ui.add(getProducts);
										}
						)
					}
				}

			}
			Run_Scripts_while_Adding_2 as "Run Scripts - while Adding a Record"
			{
				type =  form
				form = Stock
				record event = on add

				on user input of Product_Code
				{
					actions 
					{
						custom deluge script
						(
											if(input.Inventory == null)
										{
											getInventoryID = Inventory_stateform[Product_Code == input.Product_Code].ID;
											input.Inventory = getInventoryID;
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_18 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = New_Order_Request
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Ordered_Date = zoho.currenttime;
										getCompany = Company_Details[ID != 0];
										input.Company_Name = getCompany.ID;
										hide Company_Name;
										hide Comments;
										hide Distributor;
										hide Status;
										if(zoho.loginuserid != zoho.adminuserid)
										{
											getRetailerDet = Add_Retailer[Email == zoho.loginuserid];
											if(getRetailerDet.count() != 0)
											{
												input.Retailer = getRetailerDet.ID;
												disable Retailer;
											}
											else
											{
												distributor = Add_Staff[Mail_ID == zoho.loginuserid];
												if(distributor.count() != 0)
												{
													input.Distributor = distributor.ID;
												}
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_19 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = New_Order_Request
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											for each  eachRec in Products
										{
											if(eachRec.Quantity <= 0)
											{
												alert "Please enter atleast 1 quantity";
												cancel submit;
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_20 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = New_Order_Request
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											success message "Your Sales Request Number is " + input.Order_ID;
										getRetailerDetails = Add_Retailer[ID == input.Retailer];
										getCompanyDet = Company_Details[ID == input.Company_Name];
										getDistributorDetails = Add_Staff[ID == input.Distributor];
										sendmail
										[
											from :zoho.loginuserid
											to :getRetailerDetails.Email
											subject :"Your Order ID :" + input.Order_ID + " is taken."
											message :(("<di>Dear " + getRetailerDetails.Name) + ", </div> <div>Greetings from " + getCompanyDet.Company_Name + ". Thanks for chosing our service. </div><div>Your Order ID: <b>" + input.Order_ID + "</b> is taken and is yet to Approve. Approval of your request is based on the stock avilability is subjected to change at any time.</div> <div> Click this <a href='https://app.zohocreator.in" + zoho.appuri + "#Report:My_Orders'>link</a> to see your request. </div><div> Thanks & regards,</div><div>" + getDistributorDetails.Name) + "</div>"
										]
										sendmail
										[
											from :getRetailerDetails.Email
											to :zoho.adminuserid
											subject :"New Order Request " + input.Order_ID
											message :("<div> Dear Admin,</div> <div> You have received a new orer request from " + getRetailerDetails.Name) + "</div> against Order ID: " + input.Order_ID + " </div> <div> Click this <a href='https://app.zohocreator.in" + zoho.appuri + "#Report:Pending_Orders'>link</a> to view the New Request</div>"
										]
						)
					}
				}

			}
			Run_Scripts_On_Always17 as "Run Scripts - On Always"
			{
				type =  form
				form = New_Order_Request
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Sales_Invoice;
					}
				}

			}
			Run_Scripts_On_Always18 as "Run Scripts - On Always"
			{
				type =  form
				form = New_Order_Request
				record event = on add or edit

				on user input of Products.Product
				{
					actions 
					{
						custom deluge script
						(
											getProd = Add_Product[ID == row.Product];
										if(getProd.count() != 0)
										{
											cnt = 0;
											for each  eachrec in Products
											{
												if(eachrec.Product == row.Product)
												{
													cnt = cnt + 1;
												}
											}
											if(cnt > 1)
											{
												alert "This Product is already exist in the list";
												row.Product=null;
											}
										}
						)
					}
				}

			}
			Run_Scripts_On_Always19 as "Run Scripts - On Always"
			{
				type =  form
				form = New_Order_Request
				record event = on add or edit

				on user input of Ordered_Date
				{
					actions 
					{
						custom deluge script
						(
											if(input.Ordered_Date > zoho.currentdate)
										{
											alert "Sorry, Future Dates are not allowed";
											input.Ordered_Date = null;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always20 as "Run Scripts - On Always"
			{
				type =  form
				form = New_Order_Request
				record event = on add or edit

				on user input of Expected_Delivery_Date
				{
					actions 
					{
						custom deluge script
						(
											if(input.Expected_Delivery_Date < zoho.currentdate)
										{
											alert "Sorry, Past Dates are not allowed";
											input.Expected_Delivery_Date = null;
										}
						)
					}
				}

			}
			Run_Scripts_On_Always21 as "Run Scripts - On Always"
			{
				type =  form
				form = New_Order_Request
				record event = on add or edit

				on user input of Products.Quantity
				{
					actions 
					{
						custom deluge script
						(
											/* if ((row.Unit_Price  !=  null)  &&  (row.Quantity  !=  null))
																																																																																{
																																																																																   row.Subtotal = (row.Unit_Price  *  row.Quantity);
																																																																																   sum = 0.0;
																																																																																   for each eachrow in List_Item
																																																																																   {
																																																																																       if (eachrow.Subtotal  !=  null)
																																																																																       {
																																																																																           sum = (sum  +  eachrow.Subtotal);
																																																																																       }
																																																																																   }
																																																																																   input.Purchased_Amount = sum;
																																																																																}
																																																																																*/
						)
					}
				}

			}
			Run_Scripts_On_Always22 as "Run Scripts - On Always"
			{
				type =  form
				form = New_Order_Request
				record event = on add or edit

				on add row of Products
				{
					actions 
					{
						custom deluge script
						(
											getSupplierProducts = Add_Product[ID != 0].ID.getAll();
										tempList = List:Int();
										for each  rec in Products
										{
											if(rec.Product != null)
											{
												tempList.add(rec.Product);
												tempList = tempList.distinct();
											}
										}
										getSupplierProducts.removeall(tempList);
										row.Product:ui.add(getSupplierProducts);
						)
					}
				}

			}
			Run_Scripts_While_Adding_21 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Return_Product
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(input.Invoice_ID != null)
										{
											disable Invoice_ID;
											getSalesDetails = Add_Invoice[ID == input.Invoice_ID];
											productList = List();
											for each  eachRow in getSalesDetails.Products
											{
												getReturnDetails = Return_Product[Invoice_ID == input.Invoice_ID && Product == eachRow.Product_Code].sum(Qty_Returned);
												if(getReturnDetails < eachRow.Delivered_Quantity)
												{
													productList.add(eachRow.Product_Code);
												}
											}
											input.Product:ui.add(productList);
											input.Returned_By = Add_Retailer[ID == getSalesDetails.Retailer_Email].ID;
											disable Returned_By;
											if(productList.size() == 0)
											{
												alert "There is no Available Qty. for this Invoice ID";
											}
										}
										hide Warehouse_Code;
										input.Returned_Date = zoho.currenttime;
						)
					}
				}

			}
			Run_Scripts_While_Adding_22 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Return_Product
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											getProductSales = Product_Delivery_Details[Invoice_ID == input.Invoice_ID && Product_Code == input.Product];
										input.Warehouse_Code = getProductSales.Warehouse_Code;
										if(input.Qty_Returned <= 0)
										{
											alert "Enter atleast 1 Quantity";
											cancel submit;
										}
										gettotalQty = Add_Invoice[ID == input.Invoice_ID];
										for each  eachrow in gettotalQty.Products
										{
											if(eachrow.Product_Code == input.Product)
											{
												totalReturnedQty = if(Return_Product[Invoice_ID == input.Invoice_ID && Product == input.Product && Warehouse_Code == Warehouse_Code].sum(Qty_Returned) == 0,0,Return_Product[Invoice_ID == input.Invoice_ID && Product == input.Product && Warehouse_Code == Warehouse_Code].sum(Qty_Returned));
												if(input.Qty_Returned + totalReturnedQty > eachrow.Delivered_Quantity)
												{
													alert "Quantity you entered exceeds the delivered quantity! ";
													cancel submit;
												}
												else
												{
													getStockDetails = Add_Stock[Warehouse_Code == input.Warehouse_Code && Product_Code == input.Product];
													getStockDetails.Stock_Inflow=getStockDetails.Stock_Inflow + input.Qty_Returned;
													getStockDetails.Stock_Outflow=getStockDetails.Stock_Outflow - input.Qty_Returned;
													if(getStockDetails.Availability == "Out of Stock")
													{
														getStockDetails.Availability="In Stock";
													}
												}
											}
										}
						)
					}
				}

			}
			Run_Scripts_While_Adding_23 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Return_Product
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											getLoginuserDet = Add_Retailer[Email == zoho.loginuserid];
										if(getLoginuserDet.count() != 0)
										{
											openUrl("#Report:My_Sales_Invoice","same window");
										}
										else
										{
											openUrl("#Report:Sales_Details","same window");
										}
						)
					}
				}

			}
			Run_Scripts_On_Always23 as "Run Scripts - On Always"
			{
				type =  form
				form = Return_Product
				record event = on add or edit

				on user input of Invoice_ID
				{
					actions 
					{
						custom deluge script
						(
											if(input.Invoice_ID != null)
										{
											getSalesDetails = Add_Invoice[ID == input.Invoice_ID];
											productList = List();
											for each  eachRow in getSalesDetails.Products
											{
												qtyReturned = ifnull(Return_Product[Invoice_ID == input.Invoice_ID && Product == eachRow.Product_Code].sum(Qty_Returned),0);
												if(eachRow.Delivered_Quantity > qtyReturned)
												{
													productList.add(eachRow.Product_Code);
												}
											}
											input.Returned_By = Add_Retailer[ID == getSalesDetails.Retailer_Email].ID;
											disable Returned_By;
											if(productList.size() == 0)
											{
												alert "There is no Available Qty. for this Invoice ID";
											}
											input.Product:ui.add(productList);
										}
										input.Returned_Date = zoho.currenttime;
						)
					}
				}

			}
			Run_Scripts_While_Adding_24 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Company_Details
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											openUrl("#Form:Add_Staff","same window");
						)
					}
				}

			}
			Run_scripts_While_adding_1 as "Run scripts - While adding a record"
			{
				type =  form
				form = Add_Product
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											companyDet = Company_Details[ID != 0];
										getAdminDet = Add_Staff[Mail_ID == zoho.adminuserid];
										for each  eachRetailer in Add_Retailer[ID != 0]
										{
											sendmail
											[
												from :zoho.adminuserid
												to :eachRetailer.Email
												subject :"A New Produt Added "
												message :("Hi " + eachRetailer.Name) + ",<br><br> Greetings from " + companyDet.Company_Name + ", We are glad to bring you our new product <b>" + input.Product_Name + "</b> on this list to the service.<br><br>Regards <br> " + companyDet.Company_Name
											]
										}
						)
					}
				}

			}
			Run_scripts_while_loading1 as "Run scripts - while loading a form"
			{
				type =  form
				form = Decline_Form
				record event = on add

				field rules
				{
					actions  (Order_ID is not null)
					{
						disable Order_ID;
					}
				}

			}
			Run_Scripts_On_Always24 as "Run Scripts On Always"
			{
				type =  form
				form = Stock_Transfer_Form
				record event = on add

				field rules
				{
					actions  (Transfer_To is null)
					{
					hide add row of Warehouse_Product_Details;
					}
				}

			}
			Run_Scripts_On_Always25 as "Run Scripts On Always"
			{
				type =  form
				form = Stock_Transfer_Form
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Warehouse_Product_Details.Transfer_To;
										hide Warehouse_Product_Details.Status;
						)
					}
				}

			}
			Run_Scripts_On_Always26 as "Run Scripts On Always"
			{
				type =  form
				form = Stock_Transfer_Form
				record event = on add

				on user input of Warehouse_Product_Details.Quantity
				{
					actions 
					{
						custom deluge script
						(
											warehouses = Add_Stock[Product_Code == row.Product && Inventory > row.Quantity].Warehouse_Code.getAll();
										row.Transfer_From:ui.add(warehouses);
						)
					}
				}

			}
			Run_Scripts_On_Always27 as "Run Scripts On Always"
			{
				type =  form
				form = Stock_Transfer_Form
				record event = on add

				on add row of Warehouse_Product_Details
				{
					actions 
					{
						custom deluge script
						(
											row.Transfer_To=input.Transfer_To;
						)
					}
				}

			}
			Run_Scripts_While_delete_1 as "Run Scripts - While delete a record"
			{
				type =  form
				form = Add_Invoice
				record event = on delete

				on success
				{
					actions 
					{
						custom deluge script
						(
											delete from Return_Product[Invoice_ID == input.ID];
										for each  eachrec in input.Products
										{
											getStocks = Add_Stock[Warehouse_Code == eachrec.Warehouse_Code && Product_Code == eachrec.Product_Code];
											getStocks.Stock_Inflow=getStocks.Stock_Inflow + eachrec.Delivered_Quantity;
											getStocks.Stock_Outflow=getStocks.Stock_Outflow - eachrec.Delivered_Quantity;
										}
						)
					}
				}

			}
			Run_Scripts_on_always1 as "Run Scripts on always"
			{
				type =  form
				form = Search_Warehouse
				record event = on add

				on user input of Warehouse
				{
					actions 
					{
						custom deluge script
						(
											if(input.Warehouse != null)
										{
											openUrl(zoho.appuri + "#Page:Warehouse_View?warehouse_code=" + input.Warehouse.Warehouse_Code,"same window");
										}
						)
					}
				}

			}
			Run_Scripts_On_Always28 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Staff
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											get_admin_det = Add_Staff[Mail_ID == zoho.adminuserid];
										if(get_admin_det.count() == 0)
										{
											input.Designation = "Manager";
											disable Designation;
											input.Mail_ID = zoho.adminuserid;
											disable Mail_ID;
											alert "Add your self as Manager to proceed";
										}
						)
					}
				}

			}
			Run_Scripts_On_Always29 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Staff
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(input.Mail_ID == zoho.adminuserid)
										{
											openUrl(zoho.appuri + "#Form:Company_Details","same window");
										}
										if(Designation == "Distributor")
										{
											thisapp.permissions.assignUserInProfile(input.Mail_ID,"Distributor");
										}
										else
										{
											thisapp.permissions.assignUserInProfile(input.Mail_ID,"Warehouse Keeper");
										}
						)
					}
				}

			}
			Run_on_always1 as "Run on always"
			{
				type =  form
				form = Add_Retailer
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											thisapp.portal.assignUserInProfile(input.Email,"Retailer");
						)
					}
				}

			}
			Run_Scripts_When_adding_a1 as "Run Scripts - When adding a record"
			{
				type =  form
				form = Add_Payment_Notes
				record event = on add

				field rules
				{
					actions  (Retailer_Customer is null)
					{
						hide Add_Invoice;
					}
				}

			}
			Run_Scripts_When_adding_a2 as "Run Scripts - When adding a record"
			{
				type =  form
				form = Add_Payment_Notes
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											invoice_det = Add_Invoice[ID == input.Add_Invoice];
										invoice_det.Amount_Paid=invoice_det.Amount_Paid + input.Amount;
										if(invoice_det.Amount_Paid >= invoice_det.Total_Sales)
										{
											invoice_det.Payment_Status="Paid";
										}
						)
					}
				}

			}
			Run_Scripts_When_adding_a3 as "Run Scripts - When adding a record"
			{
				type =  form
				form = Add_Payment_Notes
				record event = on add

				on user input of Retailer_Customer
				{
					actions 
					{
						custom deluge script
						(
											invoices = Add_Invoice[Retailer_Email == input.Retailer_Customer && Payment_Status != "Paid"].ID.getAll();
										input.Add_Invoice:ui.add(invoices);
						)
					}
				}

			}
		}





		functions
		{
			Add_to_Warehouse_Stock as "Add to Warehouse Stock"
			{
				type =  functions
				form = Inventory_stateform
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.Custom_actions.addToStock(ID);
					}
				}
			}
			Approve as "Approve"
			{
				type =  functions
				form = New_Order_Request
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.Custom_actions.approveRequest(New_Order_Request);
					}
				}
			}
			Decline as "Decline"
			{
				type =  functions
				form = New_Order_Request
				execution type = collection of records	
				on start
				{
					actions 
					{
						thisapp.Custom_actions.orderDecline(ID);
					}
				}
			}
			Sales_Deliver as "Sales & Deliver"
			{
				type =  functions
				form = New_Order_Request
				execution type = collection of records	
				on start
				{
					actions  (Status == "Approved")
					{
						thisapp.Custom_actions.moveOrderToSales(New_Order_Request);
					}
					actions  (Status == "Moved To Sales")
					{
					update New_Order_Request[ID == input.ID]
					[
						Status = "Delivered"
					]
						thisapp.Custom_actions.deliverOrder(New_Order_Request);
					}
				}
			}
			Return_Sales as "Return Sales"
			{
				type =  functions
				form = Add_Invoice
				execution type = for each record	
				on start
				{
					actions 
					{
						thisapp.Custom_actions.returnSales(ID);
					}
				}
			}
		}
	}
	share_settings
	{
			"Warehouse Keeper"
			{
				name = "Warehouse Keeper"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Warehouse Keeper Profile\n"
				ModulePermissions
				{
					Search_Warehouse
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
					Add_Stock
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Stocks_Detials={"View","Edit"}
						}
					}
					Product_Delivery_Details
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Product_Requests={"View"}
						}
					}
					Warehouse_Stock_Adjustment_Form
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Stock_Adjustment_Requests={"View","Edit"}
							All_Stock_Transfers={"View","Edit"}
						}
					}
					Stock_Transfer_Form
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Stock_Adjustments={"View","Edit"}
						}
					}
					Stock
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
					Warehouse_View
					{
						enabled = tab
					}
				}
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have all the permissions.\n"
			}
			"Distributor"
			{
				name = "Distributor"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Distributor Profile\n"
				ModulePermissions
				{
					Product_Delivery_Details
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_List_Items={"View"}
						}
					}
					New_Order_Request
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							My_Orders_To_Deliver={"View"}
							My_Orders={"View"}
						}
					}
					Decline_Form
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
					Distributors_View
					{
						enabled = tab
					}
				}
			}
			"Retailer"
			{
				name = "Retailer"
				type = Customer_Portal
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Retailer Profile\n"
				ModulePermissions
				{
					New_Order_Request
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
				}
			}
			"Customer"
			{
				name = "Customer"
				type = Customer_Portal
				permissions = {Chat:false, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This is the default profile having only add and view permission.\n"
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users.\n\n"
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 9
		icons = true
		icons style = solid
		font = "lato"
		color options
    	{
        color = "3"
    	}
    	icon
    	{
        	type = "1"
        	name = "zc-ab-finance7"
        	background color = "yellow"
        	foreground color = "#FFFFFF"
    	}
    	logo
    	{
        	preference = "none"
        	placement = "left"
    	}
	}


	phone
	{
		section  hidden
		{
			hide = true
			icon = "holidays-dead-hand"
			form  Add_Stock
			{
				layout = left
				icon = "ui-1-bold-add"
				hide = true
			}
			form  Add_Warehouse
			{
				layout = left
				icon = "ui-1-bold-add"
				hide = true
			}
			form  Add_Staff
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Inventory_stateform
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Decline_Form
			{
				layout = auto
				icon = "arrows-1-simple-down"
				hide = true
			}
			form  Add_Invoice
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Add_Retailer
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
		}
		section  Charts
		{
			icon = "shopping-chart"
		}
		section  Dashboards1
		{
			displayname= "Dashboards"
			page Admin_View
			{
				icon = "ui-1-dashboard-half"
			}
			page Warehouse_View
			{
				icon = "shopping-shop-location"
			}
			page Distributors_View
			{
				icon = "shopping-delivery-time"
			}
		}
		section  Suppliers
		{
			icon = "social-1-logo-creative-market"
			form  Add_Vendor
			{
				layout = auto
				icon = "users-2-a-add"
			}
			custom Vendor_Details
			{
				icon = "users-2-contacts-44"
			}
		}
		section  Purchase_Orders
		{
			displayname= "Purchase Orders"
			icon = "shopping-list"
		}
		section  Main_Inventory
		{
			displayname= "Main Inventory"
			icon = "shopping-stock"
			form  Inventory
			{
				layout = auto
				icon = "ui-2-square-add-11"
			}
			list Inventory_Details
			{
				icon = "shopping-stock"
			}
		}
		section  Warehouse
		{
			icon = "social-1-logo-shopify"
			form  Stock
			{
				layout = left
				icon = "ui-2-square-add-11"
			}
			form  Stock_Transfer_Form
			{
				layout = auto
				icon = "business-stock"
			}
			list Warehouse_Details
			{
				icon = "shopping-shop-location"
			}
			list Stocks_Detials
			{
				icon = "shopping-stock"
			}
			map Warehouse_Map
			{
				icon = "location-worl-marker"
			}
		}
		section  page
		{
			displayname= "Order Management"
			icon = "social-1-logo-evernote"
			form  New_Order_Request
			{
				layout = left
				icon = "ui-2-square-add-11"
			}
			list Orders
			{
				icon = "shopping-list"
			}
			list Pending_Orders
			{
				icon = "ui-2-hourglass"
			}
			list Approved_Orders
			{
				icon = "design-todo"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				display type = auto
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Order_ID as "Order ID"
								Ordered_Date as "Ordered Date"
								Retailer
								Expected_Delivery_Date as "Expected Delivery Date"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Order_ID as "Order ID"
								Ordered_Date as "Ordered Date"
								Retailer
								Expected_Delivery_Date as "Expected Delivery Date"
								Status
								Distributor
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Products"
		     				related field = Products
							fields
							(
								Product
								Quantity
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Move to Sales"
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Delivered_Orders
			{
				icon = "shopping-delivery-fast"
			}
			list Declined_Orders
			{
				icon = "files-remove"
			}
			list My_Orders
			{
				icon = "files-single-content-03"
			}
			list Orders_To_Deliver
			{
			}
			list My_Orders_To_Deliver
			{
			}
		}
		section  Sales
		{
			icon = "business-businessman-03"
			list Sales_Details
			{
				icon = "business-chart-bar-33"
			}
			list My_Return_Details
			{
				icon = "shopping-cart-modern-remove"
			}
			list Return_Details
			{
				icon = "arrows-1-curved-previous"
			}
			form  Return_Product
			{
				layout = left
				icon = "arrows-1-share-91"
			}
			list My_Invoice_Dues
			{
			}
			list invoice_dues
			{
				icon = "shopping-receipt-list-42"
			}
		}
		section  Customers1
		{
			displayname= "Customers"
			icon = "ui-1-analytics-88"
			custom Retailers
			{
				icon = "users-circle-10"
			}
			map Retailer_Addresses
			{
				icon = "shopping-receipt-list-43"
			}
		}
		section  Payments
		{
			icon = "business-cheque"
		}
		section  Products
		{
			icon = "shopping-gift"
			form  Add_Product
			{
				layout = auto
				icon = "ui-2-square-add-11"
			}
			list Product_Details
			{
				icon = "design-window-paragraph"
			}
		}
		section  Warehouse_Stock_Adjustments
		{
			displayname= "Warehouse Stock Adjustments"
			form  Warehouse_Stock_Adjustment_Form
			{
				layout = auto
				icon = "business-stock"
			}
			list All_Stock_Transfers
			{
				icon = "shopping-stock"
			}
			kanban Stock_Adjustment_Requests
			{
				icon = "business-stock"
			}
		}
		section  Company_Configurations
		{
			displayname= "Company Configurations"
			icon = "tech-2-p-settings"
			form  Company_Details
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			summary Company_Information
			{
				icon = "business-building"
			}
			list Distributors_Details
			{
				icon = "users-2-contacts-44"
			}
		}
		section  List_Items
		{
			displayname= "List Items"
			icon = "shopping-receipt-list-43"
			form  Product_Delivery_Details
			{
				layout = auto
				icon = "design-2-selection"
				hide = true
			}
			list All_List_Items
			{
				icon = "design-2-selection"
				hide = true
			}
		}
		section  Stock_Adjustments
		{
			displayname= "Stock Adjustments"
			list All_Stock_Adjustments
			{
				icon = "shopping-stock"
				hide = true
			}
		}
		section  Search_Warehouses
		{
			displayname= "Search Warehouses"
		}
		section  Copy_of_Search_Warehouse
		{
			displayname= "Copy of Search Warehouse"
			form  Search_Warehouse
			{
				layout = left
			}
		}
		section  Product_Delivery_Details
		{
			displayname= "Product Delivery Details"
			kanban Product_Requests
			{
				icon = "tech-ram"
			}
						pivotchart Deliveries_By_Warehouse
			{
				icon = "shopping-delivery-time"
			}
		}
		section  Production_Batches
		{
			displayname= "Production Batches"
			form  Add_Production_Batch
			{
				layout = auto
				icon = "tech-2-p-add"
			}
			list All_Production_Batches
			{
				icon = "travel-world"
			}
		}
		section  Payment_Notes
		{
			displayname= "Payment Notes"
			form  Add_Payment_Notes
			{
				layout = auto
				icon = "shopping-mobile-card"
			}
			list All_Payment_Notes
			{
				icon = "business-money-bag"
			}
			list My_Received_Payments
			{
			}
			list My_Payments
			{
			}
			 
			pivotchart Monthly_Income
			{
				icon = "shopping-credit-card-in"
			}
		}
		customize
		{
        	layout = onecolumn
		 	icons style = outline
        	font = "lato"
            style = "3"
        	color options
        	{
             	color = blue
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	tablet
	{
		section  hidden
		{
			hide = true
			icon = "ui-1-eye-ban-20"
			form  Add_Stock
			{
				layout = left
				icon = "ui-1-bold-add"
				hide = true
			}
			form  Add_Warehouse
			{
				layout = left
				icon = "ui-1-bold-add"
				hide = true
			}
			form  Add_Staff
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Inventory_stateform
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Decline_Form
			{
				layout = auto
				icon = "arrows-1-simple-down"
				hide = true
			}
			form  Add_Invoice
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Add_Retailer
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
		}
		section  Charts
		{
			icon = "shopping-chart"
		}
		section  Dashboard1
		{
			displayname= "Dashboard"
			page Admin_View
			{
				icon = "ui-1-dashboard-half"
			}
			page Warehouse_View
			{
				icon = "shopping-shop-location"
			}
			page Distributors_View
			{
				icon = "shopping-delivery-time"
			}
		}
		section  Suppliers
		{
			icon = "users-single-04"
			form  Add_Vendor
			{
				layout = auto
				icon = "users-2-a-add"
				hide = true
			}
		}
		section  Purchase_Orders
		{
			displayname= "Purchase Orders"
			icon = "shopping-cart-modern"
		}
		section  Main_Inventory
		{
			displayname= "Main Inventory"
			icon = "design-app"
			form  Inventory
			{
				layout = auto
				icon = "ui-2-square-add-11"
			}
			list Inventory_Details
			{
				icon = "shopping-stock"
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
			 				layout type = -1
		     				title = "Overview"
							fields
							(
								Product_Code as "Product Code"
								Qty_Inhand as "Qty. Inhand"
								Qty_Distributed as "Qty. Distributed"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on left swipe
									(
										"Add to Warehouse Stock"
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Product_Code as "Product Code"
								Qty_Inhand as "Qty. Inhand"
								Qty_Distributed as "Qty. Distributed"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
			 				"Add to Warehouse Stock"
    	 				)
    				)
				)
			}
		}
		section  Warehouse
		{
			icon = "business-building"
			form  Stock
			{
				layout = left
				icon = "ui-2-square-add-11"
			}
			form  Stock_Transfer_Form
			{
				layout = auto
				icon = "business-stock"
			}
			list Warehouse_Details
			{
				icon = "shopping-shop-location"
			}
			list Stocks_Detials
			{
				icon = "shopping-stock"
			}
			map Warehouse_Map
			{
				icon = "location-worl-marker"
			}
		}
		section  page
		{
			displayname= "Order Management"
			icon = "business-notes"
			form  New_Order_Request
			{
				layout = left
				icon = "ui-2-square-add-11"
			}
			list Orders
			{
				icon = "shopping-list"
			}
			list Pending_Orders
			{
				icon = "ui-2-hourglass"
			}
			list Approved_Orders
			{
				icon = "design-todo"
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
			 				layout type = -1
		     				title = "Overview"
							fields
							(
				"Move to Sales"
								Order_ID as "Order ID"
								Ordered_Date as "Ordered Date"
								Retailer
								Expected_Delivery_Date as "Expected Delivery Date"
								Status
								Distributor
								Products.Product as "Products"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Order_ID as "Order ID"
								Ordered_Date as "Ordered Date"
								Retailer
								Expected_Delivery_Date as "Expected Delivery Date"
								Status
								Distributor
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Move to Sales"
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Delivered_Orders
			{
				icon = "shopping-delivery-fast"
			}
			list Declined_Orders
			{
				icon = "files-remove"
			}
			list My_Orders
			{
				icon = "files-single-content-03"
			}
			list Orders_To_Deliver
			{
			}
			list My_Orders_To_Deliver
			{
			}
		}
		section  Sales
		{
			icon = "business-tie-02"
			list Sales_Details
			{
				icon = "business-chart-bar-33"
			}
			list My_Return_Details
			{
				icon = "shopping-cart-modern-remove"
			}
			list Return_Details
			{
				icon = "arrows-1-curved-previous"
			}
			form  Return_Product
			{
				layout = left
				icon = "arrows-1-share-91"
			}
			list My_Invoice_Dues
			{
			}
			list invoice_dues
			{
				icon = "shopping-receipt-list-42"
			}
		}
		section  Customers1
		{
			displayname= "Customers"
			icon = "users-multiple-11"
			custom Retailers
			{
				icon = "users-circle-10"
			}
			map Retailer_Addresses
			{
				icon = "shopping-receipt-list-43"
			}
		}
		section  Payments1
		{
			displayname= "Payments"
			icon = "files-book-07"
		}
		section  Warehouse_Stock_Adjustments
		{
			displayname= "Warehouse Stock Adjustments"
			form  Warehouse_Stock_Adjustment_Form
			{
				layout = auto
				icon = "business-stock"
			}
			list All_Stock_Transfers
			{
				icon = "shopping-stock"
			}
			kanban Stock_Adjustment_Requests
			{
				icon = "business-stock"
			}
		}
		section  Products
		{
			icon = "ui-2-archive"
			form  Add_Product
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
		}
		section  Company_Configuration
		{
			displayname= "Company Configuration"
			icon = "ui-1-settings-gear-64"
			form  Company_Details
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			summary Company_Information
			{
				icon = "business-building"
			}
			custom Vendor_Details
			{
				icon = "users-2-contacts-44"
			}
			list Distributors_Details
			{
				icon = "users-2-contacts-44"
			}
			list Product_Details
			{
				icon = "design-window-paragraph"
			}
		}
		section  List_Items
		{
			displayname= "List Items"
			icon = "shopping-receipt-list-43"
			form  Product_Delivery_Details
			{
				layout = auto
				icon = "design-2-selection"
				hide = true
			}
			list All_List_Items
			{
				icon = "design-2-selection"
				hide = true
			}
		}
		section  Stock_Adjustments
		{
			displayname= "Stock Adjustments"
			list All_Stock_Adjustments
			{
				icon = "shopping-stock"
				hide = true
			}
		}
		section  Search_Warehouses
		{
			displayname= "Search Warehouses"
		}
		section  Copy_of_Search_Warehouse
		{
			displayname= "Copy of Search Warehouse"
			form  Search_Warehouse
			{
				layout = left
			}
		}
		section  Product_Delivery_Details
		{
			displayname= "Product Delivery Details"
			kanban Product_Requests
			{
				icon = "tech-ram"
			}
			 
			pivotchart Deliveries_By_Warehouse
			{
				icon = "shopping-delivery-time"
			}
		}
		section  Production_Batches
		{
			displayname= "Production Batches"
			form  Add_Production_Batch
			{
				layout = auto
				icon = "tech-2-p-add"
			}
			list All_Production_Batches
			{
				icon = "travel-world"
			}
		}
		section  Payment_Notes
		{
			displayname= "Payment Notes"
			form  Add_Payment_Notes
			{
				layout = auto
				icon = "shopping-mobile-card"
			}
			list All_Payment_Notes
			{
				icon = "business-money-bag"
			}
			list My_Received_Payments
			{
			}
			list My_Payments
			{
			}
			 
			pivotchart Monthly_Income
			{
				icon = "shopping-credit-card-in"
			}
		}
		customize
		{
        	layout = onecolumn
		 	icons style = outline
        	font = "lato"
            style = "3"
        	color options
        	{
             	color = blue
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	translation
{
{"Language_Settings":{"LANGAGUE_WITH_LOGIN":"user"}}
}
	reports configuration
	{
	
		Version = 2000024271043
		Key     = "RqXGATGxwrMAa2vaHHZKE2ANWKe8bOAuQ3HZC91OgDyKdaeWq9nD2ZhsDstr1J23pvJe9r4JAT2GKxDrX01aXWOpwMxDTSdnSwnw"
	}
}
